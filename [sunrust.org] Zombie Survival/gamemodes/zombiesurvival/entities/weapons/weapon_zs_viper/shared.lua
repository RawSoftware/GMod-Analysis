SWEP.PrintName = "Viper"  SWEP.Base = "weapon_zs_zombie"  SWEP.MeleeDamage = 26 SWEP.MeleeForceScale = 1.25  SWEP.Secondary.Delay = 3.2 AccessorFuncDT(SWEP, "TongueTime", "Float", 2)  SWEP.WorldModel = Model("models/weapons/v_nFZA.mdl")  SWEP.MaxViperTraps = 3  SWEP.AcidLeft = 0 SWEP.NextAcid = 0  function SWEP:ApplyMeleeDamage(ent, trace, damage)  if ent:IsPlayer() then         ent:PoisonDamage(damage / 2, self:GetOwner(), self, trace.HitPos)  self.BaseClass.ApplyMeleeDamage(self, ent, trace, damage / 2)   if SERVER and self:GetOwner():GetStatus("viper_frenzy") then             ent:AddBleedDamage(damage / 2, self:GetOwner())  end  else  self.BaseClass.ApplyMeleeDamage(self, ent, trace, damage)  end end  function SWEP:Reload()     if CurTime() < self:GetNextPrimaryFire() or CurTime() < self:GetNextSecondaryFire() then return end      self:SetNextSecondaryFire(CurTime() + (self.Secondary.Delay / 2))     self:SetNextPrimaryFire(CurTime() + (self.Primary.Delay / 2))      self:SetSwingAnimTime(CurTime() + 0.7)     self:GetOwner():DoReloadEvent()     self:PlayTongueAttackSound()      self:SetTongueTime(CurTime() + 0.4) end  function SWEP:Think()     if self:GetTongueTime() > 0 and CurTime() >= self:GetTongueTime() then         self:SetTongueTime(0)          self:EmitSound("npc/strider/strider_legstretch"..math.random(1, 3)..".wav", 72, math.random(146, 150))         self:SendWeaponAnim(ACT_VM_SECONDARYATTACK)          self:SetNextSecondaryFire(CurTime() + self.Secondary.Delay)         self:SetNextPrimaryFire(CurTime() + self.Primary.Delay)          if SERVER then             self:ThrowTongue()         end     end   if SERVER and self.AcidLeft > 0 and CurTime() >= self.NextAcid then         self.AcidLeft = self.AcidLeft - 1         self.NextAcid = CurTime() + 0.3         self:ThrowAcid()         if self.AcidLeft == 0 then             self:SetSpitting(false)         end  end       return self.BaseClass.Think(self) end  function SWEP:PlayAlertSound()     self:PlayAttackSound() end  function SWEP:PlayIdleSound()     local owner = self:GetOwner()     local sndname = "vo/eli_lab/al_laugh0"..math.random(2)..".wav"     for i = 1, 4 do         timer.Simple(0.04 * i,             function() if owner:IsValid() then owner:EmitSound(sndname, 75, 40 + i*8, 0.4, CHAN_AUTO) end         end)     end     self:GetOwner():EmitSound("npc/barnacle/barnacle_tongue_pull"..math.random(3)..".wav", 74, math.Rand(110,118), 0.6, CHAN_WEAPON + 20) end  function SWEP:PlaySecondaryAttackSound()     local owner = self:GetOwner()     local sndname = "vo/npc/alyx/gasp0"..math.random(2,3)..".wav"     for i = 1, 4 do         timer.Simple(0.04 * i,             function() if owner:IsValid() then owner:EmitSound(sndname, 75, 70 + i*8, 0.4, CHAN_AUTO) end         end)     end end  function SWEP:PlayTongueAttackSound()     local owner = self:GetOwner()     local sndname = "vo/streetwar/alyx_gate/al_ah.wav"     for i = 1, 4 do         timer.Simple(0.04 * i,             function() if owner:IsValid() then owner:EmitSound(sndname, 75, math.random(45,56) + i*8, 0.4, CHAN_AUTO) end         end)     end end  function SWEP:PlayAttackSound()     if SERVER then         local owner = self:GetOwner()         local sndname = "vo/npc/alyx/gasp0"..math.random(2,3)..".wav"         for i = 1, 4 do             timer.Simple(0.04 * i,                 function() if owner:IsValid() then owner:EmitSound(sndname, 75, 48 + i*8, 0.4, CHAN_WEAPON + i) end             end)         end     end end  function SWEP:PlayHitSound()     local owner = self:GetOwner()     owner:EmitSound("NPC_FastZombie.AttackHit", nil, nil, nil, CHAN_WEAPON + 5) end  function SWEP:SecondaryAttack()  local owner = self:GetOwner()  if CurTime() < self:GetNextPrimaryFire() or CurTime() < self:GetNextSecondaryFire() or IsValid(owner.FeignDeath) then return end   self:SetNextSecondaryFire(CurTime() + self.Secondary.Delay)  self:SetNextPrimaryFire(CurTime() + self.Primary.Delay)   self:EmitSound("npc/fast_zombie/leap1.wav", 74, math.Rand(110, 130))  self:GetOwner():RawCapLegDamage(CurTime() + 2)  self.IdleAnimation = CurTime() + self:SequenceDuration()  owner:DoReloadEvent()  self:PlaySecondaryAttackSound()   if SERVER then  self:SetSpitting(true)  timer.Simple(0.3, function()  if self:IsValid() then  self.AcidLeft = 4  end  end)  end end  function SWEP:CanAltAttack()     if CurTime() < self:GetNextPrimaryFire() or CurTime() < self:GetNextSecondaryFire() then return end     return true end  function SWEP:AltAttack()     if self:CanAltAttack() then         self:SetNextSecondaryFire(CurTime() + self.Secondary.Delay * 0.6)         self:SetNextPrimaryFire(CurTime() + (self.Primary.Delay / 2))          self:GetOwner():DoZombieEvent()         self:EmitSound("npc/fast_zombie/leap1.wav", 74, math.Rand(110, 130))         self:EmitSound(string.format("npc/barnacle/neck_snap%d.wav", math.random(1, 2)), 72, math.Rand(78, 86))         self:SendWeaponAnim(ACT_VM_HITCENTER)         self.IdleAnimation = CurTime() + self:SequenceDuration()          self:PlaySecondaryAttackSound()          if SERVER then             timer.Simple(0.7, function()                 if not IsValid(self) then return end                 self:ThrowViperTrap()             end)         end     end end  function SWEP:SetSwingAnimTime(time)     self:SetDTFloat(3, time) end  function SWEP:GetSwingAnimTime()     return self:GetDTFloat(3) end  function SWEP:StartSwinging()  self.BaseClass.StartSwinging(self) end  function SWEP:SetSpitting(spitting)  self:SetDTBool(1, spitting) end  function SWEP:GetSpitting()  return self:GetDTBool(1) end SWEP.IsSpitting = SWEP.GetSpitting