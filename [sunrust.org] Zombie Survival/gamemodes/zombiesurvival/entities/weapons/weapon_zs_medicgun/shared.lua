SWEP.PrintName = "'Savior' Medic Gun" SWEP.Description = "Fires medical darts which can heal at a range, and grant a small speed boost. It can be fired rapidly and used at a range, but can miss the target." SWEP.Slot = 4 SWEP.SlotPos = 0  SWEP.Base = "weapon_zs_baseproj" local BaseClass = baseclass.Get("weapon_zs_baseproj")  SWEP.HoldType = "pistol"  SWEP.ViewModel = "models/weapons/c_pistol.mdl" SWEP.WorldModel = "models/weapons/w_pistol.mdl" SWEP.UseHands = true  SWEP.CSMuzzleFlashes = false  SWEP.ReloadSound = Sound("weapons/pistol/pistol_reload1.wav")  SWEP.Primary.Delay = 1.4  SWEP.Primary.ClipSize = 20 SWEP.Primary.DefaultClip = 150 SWEP.Primary.Ammo = "Battery" SWEP.RequiredClip = 5  SWEP.WalkSpeed = SPEED_NORMAL  SWEP.ConeMax = 0 SWEP.ConeMin = 0  SWEP.ReloadSpeed = 0.85  SWEP.BuffDuration = 10  SWEP.IronSightsPos = Vector(-5.95, 3, 2.75) SWEP.IronSightsAng = Vector(-0.15, -1, 2)  SWEP.AllowQualityWeapons = true SWEP.HasMedicalAura = true  SWEP.Heal = 4.3  SWEP.HideStat = {     Damage = true,     ResistanceAmmoAs = true,     ConeMax = true,     ConeMin = true }  GAMEMODE:SetPrimaryWeaponModifier(SWEP, WEAPON_MODIFIER_CLIP_SIZE, 5) GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_BUFF_DURATION, 2) GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_FIRE_DELAY, -0.07, 1) GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_HEALING, 0.75) GAMEMODE:AddNewRemantleBranch(SWEP, 1, "'Transfusion' Medic Gun", "Splits healing between health and blood armor, grants defence boosts", function(wept)  if SERVER then  wept.EntModify = function(self, ent)  local owner = self:GetOwner()  ent:SetDTInt(0, 1)  ent:SetSeeked(self:GetSeekedPlayer() or nil)  ent.Heal = self.Heal * (owner.MedDartEffMul or 1)  ent.BuffDuration = wept.BuffDuration              local valid_seeked = IsValid(self:GetSeekedPlayer())             self.Primary.ProjVelocity = valid_seeked and 600 or 2000  end  else  for k,v in pairs(wept.VElements) do  v.color = Color(215, 90, 120, 255)  end   wept.HasMedicalAuraBlood = true  end end).CollectiveName = "Transfusion"  function SWEP:GetFireDelay()  local owner = self:GetOwner()  return self.Primary.Delay * (owner.MedgunFireDelayMul or 1) end  function SWEP:GetReloadSpeedMultiplier()  local owner = self:GetOwner()  return BaseClass.GetReloadSpeedMultiplier(self) * (owner.MedgunReloadSpeedMul or 1)   end  function SWEP:CanSecondaryAttack()  if self:GetOwner():IsHolding() or self:GetOwner():GetBarricadeGhosting() or self:GetReloadFinish() > 0 then return false end   return self:GetNextSecondaryFire() <= CurTime() end  function SWEP:SecondaryAttack()     if not self:CanSecondaryAttack() then return end      self:SetNextSecondaryFire(CurTime() + 0.25)      local owner = self:GetOwner()     if owner:IsSkillActive(SKILL_RASHTARGETING) then return end      local trtbl = owner:CompensatedPenetratingMeleeTrace(1024, 2, nil, nil, true)     local targetent, lowest_hp = nil, 999999     for _, tr in pairs(trtbl) do         local test = tr.Entity         if test and test:IsValidLivingHuman() and test:Health() < lowest_hp then             targetent = test             lowest_hp = test:Health()         end     end      if CLIENT then         self:EmitSound(targetent and "npc/scanner/combat_scan4.wav" or "npc/scanner/scanner_scan5.wav", 65, locked and 75 or 250)     end     self:SetSeekedPlayer(targetent) end  function SWEP:SetSeekedPlayer(ent)  self:SetDTEntity(6, ent) end  function SWEP:GetSeekedPlayer()  return self:GetDTEntity(6) end