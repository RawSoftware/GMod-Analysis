SWEP.PrintName = "'Barrage' Grenade Launcher" SWEP.Description = "Fires multiple grenades that detonate on impact with enemies or on the third bounce."  SWEP.Base = "weapon_zs_baseproj" local BaseClass = baseclass.Get("weapon_zs_baseproj")  SWEP.HoldType = "smg"  SWEP.ViewModel = "models/weapons/cstrike/c_smg_ump45.mdl" SWEP.WorldModel = "models/weapons/w_smg_ump45.mdl" SWEP.UseHands = true  SWEP.CSMuzzleFlashes = false  SWEP.Primary.ClipSize = 4 SWEP.Primary.Automatic = true SWEP.Primary.Ammo = "impactmine" SWEP.Primary.Delay = 1.2 SWEP.Primary.DefaultClip = 4 SWEP.Primary.Damage = 35 SWEP.Primary.NumShots = 3  SWEP.ConeMax = 8 SWEP.ConeMin = 7.5  SWEP.WalkSpeed = SPEED_SLOW  SWEP.Tier = 4  SWEP.Taper = 0.8 SWEP.Radius = 66  SWEP.MaxMines = 10  SWEP.FireAnimSpeed = 0.5 SWEP.ReloadSpeed   = 0.85  GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_RELOAD_SPEED, 0.1, 1) GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_FIRE_DELAY, -0.1, 1) GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_CLIP_SIZE, 1)  local branch = GAMEMODE:AddNewRemantleBranch(SWEP, 1, "'Enkindler' Fire Mine Layer", "A mine layer that lays mines that ignite zombies.", function(wept)  wept.Primary.NumShots = 1  wept.Primary.ClipSize = 1  wept.Primary.Sound = Sound("weapons/grenade_launcher1.wav")  wept.Primary.Damage = wept.Primary.Damage * 1.1  wept.Primary.Projectile = "projectile_impactmine_kin"   function wept:EntModify(ent)  ent:SetDTFloat(0, CurTime())  end   wept.ReloadSound = Sound("weapons/ar2/ar2_reload.wav")  wept.ViewModelFOV = 60   wept.ConeMax = 0.25  wept.ConeMin = 0      wept.Taper = 0.6   wept.HoldType = "shotgun"   wept.ViewModel = "models/weapons/c_rpg.mdl"  wept.WorldModel = "models/weapons/w_rocket_launcher.mdl"   function wept:CanPrimaryAttack()  if BaseClass.CanPrimaryAttack(self) then  local c = 0  for _, ent in pairs(ents.FindByClass("projectile_impactmine_kin")) do  if ent:GetDTFloat(0) + 150 > CurTime() and ent:GetOwner() == self:GetOwner() then  c = c + 1  end  end   if c >= self.MaxMines then return false end   return true  end   return false  end   function wept:CanSecondaryAttack()  if self:GetOwner():IsHolding() or self:GetOwner():GetBarricadeGhosting() or self:GetReloadFinish() > 0 then return false end   return self:GetNextSecondaryFire() <= CurTime()  end   function wept:SecondaryAttack()  if not self:CanSecondaryAttack() then return end   self:SetNextSecondaryFire(CurTime() + 0.1)   local owner = self:GetOwner()  local hitpos = owner:CompensatedMeleeTrace(2048, 1, nil, nil, false).HitPos   if SERVER then  for _, ent in pairs(ents.FindInSphere(hitpos, 24)) do  if ent:GetClass() == "projectile_impactmine_kin" and ent:GetOwner() == owner then  local mine = ents.Create("prop_ammo")  if mine:IsValid() then  mine:SetAmmo(1)  mine:SetAmmoType("impactmine")  mine:SetPos(ent:GetStartPos())  mine:SetAngles(ent:GetAngles())  mine:Spawn()  end   if owner:IsValidLivingHuman() then  mine.NoPickupsTime = CurTime() + 15  mine.NoPickupsOwner = owner  end   ent:Remove()  end  end  end  end   function wept:EmitFireSound()  self:EmitSound(self.Primary.Sound, 65, math.random(107, 113), 0.6)  end   function wept:EmitReloadSound()  if IsFirstTimePredicted() then  self:EmitSound(self.ReloadSound, 60, 110, 0.5, CHAN_WEAPON + 21)  end  end   wept.HUD3DPos = Vector(4, 0, 15)  wept.HUD3DAng = Angle(0, 180, 180)  wept.HUD3DScale = 0.04  wept.HUD3DBone = "base"   wept.VElements = {  ["base++++"] = { type = "Model", model = "models/props_lab/rotato.mdl", bone = "base", rel = "base", pos = Vector(16, 9, -9), angle = Angle(0, 0, 0), size = Vector(1, 1, 1), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["base+++"] = { type = "Model", model = "models/props_lab/rotato.mdl", bone = "base", rel = "base", pos = Vector(22, 9, -9), angle = Angle(0, 0, 0), size = Vector(1, 1, 1), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["base++++++"] = { type = "Model", model = "models/props_junk/propane_tank001a.mdl", bone = "base", rel = "base", pos = Vector(33.765, 9, -4.676), angle = Angle(0, -90, 90), size = Vector(0.5, 0.5, 1), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_lab/door_klab01", skin = 0, bodygroup = {} },  ["base"] = { type = "Model", model = "models/weapons/c_shotgun.mdl", bone = "base", rel = "", pos = Vector(8, -4.5, -21), angle = Angle(90, -90, 0), size = Vector(1, 1, 1), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["base+++++++"] = { type = "Model", model = "models/props_junk/popcan01a.mdl", bone = "base", rel = "base", pos = Vector(30.649, 8.5, -9.87), angle = Angle(0, 0, 0), size = Vector(0.4, 0.4, 0.4), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_lab/door_klab01", skin = 0, bodygroup = {} },  ["base+"] = { type = "Model", model = "models/props_lab/rotato.mdl", bone = "base", rel = "base", pos = Vector(36, 9, -9), angle = Angle(0, 0, 0), size = Vector(1, 1, 1), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["base++"] = { type = "Model", model = "models/props_lab/rotato.mdl", bone = "base", rel = "base", pos = Vector(42, 9, -9), angle = Angle(0, 0, 0), size = Vector(1, 1, 1), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} }  }   wept.WElements = {  ["base+++++"] = { type = "Model", model = "models/weapons/w_shotgun.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(34.805, 9, -9), angle = Angle(-7, 180, 0), size = Vector(1, 1, 1), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["base+++"] = { type = "Model", model = "models/props_lab/rotato.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(22, 9, -9), angle = Angle(0, 0, 0), size = Vector(1, 1, 1), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["base++++++"] = { type = "Model", model = "models/props_junk/propane_tank001a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(33.765, 9, -4.676), angle = Angle(0, -90, 90), size = Vector(0.5, 0.5, 1), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_lab/door_klab01", skin = 0, bodygroup = {} },  ["base++"] = { type = "Model", model = "models/props_lab/rotato.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(42, 9, -9), angle = Angle(0, 0, 0), size = Vector(1, 1, 1), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["base"] = { type = "Model", model = "models/props_junk/popcan01a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(-16.5, 8.5, -11), angle = Angle(0, 0, 180), size = Vector(1, 1, 1), color = Color(255, 255, 255, 0), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["base+++++++"] = { type = "Model", model = "models/props_junk/popcan01a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(30.649, 8.5, -9.87), angle = Angle(0, 0, 0), size = Vector(0.4, 0.4, 0.4), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_lab/door_klab01", skin = 0, bodygroup = {} },  ["base+"] = { type = "Model", model = "models/props_lab/rotato.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(36, 9, -9), angle = Angle(0, 0, 0), size = Vector(1, 1, 1), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["base++++"] = { type = "Model", model = "models/props_lab/rotato.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(16, 9, -9), angle = Angle(0, 0, 0), size = Vector(1, 1, 1), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} }  }   function wept:DrawHUD()  local wid, hei = 384, 16  local x, y = ScrW() - wid - 128, ScrH() - hei - 128  local texty = y - 4 - draw.GetFontHeight("ZSHUDFont")   local c = 0  if not self.NextMineCheckTime or self.NextMineCheckTime < CurTime() then  for _, ent in pairs(ents.FindByClass("projectile_impactmine_kin")) do  if ent:GetDTFloat(0) + 150 > CurTime() and ent:GetOwner() == self:GetOwner() then  c = c + 1  end  end  self.CachedMines = c  self.NextMineCheckTime = CurTime() + 1  else  c = self.CachedMines  end   local charges = self:GetPrimaryAmmoCount()  local chargetxt = "Mines: " .. c .. " / " .. self.MaxMines  if charges > 0 then  draw.SimpleText(chargetxt, "ZSHUDFont", x + wid, texty, COLOR_CYAN, TEXT_ALIGN_RIGHT)  end   if GAMEMODE:ShouldDraw2DWeaponHUD() then  self:Draw2DHUD()  end   if GetConVar("crosshair"):GetInt() ~= 1 then return end  self:DrawCrosshairDot()  end end) branch.CollectiveName = "Enkindler" branch.Killicon = "weapon_zs_enkindler" GAMEMODE:AttachWeaponModifierToBranch(branch, WEAPON_MODIFIER_RELOAD_SPEED, 0.1, 1) GAMEMODE:AttachWeaponModifierToBranch(branch, WEAPON_MODIFIER_MAXIMUM_MINES, 1)  function SWEP:EmitFireSound()  self:EmitSound("weapons/grenade_launcher1.wav", 70, math.random(118, 124), 0.3)  self:EmitSound("npc/attack_helicopter/aheli_mine_drop1.wav", 70, 100, 0.7, CHAN_AUTO + 20) end 