SWEP.Base = "weapon_zs_zombie"  SWEP.PrintName = "Corruptor" SWEP.WorldModel = "models/player/zombie_classic_hbfix.mdl"  SWEP.MeleeDamage = 28  function SWEP:Initialize()  if CLIENT then  self:SCKInit()  end end  function SWEP:Reload()  self:SecondaryAttack() end  function SWEP:ApplyMeleeDamage(ent, trace, damage)  local owner = self:GetOwner()   if ent:IsPlayer() then  ent:GiveStatus("debuff_frightened", 6, owner)  ent:GiveStatus("debuff_corruptedthorns", 6, owner)  elseif ent.HealthLock then  damage = damage * 3.5  end      if owner.WasNearCorrupted and owner.WasNearCorrupted >= CurTime() then         damage = damage * 1.5     end   self.BaseClass.ApplyMeleeDamage(self, ent, trace, damage) end   function SWEP:StartMoaning() end  function SWEP:StopMoaning() end  function SWEP:IsMoaning()  return false end  function SWEP:PlayHitSound()  self:EmitSound("npc/zombie/claw_strike"..math.random(3)..".wav", 75, math.random(80, 90), nil, CHAN_AUTO) end  function SWEP:PlayMissSound()  self:EmitSound("npc/zombie/claw_miss"..math.random(2)..".wav", 75, math.random(80, 90), nil, CHAN_AUTO) end  function SWEP:PlayAttackSound()  self:EmitSound("physics/concrete/boulder_impact_hard3.wav", 75, 250, 1) end  function SWEP:PlayAlertSound() end  function SWEP:PlayIdleSound() end  local function DoFleshThrow(pl, wep)  if pl:IsValid() and pl:Alive() and wep:IsValid() then  pl:ResetSpeed()  pl.LastRangedAttack = CurTime()   if SERVER then  local startpos = pl:GetShootPos()  local aimang = pl:EyeAngles()  local ang = Angle(aimang.p, aimang.y, aimang.r)   local ent = ents.Create("projectile_corruption")  if ent:IsValid() then  ent:SetPos(startpos)  ent:SetOwner(pl)  ent:Spawn()   local phys = ent:GetPhysicsObject()  if phys:IsValid() then  phys:SetVelocityInstantaneous(ang:Forward() * 260)  end  end   pl:EmitSound("ambient/levels/labs/electric_explosion5.wav", 70, 70)  end  end end  function SWEP:SecondaryAttack()  local owner = self:GetOwner()  if CurTime() < self:GetNextPrimaryFire() or CurTime() < self:GetNextSecondaryFire() or IsValid(owner.FeignDeath) then return end   self:SetNextSecondaryFire(CurTime() + 2.5)  self:SetNextPrimaryFire(CurTime() + self.Primary.Delay)   self:GetOwner():DoZombieEvent()  self:EmitSound("ambient/levels/labs/electric_explosion4.wav", 65, 230)  self:SendWeaponAnim(ACT_VM_HITCENTER)  self.IdleAnimation = CurTime() + self:SequenceDuration()   timer.Simple(0.6, function() DoFleshThrow(owner, self) end) end 