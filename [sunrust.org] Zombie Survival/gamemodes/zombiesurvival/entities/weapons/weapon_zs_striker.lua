AddCSLuaFile() local BaseClass = baseclass.Get("weapon_zs_basemelee")  SWEP.PrintName = "'Striker' Pulse Saber" SWEP.Description = "Drains pulse ammo on attack for increased damage and slowing effect."  if CLIENT then  SWEP.ViewModelFOV = 55  SWEP.ShowViewModel = false  SWEP.ShowWorldModel = false   SWEP.VElements = {  ["guard+"] = { type = "Model", model = "models/props_combine/combinebutton.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "handle", pos = Vector(-1.839, -0.288, 4.507), angle = Angle(179.07, 0, -180), size = Vector(0.146, 0.116, 0.17), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["blade++"] = { type = "Model", model = "models/hunter/plates/plate1x5.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "handle", pos = Vector(0.893, 0, 21.139), angle = Angle(0, -180, -90), size = Vector(0.075, 0.119, 0.05), color = Color(255, 255, 255, 0), surpresslightning = true, material = "models/spawn_effect2", skin = 0, bodygroup = {} },  ["blade+"] = { type = "Model", model = "models/props_combine/combine_train02b.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "handle", pos = Vector(-0.044, -0.01, 19.701), angle = Angle(0, -90, -90), size = Vector(0.01, 0.05, 0.014), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_combine/combine_monitorbay_sheet", skin = 0, bodygroup = {} },  ["guard"] = { type = "Model", model = "models/props_combine/combine_barricade_tall01a.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "handle", pos = Vector(2.086, 0, 4.829), angle = Angle(90.364, 0, 0), size = Vector(0.026, 0.026, 0.025), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["handle"] = { type = "Model", model = "models/props_c17/canister01a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(2.846, 1.501, 1.062), angle = Angle(174.94, 175.863, 0.009), size = Vector(0.209, 0.109, 0.25), color = Color(150, 150, 150, 255), surpresslightning = false, material = "models/props_combine/metal_combinebridge001", skin = 0, bodygroup = {} }  }   SWEP.WElements = {  ["guard+"] = { type = "Model", model = "models/props_combine/combinebutton.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "handle", pos = Vector(-1.839, -0.288, 4.507), angle = Angle(179.07, 0, -180), size = Vector(0.146, 0.116, 0.17), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["blade++"] = { type = "Model", model = "models/hunter/plates/plate1x5.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "handle", pos = Vector(0.893, 0, 21.139), angle = Angle(0, -180, -90), size = Vector(0.075, 0.119, 0.05), color = Color(255, 255, 255, 0), surpresslightning = true, material = "models/spawn_effect2", skin = 0, bodygroup = {} },  ["blade+"] = { type = "Model", model = "models/props_combine/combine_train02b.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "handle", pos = Vector(-0.044, -0.01, 19.701), angle = Angle(0, -90, -90), size = Vector(0.01, 0.05, 0.014), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_combine/combine_monitorbay_sheet", skin = 0, bodygroup = {} },  ["guard"] = { type = "Model", model = "models/props_combine/combine_barricade_tall01a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "handle", pos = Vector(2.086, 0, 4.829), angle = Angle(90.364, 0, 0), size = Vector(0.026, 0.026, 0.025), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["handle"] = { type = "Model", model = "models/props_c17/canister01a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(3.339, 1.48, 1.046), angle = Angle(-174.7, -162.51, -2.84), size = Vector(0.209, 0.109, 0.25), color = Color(150, 150, 150, 255), surpresslightning = false, material = "models/props_combine/metal_combinebridge001", skin = 0, bodygroup = {} }  }   local colBG = Color(16, 16, 16, 90)  local colRed = Color(220, 0, 0, 230)  local colWhite = Color(220, 220, 220, 230)   function SWEP:OnRemove()  local owner = self:GetOwner()  if MySelf == owner then  self.PowerSound:Stop()  end   BaseClass.OnRemove(self)  end   function SWEP:DrawHUD()  local screenscale = BetterScreenScale()   local wid, hei = 180 * screenscale, 64 * screenscale  local x, y = ScrW() - wid - screenscale * 128, ScrH() - hei - screenscale * 72  local spare = self:GetPrimaryAmmoCount()   draw.RoundedBox(16, x, y, wid, hei, colBG)  draw.SimpleTextBlurry(spare, spare >= 1000 and "ZSHUDFont" or "ZSHUDFontBig", x + wid * 0.5, y + hei * 0.5, spare == 0 and colRed or colWhite, TEXT_ALIGN_CENTER, TEXT_ALIGN_CENTER)   BaseClass.DrawHUD(self)  end   function SWEP:PreDrawViewModel(vm)  self.BaseClass.PreDrawViewModel(self, vm)   local colV = self.VElements["blade++"].color  colV.a = math.Approach(colV.a, self:GetActive() and 255 or 0, FrameTime() * 800)  end   function SWEP:DrawWorldModel()  self.BaseClass.DrawWorldModel(self)   local colW = self.WElements["blade++"].color  colW.a = math.Approach(colW.a, self:GetActive() and 255 or 0, FrameTime() * 800)  end end  SWEP.Base = "weapon_zs_basemelee"  SWEP.HoldType = "melee2"  SWEP.ViewModel = "models/weapons/c_crowbar.mdl" SWEP.WorldModel = "models/weapons/w_crowbar.mdl" SWEP.UseHands = true  SWEP.MeleeDamage = 135 SWEP.MeleeDamagePenalty = 80 SWEP.MeleeRange = 70 SWEP.MeleeSize = 1.2 SWEP.LegDamage = 10  SWEP.Primary.Delay = 0.9 SWEP.Primary.Ammo = "pulse" SWEP.Primary.ClipSize = 15 GAMEMODE:SetupDefaultClip(SWEP.Primary) SWEP.RequiredClip = 4  SWEP.Tier = 4  SWEP.SwingRotation = Angle(60, 0, -80) SWEP.SwingOffset = Vector(0, -30, 0) SWEP.SwingTime = 0.3 SWEP.SwingHoldType = "melee2"  SWEP.HitAnim = ACT_VM_MISSCENTER  SWEP.CanSlow = true  SWEP.BlockRotation = Angle(-5, 40, -60) SWEP.BlockOffset = Vector(-16, 10, 8)  SWEP.Stability = 60 SWEP.BlockReduction = 0.5  SWEP.AllowQualityWeapons = true  SWEP.FireModes = 2 SWEP.FireModeNames = {"Activated", "Deactivated"}  SWEP.StaminaUsage = 0.19 SWEP.IsDodge = 0.6  GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_FIRE_DELAY, -0.05, 1) GAMEMODE:AddNewRemantleBranch(SWEP, 1, "'Exousia' Pulse Saber", "Bypasses zombie damage reduction, no slow, reduced damage", function(wept)  wept.MeleeDamage = wept.MeleeDamage * 0.9  wept.MeleeDamagePenalty = wept.MeleeDamagePenalty * 0.9  wept.CanSlow = false  wept.ResistanceAmmoAs = "ignore"   if CLIENT then  wept.VElements["blade++"].color = Color(255, 0, 255, 0)  wept.WElements["blade++"].color = Color(255, 0, 255, 0)  end end).CollectiveName = "Exousia"  function SWEP:Initialize()  self.BaseClass.Initialize(self)   if CLIENT then  local owner = self:GetOwner()  if owner == MySelf then  self.PowerSound = CreateSound(self, "ambient/machines/combine_shield_touch_loop1.wav")  end  end end  function SWEP:Deploy()  if self:HasEnergy() then  if CLIENT then  local owner = self:GetOwner()  if MySelf == owner then  self.PowerSound:PlayEx(0.8, 70)  self:EmitSound("ambient/levels/labs/electric_explosion1.wav", 75, math.random(200, 210), nil, CHAN_AUTO)  end  end  self:SetActive(true)  end   return BaseClass.Deploy(self) end  function SWEP:Holster()  if CurTime() >= self:GetSwingEnd() then  if CLIENT then  local owner = self:GetOwner()  if MySelf == owner then  self.PowerSound:Stop()  if self:HasEnergy() then  self:EmitSound("weapons/physgun_off.wav", 75, math.random(120, 130), nil, CHAN_AUTO)  end  end  end  self:SetActive(false)  end   return BaseClass.Holster(self) end  function SWEP:Think()  BaseClass.Think(self)   if CLIENT then  local owner = self:GetOwner()  if MySelf == owner then  if self:HasEnergy() then  self.PowerSound:PlayEx(0.8, 70)  else  self.PowerSound:Stop()  end  end  end   if self:HasEnergy() then  self.DamageType = DMG_DISSOLVE  self.NoHitSoundFlesh = true  self.PointsMultiplier = self.CanSlow and GAMEMODE.PulsePointsMultiplier or nil  self:SetActive(true)  else  self.DamageType = DMG_SLASH  self.NoHitSoundFlesh = nil  self.PointsMultiplier = nil  self:SetActive(false)  end end  function SWEP:PlaySwingSound()  self:EmitSound("weapons/iceaxe/iceaxe_swing1.wav", 75, math.random(60, 70))  if self:HasEnergy() then  self:EmitSound("weapons/physcannon/energy_sing_flyby2.wav", 75, math.random(155, 175), nil, CHAN_AUTO)  end end  function SWEP:PlayHitSound()  self:EmitSound("weapons/melee/golf club/golf_hit-0"..math.random(4)..".ogg")  if self:HasEnergy() then  self:EmitSound("weapons/physcannon/superphys_launch"..math.random(4)..".wav", 75, math.random(180, 200), 0.7, CHAN_AUTO)  end end  function SWEP:PlayHitFleshSound()  self:EmitSound("ambient/machines/slicer"..math.random(4)..".wav", 75, math.random(105, 115), nil, CHAN_AUTO)  if self:HasEnergy() then  self:EmitSound("weapons/physcannon/superphys_launch"..math.random(4)..".wav", 75, math.random(180, 200), 0.7, CHAN_AUTO)  end end  function SWEP:OnMeleeHit(hitent, hitflesh, tr)  self.OriginalMeleeDamage = self.MeleeDamage  if hitent:IsValidLivingZombie() and gamemode.Call("PlayerShouldTakeDamage", hitent, self:GetOwner()) then  if self:HasEnergy() then  local heavy = self:IsHeavy()   util.CreatePulseImpactEffect(tr.HitPos, tr.HitNormal)  hitent:AddLegDamageExt((self.CanSlow and self.LegDamage or 0) * (heavy and 1 or 0.7), self:GetOwner(), self, SLOWTYPE_PULSE)  self:TakePrimaryAmmo(self.RequiredClip)  else  self.MeleeDamage = self.MeleeDamage - self.MeleeDamagePenalty  end  end end  function SWEP:BashEffect(tr, ent)  if SERVER and self.CanSlow then  ent:AddLegDamageExt(self.LegDamage, self:GetOwner(), self, SLOWTYPE_PULSE)  end end  function SWEP:PostOnMeleeHit(hitent, hitflesh, tr)  self.MeleeDamage = self.OriginalMeleeDamage end  function SWEP:HasEnergy()  return self:GetFireMode() == 0 and self:GetCombinedPrimaryAmmo() >= self.RequiredClip end  function SWEP:SetActive(a)  self:SetDTBool(1, a) end  function SWEP:GetActive()  return self:GetDTBool(1) end  function SWEP:PlayFireModeSwitchSound(fm)  fm = tonumber(fm)  if CLIENT and self:GetCombinedPrimaryAmmo() >= self.RequiredClip then  if fm == 1 then  self:EmitSound("weapons/physgun_off.wav", 75, math.random(120, 130), nil, CHAN_AUTO)  else  self:EmitSound("ambient/levels/labs/electric_explosion1.wav", 75, math.random(200, 210), nil, CHAN_AUTO)  end  end end 