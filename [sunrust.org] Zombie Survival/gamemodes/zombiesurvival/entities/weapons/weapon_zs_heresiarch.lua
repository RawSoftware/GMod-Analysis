AddCSLuaFile()  SWEP.PrintName = "Heresiarch"  SWEP.Base = "weapon_zs_zombie"  SWEP.ShowWorldModel = false  SWEP.GreatEvil = true  SWEP.WorldModel = "models/zombiesurvival/ticklemonster.mdl"  local adjustments_table = {  ["ValveBiped.Bip01_Spine4"] = { add = Vector( 3, -4, -1.3 ), rot = Angle( 0, 80, -90 ), sc = Vector( 1.9, 1.9, 1.9 ) },  ["ValveBiped.Bip01_Spine2"] = { add = Vector( 0, -2, 1 ), rot = Angle( 0, 0, -90 ), sc = Vector( 2.6, 1.6, 1.6 ) },  ["ValveBiped.Bip01_Spine1"] = { add = Vector( 0, -2, 0 ), rot = Angle( 0, 0, -90 ), sc = Vector( 1.4, 1.4, 1.4 ) },  ["ValveBiped.Bip01_Spine"] = { add = Vector( 0, -2, 0 ), rot = Angle( 0, 0, -90 ), sc = Vector( 1.5, 1.5, 1.5 ) },  ["ValveBiped.Bip01_Pelvis"] = { rot = Angle( 0, 0, -90 ), sc = Vector( 2.5, 2.5, 2.5 ) },    ["ValveBiped.Bip01_L_UpperArm"] = { sc = Vector( 3.3, 3.3, 3.3 ) },  ["ValveBiped.Bip01_L_Forearm"] = { sc = Vector( 3, 3, 3 ) },  ["ValveBiped.Bip01_R_UpperArm"] = { sc = Vector( 3.3, 3.3, 3.3 ) },  ["ValveBiped.Bip01_R_Forearm"] = { sc = Vector( 3, 3, 3 ) },    ["ValveBiped.Bip01_R_Clavicle"] = { rot = Angle( 0, 0, -90 ), sc = Vector( 2, 2, 2 ) },  ["ValveBiped.Bip01_L_Clavicle"] = { sc = Vector( 2, 2, 2 ) },    ["ValveBiped.Bip01_L_Hand"] = { sc = Vector( 3, 3, 3 ), rot = Angle( 0, 0, -180 ) },  ["ValveBiped.Bip01_R_Hand"] = { sc = Vector( 2.5, 2.5, 2.5 ), rot = Angle( 0, 0, -180 ) },  ["ValveBiped.Bip01_R_Foot"] = { rot = Angle( 0, 0, -180 ) },  ["ValveBiped.Bip01_R_Toe0"] = { rot = Angle( 0, 0, -180 ) },    ["ValveBiped.Bip01_L_Thigh"] = { sc = Vector( 1.9, 1.9, 1.9 ) },  ["ValveBiped.Bip01_L_Calf"] = { sc = Vector( 1.9, 1.9, 1.9 ) },  ["ValveBiped.Bip01_R_Thigh"] = { sc = Vector( 1.9, 1.9, 1.9 ) },  ["ValveBiped.Bip01_R_Calf"] = { sc = Vector( 1.9, 1.9, 1.9 ) }, }   SWEP.WElements = {  ["eye+"] = { type = "Sprite", sprite = "effects/redflare", bone = "ValveBiped.Bip01_Spine4", rel = "", pos = Vector(16.954, -7.297, -5.239), size = { x = 14.06, y = 14.06 }, color = Color(255, 255, 0, 255), nocull = true, additive = true, vertexalpha = true, vertexcolor = true, ignorez = false},  ["eye"] = { type = "Sprite", sprite = "effects/fluttercore", bone = "ValveBiped.Bip01_Spine4", rel = "", pos = Vector(17.045, -7.386, -0.087), size = { x = 4.225, y = 4.225 }, color = Color(255, 0, 0, 255), nocull = true, additive = true, vertexalpha = true, vertexcolor = true, ignorez = false},  ["skull"] = { type = "Model", model = "models/gibs/hgibs.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "", pos = Vector(15.333, -2.596, -2.485), angle = Angle(-1.221, 90, 90), size = Vector(1.712, 1.712, 1.712), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/charple/charple2_sheet", skin = 0, bodygroup = {} },  ["eye++++++"] = { type = "Sprite", sprite = "effects/redflare", bone = "ValveBiped.Bip01_Spine4", rel = "", pos = Vector(17.045, -7.386, -0.087), size = { x = 9.267, y = 9.267 }, color = Color(255, 255, 0, 255), nocull = true, additive = true, vertexalpha = true, vertexcolor = true, ignorez = false},  ["eye+++"] = { type = "Sprite", sprite = "effects/redflare", bone = "ValveBiped.Bip01_Spine4", rel = "", pos = Vector(16.954, -7.297, -5.239), size = { x = 3, y = 30 }, color = Color(255, 255, 0, 255), nocull = true, additive = true, vertexalpha = true, vertexcolor = true, ignorez = false},  ["body"] = { bbp = function( ent, bc ) CustomBoneMergeMatching(ent, bc, adjustments_table) end, type = "Model", model = "models/zombie/poison.mdl", bone = "ValveBiped.Bip01_Pelvis", rel = "", pos = Vector(0.259, 3.993, -4.163), angle = Angle(90, -90, 0), size = Vector(2, 2, 2), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/charple/charple3_sheet", skin = 0, bodygroup = {} },  ["eye++"] = { type = "Sprite", sprite = "effects/fluttercore", bone = "ValveBiped.Bip01_Spine4", rel = "", pos = Vector(16.954, -7.297, -5.239), size = { x = 4.819, y = 4.819 }, color = Color(255, 0, 0, 255), nocull = true, additive = true, vertexalpha = true, vertexcolor = true, ignorez = false},  ["eye++++"] = { type = "Sprite", sprite = "effects/redflare", bone = "ValveBiped.Bip01_Spine4", rel = "", pos = Vector(16.954, -7.297, -5.239), size = { x = 30, y = 3 }, color = Color(255, 255, 0, 255), nocull = true, additive = true, vertexalpha = true, vertexcolor = true, ignorez = false} }  SWEP.MeleeDamage = 50 SWEP.MeleeDamageVsProps = 110 SWEP.SlowDownScale = 0  SWEP.AlertDelay = 3.5  function SWEP:Reload()  self:SecondaryAttack() end  function SWEP:MeleeHit(ent, trace, damage, forcescale)  if not ent:IsPlayer() then  damage = self.MeleeDamageVsProps  end   self.BaseClass.MeleeHit(self, ent, trace, damage, forcescale) end  function SWEP:PrimaryAttack()  if CurTime() < self:GetNextPrimaryFire() then return end  local owner = self:GetOwner()   local armdelay = owner:GetMeleeSpeedMul()   self:SetNextPrimaryFire(CurTime() + self.Primary.Delay * armdelay * (owner.EradiVived and 0.9 or 1.1))  self:StartSwinging()   self.HeresiarchCounter = (self.HeresiarchCounter or 0) + 1   if SERVER and self.HeresiarchCounter >= 4 then  local ent = ents.Create("projectile_darklightning")  if ent:IsValid() then  ent:SetPos(owner:GetShootPos())  ent:SetOwner(owner)  ent:Spawn()   local phys = ent:GetPhysicsObject()  if phys:IsValid() then  local ang = owner:GetForward():Angle()   phys:SetVelocityInstantaneous(ang:Forward() * 150)  end  end   self.HeresiarchCounter = 0   if owner.EradiVived then  local vel = owner:GetAimVector()  vel.z = math.max(math.min(vel.z, 0.7), 0.6)  vel:Normalize()   owner:SetGroundEntity(NULL)  owner:SetVelocity(vel * 280)  end  end end  function SWEP:PlayAlertSound()  self:GetOwner():EmitSound("npc/combine_gunship/gunship_moan.wav", 75, math.random(70,75)) end SWEP.PlayIdleSound = SWEP.PlayAlertSound  function SWEP:PlayAttackSound()  self:EmitSound("npc/antlion_guard/angry"..math.random(3)..".wav", 75, math.random(65,70), 0.9, CHAN_WEAPON)  self:GetOwner():EmitSound("npc/strider/striderx_pain5.wav", 75, math.random(70,75), 0.75, CHAN_AUTO)  self:GetOwner():EmitSound("npc/combine_soldier/die"..math.random(1,3)..".wav", 75, math.random(65,70), 0.5) end  if not CLIENT then return end  function SWEP:ViewModelDrawn()  render.ModelMaterialOverride(0) end  local matSheet = Material("Models/charple/charple4_sheet.vtf") function SWEP:PreDrawViewModel(vm)  render.ModelMaterialOverride(matSheet) end  function SWEP:Initialize()  self:SCKInit() end  function SWEP:DrawWorldModel()  self:SCKWorldModel() end