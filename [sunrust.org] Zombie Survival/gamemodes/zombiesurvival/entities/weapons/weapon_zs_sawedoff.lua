AddCSLuaFile()     SWEP.PrintName = "'Splinter' Sawed-Off Shotgun" SWEP.Description = "Can fire both rounds at once for higher burst damage."  SWEP.Slot = 3 SWEP.SlotPos = 0  if CLIENT then     SWEP.ViewModelFlip = false     SWEP.ViewModelFOV = 64      SWEP.VElements = {         ["base+++++"] = { type = "Model", model = "models/hunter/tubes/circle2x2d.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "base", pos = Vector(-5.487, -1.117, -0.936), angle = Angle(12.112, 81.638, -19.817), size = Vector(0.056, 0.056, 0.056), color = Color(65, 65, 65, 255), surpresslightning = false, material = "phoenix_storms/metal_plate", skin = 0, bodygroup = {} },         ["break"] = { type = "Model", model = "models/props_c17/oildrum001.mdl", bone = "v_weapon.xm1014_Parent", rel = "parent", pos = Vector(-1.063, 0.195, 2.506), angle = Angle(-126.469, 90, 90), size = Vector(0.018, 0.018, 0.045), color = Color(65, 65, 65, 255), surpresslightning = false, material = "phoenix_storms/metal_plate", skin = 0, bodygroup = {} },         ["barrel+"] = { type = "Model", model = "models/props_pipes/concrete_pipe001a.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "break", pos = Vector(-1.89, 0.186, 0.337), angle = Angle(0, 36.452, 0), size = Vector(0.1, 0.018, 0.018), color = Color(65, 65, 65, 255), surpresslightning = false, material = "phoenix_storms/metal_plate", skin = 0, bodygroup = {} },         ["parent"] = { type = "Model", model = "", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(7.743, 1.842, -3.8), angle = Angle(2.529, -94.8, -112.268), size = Vector(0.5, 0.5, 0.5), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },         ["base++++"] = { type = "Model", model = "models/hunter/tubes/circle2x2d.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "base", pos = Vector(-5.218, 0.698, -1.122), angle = Angle(-21.306, 180, -9.124), size = Vector(0.056, 0.056, 0.056), color = Color(65, 65, 65, 255), surpresslightning = false, material = "phoenix_storms/metal_plate", skin = 0, bodygroup = {} },         ["base++++++++"] = { type = "Model", model = "models/props_phx/construct/wood/wood_boardx1.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "base", pos = Vector(-2.872, 0.432, 0.256), angle = Angle(-126.223, 102.347, 12.937), size = Vector(0.032, 0.032, 0.032), color = Color(165, 125, 95, 255), surpresslightning = false, material = "models/props_wasteland/wood_fence01a", skin = 0, bodygroup = {} },         ["base"] = { type = "Model", model = "models/props_combine/headcrabcannister01a.mdl", bone = "v_weapon.xm1014_Parent", rel = "parent", pos = Vector(0.052, 1.702, -6.6), angle = Angle(-54.559, -90, -180), size = Vector(0.057, 0.035, 0.041), color = Color(165, 125, 95, 255), surpresslightning = false, material = "models/props_wasteland/wood_fence01a", skin = 0, bodygroup = {} },         ["shell_left_ej"] = { type = "Model", model = "models/weapons/shotgun_shell.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "barrel", pos = Vector(2.789, -0, -0.643), angle = Angle(0, 180, 0), size = Vector(0.8, 0.8, 0.8), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },         ["base+++"] = { type = "Model", model = "models/props_c17/canister01a.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "base", pos = Vector(-5.422, -0.102, -0.82), angle = Angle(-52.792, 0, 0), size = Vector(0.187, 0.381, 0.035), color = Color(65, 65, 65, 255), surpresslightning = false, material = "phoenix_storms/metal_plate", skin = 0, bodygroup = {} },         ["base++"] = { type = "Model", model = "models/props_phx/construct/wood/wood_boardx1.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "break", pos = Vector(-2.55, -0.204, 1.241), angle = Angle(0.085, 36.157, 93.61), size = Vector(0.2, 0.178, 0.082), color = Color(65, 65, 65, 255), surpresslightning = false, material = "phoenix_storms/metal_plate", skin = 0, bodygroup = {} },         ["base+++++++"] = { type = "Model", model = "models/combine_dropship_container.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "base", pos = Vector(-4.264, -0.378, -2.593), angle = Angle(27.871, 17.398, 3.641), size = Vector(0.009, 0.014, 0.019), color = Color(165, 125, 95, 255), surpresslightning = false, material = "models/props_wasteland/wood_fence01a", skin = 0, bodygroup = {} },         ["shell_right"] = { type = "Model", model = "models/weapons/shotgun_shell.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "barrel+", pos = Vector(2.789, -0, -0.643), angle = Angle(0, 180, 0), size = Vector(0.8, 0.8, 0.8), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },         ["barrel"] = { type = "Model", model = "models/props_pipes/concrete_pipe001a.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "break", pos = Vector(-1.89, 0.186, 1.929), angle = Angle(0, 36.452, 0), size = Vector(0.1, 0.018, 0.018), color = Color(65, 65, 65, 255), surpresslightning = false, material = "phoenix_storms/metal_plate", skin = 0, bodygroup = {} },         ["shell_right_ej"] = { type = "Model", model = "models/weapons/shotgun_shell.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "barrel+", pos = Vector(2.789, -0, -0.643), angle = Angle(0, 180, 0), size = Vector(0.8, 0.8, 0.8), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },         ["barrel++"] = { type = "Model", model = "models/hunter/blocks/cube025x2x025.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "break", pos = Vector(-7, 3.611, 1.253), angle = Angle(180, 180, 0), size = Vector(0.028, 0.008, 0.039), color = Color(65, 65, 65, 255), surpresslightning = false, material = "phoenix_storms/metal_plate", skin = 0, bodygroup = {} },         ["base++++++"] = { type = "Model", model = "models/hunter/misc/shell2x2c.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "base", pos = Vector(-4.191, 0.184, -0.121), angle = Angle(-32.052, -180, -5.641), size = Vector(0.039, 0.037, 0.028), color = Color(65, 65, 65, 255), surpresslightning = false, material = "phoenix_storms/metal_plate", skin = 0, bodygroup = {} },         ["shell_left"] = { type = "Model", model = "models/weapons/shotgun_shell.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "barrel", pos = Vector(2.789, -0, -0.643), angle = Angle(0, 180, 0), size = Vector(0.8, 0.8, 0.8), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },         ["handle"] = { type = "Model", model = "models/combine_dropship_container.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "break", pos = Vector(-0.829, 1.552, 1.003), angle = Angle(0, 37.951, -90), size = Vector(0.017, 0.025, 0.018), color = Color(165, 125, 95, 255), surpresslightning = false, material = "models/props_wasteland/wood_fence01a", skin = 0, bodygroup = {} },         ["muzzle"] = { type = "Model", model = "models/props_junk/PopCan01a.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "break", pos = Vector(-7.296, 4.071, 1.133), angle = Angle(0, 0, 0), size = Vector(0.5, 0.5, 0.5), color = Color(255, 255, 255, 0), surpresslightning = false, material = "", skin = 0, bodygroup = {} },     }        SWEP.WElements = {         ["base+++"] = { type = "Model", model = "models/props_c17/canister01a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(-5.421, -0.101, -0.819), angle = Angle(-52.792, 0, 0), size = Vector(0.187, 0.382, 0.035), color = Color(65, 65, 65, 255), surpresslightning = false, material = "phoenix_storms/metal_plate", skin = 0, bodygroup = {} },         ["break"] = { type = "Model", model = "models/props_c17/oildrum001.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(-8.749, -1.099, -4.579), angle = Angle(135, 0, 90), size = Vector(0.019, 0.019, 0.045), color = Color(65, 65, 65, 255), surpresslightning = false, material = "phoenix_storms/metal_plate", skin = 0, bodygroup = {} },         ["base++"] = { type = "Model", model = "models/combine_dropship_container.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(-5.165, 0.136, -2.849), angle = Angle(39.969, -0.895, -9.398), size = Vector(0.017, 0.017, 0.017), color = Color(165, 125, 95, 255), surpresslightning = false, material = "models/props_wasteland/wood_fence01a", skin = 0, bodygroup = {} },         ["barrel+"] = { type = "Model", model = "models/props_pipes/concrete_pipe001a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(-10.634, -0.854, -4.819), angle = Angle(37.5, 0, 0), size = Vector(0.1, 0.019, 0.019), color = Color(65, 65, 65, 255), surpresslightning = false, material = "phoenix_storms/metal_plate", skin = 0, bodygroup = {} },         ["base++++++++"] = { type = "Model", model = "models/hunter/misc/shell2x2d.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(-4.554, -0.02, -1.078), angle = Angle(-144.836, -2.564, 99.102), size = Vector(0.045, 0.035, 0.029), color = Color(65, 65, 65, 255), surpresslightning = false, material = "phoenix_storms/metal_plate", skin = 0, bodygroup = {} },         ["handle"] = { type = "Model", model = "models/combine_dropship_container.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(-9.98, -0.201, -6.435), angle = Angle(39.694, 0, 0), size = Vector(0.018, 0.019, 0.014), color = Color(165, 125, 95, 255), surpresslightning = false, material = "models/props_wasteland/wood_fence01a", skin = 0, bodygroup = {} },         ["base++++"] = { type = "Model", model = "models/hunter/tubes/circle2x2d.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(-4.541, -0.498, -0.747), angle = Angle(-30.251, 175.606, -180), size = Vector(0.041, 0.041, 0.041), color = Color(65, 65, 65, 255), surpresslightning = false, material = "phoenix_storms/metal_plate", skin = 0, bodygroup = {} },         ["barrel"] = { type = "Model", model = "models/props_pipes/concrete_pipe001a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(-10.634, 0.66, -4.819), angle = Angle(37.5, 0, 0), size = Vector(0.1, 0.019, 0.019), color = Color(65, 65, 65, 255), surpresslightning = false, material = "phoenix_storms/metal_plate", skin = 0, bodygroup = {} },         ["base+++++++"] = { type = "Model", model = "models/hunter/misc/shell2x2d.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(-4.72, -0.281, -0.99), angle = Angle(-148.532, -4.942, 165.307), size = Vector(0.045, 0.035, 0.029), color = Color(65, 65, 65, 255), surpresslightning = false, material = "phoenix_storms/metal_plate", skin = 0, bodygroup = {} },         ["base"] = { type = "Model", model = "models/props_combine/headcrabcannister01a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(3.318, 1.664, -0.461), angle = Angle(128.839, 5.447, -7.678), size = Vector(0.057, 0.035, 0.041), color = Color(165, 125, 95, 255), surpresslightning = false, material = "models/props_wasteland/wood_fence01a", skin = 0, bodygroup = {} },         ["base+++++"] = { type = "Model", model = "models/hunter/tubes/circle2x2d.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(-4.43, 0.144, -0.834), angle = Angle(-146.939, 17.881, -178.769), size = Vector(0.041, 0.041, 0.041), color = Color(65, 65, 65, 255), surpresslightning = false, material = "phoenix_storms/metal_plate", skin = 0, bodygroup = {} },         ["barrel++"] = { type = "Model", model = "models/hunter/blocks/cube025x2x025.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(-14.822, -0.35, -7.29), angle = Angle(41.955, 0.238, 86.919), size = Vector(0.028, 0.009, 0.039), color = Color(65, 65, 65, 255), surpresslightning = false, material = "phoenix_storms/metal_plate", skin = 0, bodygroup = {} },         ["base+++++++++"] = { type = "Model", model = "models/props_phx/construct/wood/wood_boardx1.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(-10.105, -0.033, -3.852), angle = Angle(37.931, -0.04, 1.391), size = Vector(0.259, 0.14, 0.092), color = Color(65, 65, 65, 255), surpresslightning = false, material = "phoenix_storms/metal_plate", skin = 0, bodygroup = {} }     }      SWEP.ViewModelBoneMods = {         ["ValveBiped.Bip01_R_UpperArm"] = { scale = Vector(1, 1, 1), pos = Vector( 0, -0, 0 ), pos_reload = Vector(-2.562, -13.523, 2.746), angle = Angle( 0, 0, 0 ), angle_reload = Angle(64.111, -0.754, -26.785) },         ["ValveBiped.Bip01_Spine4"] = { scale = Vector(1, 1, 1), pos = Vector(0, 0, 1.927), angle = Angle(0, 0, 0) },         ["ValveBiped.Bip01_L_Finger0"] = { scale = Vector(1, 1, 1), pos = Vector(0, 0, 0), angle = Angle(4.772, 3.644, -3.445) },         ["ValveBiped.Bip01_L_UpperArm"] = { scale = Vector(1, 1, 1), pos = Vector(-0.719, -4.947, -0.45), angle = Angle(0, 0, 0) },         ["ValveBiped.Bip01_R_Hand"] = { scale = Vector(1, 1, 1), pos = Vector(0, 0, 0), angle = Angle(-25.785, 0, 0) }     }      for k, v in pairs( SWEP.VElements ) do         if v and string.find( k, "shell" ) then             SWEP.VElements[ k ].def_pos = Vector( v.pos.x, v.pos.y, v.pos.z )             SWEP.VElements[ k ].def_angle = Angle( v.angle.p, v.angle.y, v.angle.r )             SWEP.VElements[ k ].hide = true         end     end      SWEP.HUD3DBone = "ValveBiped.Bip01_R_Hand"     SWEP.HUD3DPos = Vector(5.367, 4, -3.791)     SWEP.HUD3DAng = Angle(-4.79, 81.821, -69.983)     SWEP.HUD3DScale = 0.015      SWEP.ReloadPos = Vector(0, 0, 0)     SWEP.ReloadAng = Vector(16.354, 0, 0) end  SWEP.ShowViewModel = false SWEP.ShowWorldModel = false  SWEP.Base = "weapon_zs_baseshotgun" local BaseClass = baseclass.Get("weapon_zs_baseshotgun")  SWEP.HoldType = "shotgun"  SWEP.ViewModel = "models/weapons/cstrike/c_shot_xm1014.mdl" SWEP.WorldModel = "models/weapons/w_pistol.mdl" SWEP.UseHands = true  SWEP.CSMuzzleFlashes = false  SWEP.Primary.Sound = Sound("weapons/zs_sawnoff/sawnoff_fire1.ogg") SWEP.Primary.Damage = 11.35 SWEP.Primary.NumShots = 8 SWEP.Primary.Delay = 0.6 SWEP.Primary.ClipSize = 2 SWEP.Primary.Automatic = false SWEP.Primary.Ammo = "buckshot" GAMEMODE:SetupDefaultClip(SWEP.Primary)  SWEP.ReloadSound = Sound("weapons/zs_sawnoff/barrelup.ogg") SWEP.ReloadFinishSound = Sound("weapons/zs_sawnoff/barreldown.ogg") SWEP.ReloadPlugSound = Sound("weapons/shotgun/shotgun_reload1.wav")  SWEP.ConeMax = 7.3 SWEP.ConeMin = 6.9 SWEP.Recoil = 2.5  SWEP.WalkSpeed = SPEED_SLOWER SWEP.ReloadSpeed = 0.62 SWEP.ReloadDelay = 0.5  SWEP.Tier = 2  SWEP.DryFireSound = Sound("weapons/shotgun/shotgun_empty.wav")  SWEP.AmmoTrinketOverride = 2  SWEP.Pens = 0 SWEP.PenTaper = 0.2  SWEP.SpreadPattern = {     {45, 0.4},     {45 + 90, 0.4},     {45 + 180, 0.4},     {45 + 270, 0.4},     {45, 0.6},     {45 + 90, 0.6},     {45 + 180, 0.6},     {45 + 270, 0.6},     {0, 0.7},     {90, 0.7},     {180, 0.7},     {270, 0.7},     {0, 0.3},     {90, 0.3},     {180, 0.3},     {270, 0.3} }  GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_MAX_SPREAD, -0.5, 1) GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_MIN_SPREAD, -0.45, 1) GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_RELOAD_SPEED, 0.045, 1) local branch = GAMEMODE:AddNewRemantleBranch(SWEP, 1, "'Splinter' Slug Gun", "Single accurate slug round, less total damage. Upgraded versions can pierce on headshot.", function(wept)     wept.Primary.Damage = wept.Primary.Damage * 5.65     wept.Primary.NumShots = 1     wept.ConeMin = wept.ConeMin * 0.23     wept.ConeMax = wept.ConeMax * 0.27     wept.AmmoTrinketOverride = nil     wept.ResistanceAmmoAs = "357"     wept.PenHeadOnly = true      wept.SpreadPattern = nil end) branch.CollectiveName = "Slug" GAMEMODE:AttachWeaponModifierToBranch(branch, WEAPON_MODIFIER_RELOAD_SPEED, 0.04, 1) GAMEMODE:AttachWeaponModifierToBranch(branch, WEAPON_MODIFIER_BULLET_PIERCES, 1) GAMEMODE:AttachWeaponModifierToBranch(branch, WEAPON_MODIFIER_PIERCE_DAMAGE, 0.05, 3)  branch = GAMEMODE:AddNewRemantleBranch(SWEP, 2, "'Ruster' Sawed-Off Shotgun", "Less accurate, unfixed spread, upto 30% more damage at point blank", function(wept)     wept.ConeMin = wept.ConeMin * 1.22     wept.ConeMax = wept.ConeMax * 1.22      wept.SpreadPattern = nil      wept.VElements = {         ["base"] = { type = "Model", model = "models/props_combine/headcrabcannister01a.mdl", bone = "ValveBiped.Crossbow_base", rel = "parent", pos = Vector(0.052, 1.702, -7.329), angle = Angle(-54.559, -90, -180), size = Vector(0.057, 0.035, 0.041), color = Color(190, 150, 95, 255), surpresslightning = false, material = "models/props_wasteland/wood_fence01a", skin = 0, bodygroup = {} },         ["base+++"] = { type = "Model", model = "models/props_c17/canister01a.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "base", pos = Vector(-5.421, -0.101, -0.819), angle = Angle(-52.792, 0, 0), size = Vector(0.187, 0.382, 0.035), color = Color(75, 75, 75, 255), surpresslightning = false, material = "models/props_pipes/pipeset_metal02", skin = 0, bodygroup = {} },         ["parent"] = { type = "Model", model = "", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(7.743, 1.842, -3.8), angle = Angle(2.529, -94.8, -112.268), size = Vector(0.5, 0.5, 0.5), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },         ["barrel"] = { type = "Model", model = "models/props_pipes/concrete_pipe001a.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "break", pos = Vector(-1.89, 0.186, 1.929), angle = Angle(0, 36.453, 0), size = Vector(0.1, 0.019, 0.019), color = Color(75, 75, 75, 255), surpresslightning = false, material = "models/props_pipes/pipeset_metal02", skin = 0, bodygroup = {} },         ["break"] = { type = "Model", model = "models/props_c17/oildrum001.mdl", bone = "ValveBiped.Crossbow_base", rel = "parent", pos = Vector(-1.063, 0.196, 2.507), angle = Angle(-126.469, 90, 90), size = Vector(0.019, 0.019, 0.045), color = Color(75, 75, 75, 255), surpresslightning = false, material = "models/props_pipes/pipeset_metal02", skin = 0, bodygroup = {} },         ["base++"] = { type = "Model", model = "models/props_lab/blastdoor001a.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "base", pos = Vector(-6.325, -0.13, -4.14), angle = Angle(0, 90, -36.279), size = Vector(0.211, 0.05, 0.014), color = Color(75, 75, 75, 255), surpresslightning = false, material = "models/props_pipes/pipeset_metal02", skin = 0, bodygroup = {} },         ["barrel+"] = { type = "Model", model = "models/props_pipes/concrete_pipe001a.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "break", pos = Vector(-1.89, 0.186, 0.338), angle = Angle(0, 36.453, 0), size = Vector(0.1, 0.019, 0.019), color = Color(75, 75, 75, 255), surpresslightning = false, material = "models/props_pipes/pipeset_metal02", skin = 0, bodygroup = {} },         ["base+"] = { type = "Model", model = "models/props_combine/combine_interface003.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "base", pos = Vector(-2.258, 0, -1.691), angle = Angle(35.486, 0, 0), size = Vector(0.097, 0.041, 0.071), color = Color(75, 75, 75, 255), surpresslightning = false, material = "models/props_pipes/pipeset_metal02", skin = 0, bodygroup = {} },         ["handle"] = { type = "Model", model = "models/combine_dropship_container.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "break", pos = Vector(-1.009, 1.552, 1.004), angle = Angle(0, 37.951, -90), size = Vector(0.018, 0.019, 0.014), color = Color(190, 150, 95, 255), surpresslightning = false, material = "models/props_wasteland/wood_fence01a", skin = 0, bodygroup = {} },         ["shell_left_ej"] = { type = "Model", model = "models/weapons/shotgun_shell.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "barrel", pos = Vector(2.789, -0, -0.643), angle = Angle(0, 180, 0), size = Vector(0.8, 0.8, 0.8), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },         ["shell_right"] = { type = "Model", model = "models/weapons/shotgun_shell.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "barrel+", pos = Vector(2.789, -0, -0.643), angle = Angle(0, 180, 0), size = Vector(0.8, 0.8, 0.8), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },         ["shell_right_ej"] = { type = "Model", model = "models/weapons/shotgun_shell.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "barrel+", pos = Vector(2.789, -0, -0.643), angle = Angle(0, 180, 0), size = Vector(0.8, 0.8, 0.8), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },         ["shell_left"] = { type = "Model", model = "models/weapons/shotgun_shell.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "barrel", pos = Vector(2.789, -0, -0.643), angle = Angle(0, 180, 0), size = Vector(0.8, 0.8, 0.8), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },         ["muzzle"] = { type = "Model", model = "models/props_junk/PopCan01a.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "break", pos = Vector(-7.296, 4.071, 1.133), angle = Angle(0, 0, 0), size = Vector(0.5, 0.5, 0.5), color = Color(255, 255, 255, 0), surpresslightning = false, material = "", skin = 0, bodygroup = {} },     }      wept.WElements = {         ["break"] = { type = "Model", model = "models/props_c17/oildrum001.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(-8.749, -1.099, -4.579), angle = Angle(135, 0, 90), size = Vector(0.019, 0.019, 0.045), color = Color(75, 75, 75, 255), surpresslightning = false, material = "models/props_pipes/pipeset_metal02", skin = 0, bodygroup = {} },         ["base+++"] = { type = "Model", model = "models/props_c17/canister01a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(-5.421, -0.101, -0.819), angle = Angle(-52.792, 0, 0), size = Vector(0.187, 0.382, 0.035), color = Color(75, 75, 75, 255), surpresslightning = false, material = "models/props_pipes/pipeset_metal02", skin = 0, bodygroup = {} },         ["barrel"] = { type = "Model", model = "models/props_pipes/concrete_pipe001a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(-10.634, 0.66, -4.819), angle = Angle(37.5, 0, 0), size = Vector(0.1, 0.019, 0.019), color = Color(75, 75, 75, 255), surpresslightning = false, material = "models/props_pipes/pipeset_metal02", skin = 0, bodygroup = {} },         ["handle"] = { type = "Model", model = "models/combine_dropship_container.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(-9.98, -0.201, -6.435), angle = Angle(39.694, 0, 0), size = Vector(0.018, 0.019, 0.014), color = Color(190, 150, 95, 255), surpresslightning = false, material = "models/props_wasteland/wood_fence01a", skin = 0, bodygroup = {} },         ["base"] = { type = "Model", model = "models/props_combine/headcrabcannister01a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(2.888, 1.406, -0.543), angle = Angle(130.128, 5.808, 0), size = Vector(0.057, 0.035, 0.041), color = Color(190, 150, 95, 255), surpresslightning = false, material = "models/props_wasteland/wood_fence01a", skin = 0, bodygroup = {} },         ["barrel+"] = { type = "Model", model = "models/props_pipes/concrete_pipe001a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(-10.634, -0.854, -4.819), angle = Angle(37.5, 0, 0), size = Vector(0.1, 0.019, 0.019), color = Color(75, 75, 75, 255), surpresslightning = false, material = "models/props_pipes/pipeset_metal02", skin = 0, bodygroup = {} },         ["base+"] = { type = "Model", model = "models/props_combine/combine_interface003.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(-2.258, 0, -1.691), angle = Angle(35.486, 0, 0), size = Vector(0.097, 0.041, 0.071), color = Color(75, 75, 75, 255), surpresslightning = false, material = "models/props_pipes/pipeset_metal02", skin = 0, bodygroup = {} },         ["base++"] = { type = "Model", model = "models/props_lab/blastdoor001a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(-6.325, -0.13, -4.14), angle = Angle(0, 90, -36.279), size = Vector(0.211, 0.05, 0.014), color = Color(75, 75, 75, 255), surpresslightning = false, material = "models/props_pipes/pipeset_metal02", skin = 0, bodygroup = {} }     }      for k, v in pairs( wept.VElements ) do         if v and string.find( k, "shell" ) then             wept.VElements[ k ].def_pos = Vector( v.pos.x, v.pos.y, v.pos.z )             wept.VElements[ k ].def_angle = Angle( v.angle.p, v.angle.y, v.angle.r )             wept.VElements[ k ].hide = true         end     end      function wept.BulletCallback(attacker, tr, dmginfo)         local leng = math.Clamp(tr.HitPos:DistToSqr(tr.StartPos), 0, 2025)         local dmg  = dmginfo:GetDamage()          local extra_dmg = dmg * ((2025 - leng)/2025) * 0.3          dmginfo:SetDamage(dmg + extra_dmg)     end end) branch.CollectiveName = "Ruster" branch.Colors = {Color(220, 210, 150), Color(170, 160, 100), Color(120, 110, 60), Color(70, 60, 20)}  SWEP.ReloadStartActivity = ACT_SHOTGUN_RELOAD_START SWEP.ReloadActivity = ACT_VM_RELOAD  function SWEP:StartReloading()     local delay = self:GetReloadDelay()     self:SetDTFloat(3, CurTime() + delay)     self:SetDTBool(2, true)       self:SetNextPrimaryFire(CurTime() + math.max(self.Primary.Delay, delay))      self:GetOwner():DoReloadEvent()      if self.ReloadStartActivity then         self:SendWeaponAnim(self.ReloadStartActivity)                   self:SetNextPlugSound(CurTime() + delay * 0.9)         self:SetNextStateChange(CurTime() + delay * 0.8)     end      if CLIENT then         self:DoShellEjection()     end      self:EmitSound(self.ReloadSound) end  function SWEP:StopReloading()     self:SetDTFloat(3, 0)     self:SetDTBool(2, false)     self:SetNextPrimaryFire(CurTime() + self.Primary.Delay * 0.45)     self:SetNextStateChange(CurTime())      if self:Clip1() > 0 then         self:EmitSound(self.ReloadFinishSound)         self:SendWeaponAnim(ACT_SHOTGUN_RELOAD_FINISH)               end end  function SWEP:Think()     if self:ShouldDoReload() then         self:DoReload()     end      if self:GetNextPlugSound() ~= 0 and CurTime() > self:GetNextPlugSound() then         if self:Clip1() ~= 2 then             self:EmitSound(self.ReloadPlugSound)         end         self:SetNextPlugSound(0)     end      if self:GetNextStateChange() ~= 0 and CurTime() > self:GetNextStateChange() then         self:SetSawnoffState((self:GetSawnoffState() + 1) % 2)         self:SetNextStateChange(0)     end      self:NextThink(CurTime())     return true end  function SWEP:DoReload()     if not self:CanReload() then         self:StopReloading()         return     end      local delay = self:GetReloadDelay()     if self.ReloadActivity then         self:SendWeaponAnim(self.ReloadActivity)         self:ProcessReloadAnim()         self:SetNextPlugSound(CurTime() + delay * 0.9)                          end            if CLIENT then         self:DoShellInsertion()     end      self:GetOwner():RemoveAmmo(1, self.Primary.Ammo, false)     self:SetClip1(self:Clip1() + 1)      self:SetDTBool(2, false)     self:SetDTFloat(3, CurTime() + delay)      self:SetNextPrimaryFire(CurTime() + math.max(self.Primary.Delay, delay)) end  function SWEP:CanPrimaryAttack()     if self:GetOwner():IsHolding() or self:GetOwner():GetBarricadeGhosting() then return false end      if self:Clip1() <= 0 then         self:EmitSound("weapons/shotgun/shotgun_empty.wav")         self:SetNextPrimaryFire(CurTime() + 0.25)          return false     end      return self:GetNextPrimaryFire() <= CurTime() end  function SWEP:GetCone()     return BaseClass.GetCone(self) * (self.RequiredClip == 2 and 1 or 0.85) end  function SWEP:PrimaryAttack()     if not self:CanPrimaryAttack() then return end     self.BaseClass.PrimaryAttack(self)      if CLIENT and not GAMEMODE:UseOverTheShoulder() and self.VElements and self.VElements["muzzle"] then         local e = EffectData()             e:SetOrigin( self.VElements["muzzle"].modelEnt:GetPos() )             e:SetAngles( self.Owner:GetAimVector():Angle() )             e:SetScale( self.RequiredClip == 2 and 1.3 or 0.7 )         util.Effect( "MuzzleEffect", e )     end end  function SWEP:SecondaryAttack()     if not self:CanPrimaryAttack() then return end      local multiplier = self:Clip1()      self.Primary.NumShots = self.Primary.NumShots * multiplier     self.RequiredClip = multiplier     self.OldEmitFireSound = self.EmitFireSound     self.EmitFireSound = self.EmitFireSoundDouble      self:PrimaryAttack()      self.Primary.NumShots = self.Primary.NumShots / multiplier     self.RequiredClip = 1     self.EmitFireSound = self.OldEmitFireSound end  function SWEP:EmitFireSound()     self:EmitSound(self.Primary.Sound, 80, math.random(97, 103), 1, CHAN_WEAPON + 20) end  function SWEP:EmitFireSoundDouble()     if self:Clip1() == 2 then         self:EmitSound(self.Primary.Sound, 80, math.random(80, 85), 1, CHAN_WEAPON + 20)     else         self:OldEmitFireSound()     end end  function SWEP:GetNextPlugSound()     return self:GetDTFloat(10) end  function SWEP:SetNextPlugSound(nexttime)     self:SetDTFloat(10, nexttime) end  function SWEP:GetNextStateChange()     return self:GetDTFloat(11) end  function SWEP:SetNextStateChange(nexttime)     self:SetDTFloat(11, nexttime) end  function SWEP:GetSawnoffState()     return self:GetDTInt(10) end  function SWEP:SetSawnoffState(state)     self:SetDTInt(10, state) end    function SWEP:FireAnimationEvent( pos, ang, event, options )     if event == 20 then return true end end  if CLIENT then local math_approach = math.Approach local math_random = math.random  local lerp_vector = LerpVector local lerp_angle = LerpAngle local vec_forward = Vector( 1, 0, 0 ) local vec_right = Vector( 0, 1, 0 )      function SWEP:DoShellEjection()         self.ShellEjectTime = CurTime() + 0.3          if not self.ShellEjectionTable then             self.ShellEjectionTable = {}         end          self.ShellEjectionTable[1] = { pos = VectorRand() * math_random( -6, 6 ), ang = VectorRand():Angle() * math_random( -4, 4 ) }         self.ShellEjectionTable[2] = { pos = VectorRand() * math_random( -6, 6 ), ang = VectorRand():Angle() * math_random( -4, 4 ) }      end      function SWEP:DoShellInsertion()         if self:Clip1() == 0 then             self.ShellInsertTimeL = CurTime() + 0.3         end         if self:Clip1() == 1 then             self.ShellInsertTimeR = CurTime() + 0.3         end     end      local ghostlerp = 0     local reloadlerp = 0     function SWEP:CalcViewModelView(vm, oldpos, oldang, pos, ang)                     if self:GetOwner():GetBarricadeGhosting() then             ghostlerp = math.min(1, ghostlerp + FrameTime() * 4)         elseif ghostlerp > 0 then             ghostlerp = math.max(0, ghostlerp - FrameTime() * 5)         end          if self:IsReloading() then             reloadlerp = math.min(1, reloadlerp + FrameTime() * 2)         elseif reloadlerp > 0 then             reloadlerp = math.max(0, reloadlerp - FrameTime() * 3)         end          self.ReloadLerp = reloadlerp          if reloadlerp > 0 then             local Offset = self.ReloadPos             local Ang = self.ReloadAng             if Offset and Ang then                 ang = Angle(ang.p, ang.y, ang.r)                 ang:RotateAroundAxis(ang:Right(), Ang.x * reloadlerp)                 ang:RotateAroundAxis(ang:Up(), Ang.y * reloadlerp)                 ang:RotateAroundAxis(ang:Forward(), Ang.z * reloadlerp)                  pos = pos + Offset.x * reloadlerp * ang:Right() + Offset.y * reloadlerp * ang:Forward() + Offset.z * reloadlerp * ang:Up()             end         end          if ghostlerp > 0 then             pos = pos + 3.5 * ghostlerp * ang:Up()             ang:RotateAroundAxis(ang:Right(), -30 * ghostlerp)         end          return pos, ang     end      function SWEP:PreDrawViewModel(vm)         self.BaseClass.PreDrawViewModel(self, vm)          if self.VElements then              local ang = self.VElements["break"].angle             ang.pitch = math_approach(ang.pitch, self:IsReloading() and -84 or -126, RealFrameTime() * 200)              if self.ReloadLerp and self.ViewModelBoneMods then                 local r_arm = self.ViewModelBoneMods["ValveBiped.Bip01_R_UpperArm"]                 r_arm.pos = r_arm.pos_reload * self.ReloadLerp                 r_arm.angle = r_arm.angle_reload * self.ReloadLerp             end                             self.ShellEjectTime = self.ShellEjectTime or 0             self.ShellInsertTimeL = self.ShellInsertTimeL or 0             self.ShellInsertTimeR = self.ShellInsertTimeR or 0              local shell_l, shell_r = self.VElements["shell_left"], self.VElements["shell_right"]             local shell_l_ej, shell_r_ej = self.VElements["shell_left_ej"], self.VElements["shell_right_ej"]              local shell_delta_ej = 0             local shell_delta_l = 0             local shell_delta_r = 0              if self.ShellEjectTime ~= 0 and self.ShellEjectionTable then                  if self.ShellEjectTime >= CurTime() then                     shell_delta_ej = math.Clamp( 1 - ( self.ShellEjectTime - CurTime() ) / 0.3, 0, 1 )                     shell_delta_ej = shell_delta_ej ^ 1.5                      shell_r_ej.pos = lerp_vector( shell_delta_ej, shell_r_ej.def_pos, shell_r_ej.def_pos + vec_forward * 25 + vec_right * ( shell_delta_ej * 20 ) + self.ShellEjectionTable[2].pos * shell_delta_ej )                     shell_r_ej.angle = lerp_angle( shell_delta_ej, shell_r_ej.def_angle, shell_r_ej.def_angle + self.ShellEjectionTable[2].ang * shell_delta_ej )                     shell_r_ej.hide = false                     shell_r.hide = true                      if self:Clip1() == 0 then                         shell_l_ej.pos = lerp_vector( shell_delta_ej, shell_l_ej.def_pos, shell_l_ej.def_pos + vec_forward * 22 + vec_right * ( shell_delta_ej * 20 ) + self.ShellEjectionTable[1].pos * shell_delta_ej )                         shell_l_ej.angle = lerp_angle( shell_delta_ej, shell_l_ej.def_angle, shell_l_ej.def_angle + self.ShellEjectionTable[1].ang * shell_delta_ej )                         shell_l_ej.hide = false                         shell_l.hide = true                     end                  else                     self.ShellEjectTime = 0                                            shell_l_ej.hide = true                     shell_r_ej.hide = true                 end             end                             if self.ShellInsertTimeL ~= 0 then                 if self.ShellInsertTimeL >= CurTime() then                     shell_delta_l = math.Clamp( 1 - ( self.ShellInsertTimeL - CurTime() ) / 0.3, 0, 1 )                     shell_delta_l = shell_delta_l ^ 1.5                      shell_l.pos = lerp_vector( shell_delta_l, shell_l.def_pos + vec_forward * 2, shell_l.def_pos )                     shell_l.hide = false                  else                     self.ShellInsertTimeL = 0                 end             end              if self.ShellInsertTimeR ~= 0 then                 if self.ShellInsertTimeR >= CurTime() then                     shell_delta_r = math.Clamp( 1 - ( self.ShellInsertTimeR - CurTime() ) / 0.3, 0, 1 )                     shell_delta_r = shell_delta_r ^ 1.5                      shell_r.pos = lerp_vector( shell_delta_r, shell_r.def_pos + vec_forward * 2, shell_r.def_pos )                     shell_r.hide = false                  else                     self.ShellInsertTimeR = 0                 end             end           end     end    end 