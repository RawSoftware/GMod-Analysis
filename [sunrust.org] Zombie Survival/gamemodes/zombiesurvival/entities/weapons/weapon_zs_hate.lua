AddCSLuaFile()  SWEP.Base = "weapon_zs_zombie"  SWEP.PrintName = "Hate" SWEP.WorldModel = Model("models/player/zombie_classic_hbfix.mdl")  SWEP.MeleeDelay = 0.7 SWEP.MeleeReach = 89 SWEP.MeleeDamage = 70 SWEP.MeleeDamageEnraged = 78 SWEP.BleedDamage = 20 SWEP.SwingAnimSpeed = 2.96 SWEP.Primary.Delay = 1.4  SWEP.PropDamageNormal  = 65 SWEP.PropDamageBuildup = 0  SWEP.DelayWhenDeployed = true  SWEP.ShowWorldModel = false  SWEP.PassiveMoan = false  SWEP.GreatEvil = true  local adjustments_table = {  ["ValveBiped.Bip01_Spine4"] = { add = Vector( 0, -2, -2 ), rot = Angle( 0, 70, -90 ) },  ["ValveBiped.Bip01_Spine2"] = { add = Vector( 0, -5, 0 ), rot = Angle( 0, 0, -90 ) },  ["ValveBiped.Bip01_Spine1"] = { add = Vector( 0, -4, 0 ), rot = Angle( 0, 0, -90 ) },  ["ValveBiped.Bip01_Spine"] = { add = Vector( 0, -3, 0 ), rot = Angle( 0, 0, -90 ) },  ["ValveBiped.Bip01_Pelvis"] = { rot = Angle( 0, 0, -90 ) },  ["ValveBiped.Bip01"] = { sc = Vector( 5, 5, 5 ) },  ["ValveBiped.Bip01_L_Hand"] = { rot = Angle( 0, 0, -180 ) },  ["ValveBiped.Bip01_R_Hand"] = { sc = Vector( 0, 0, 0 ) },  ["ValveBiped.Bip01_R_Finger3"] = { sc = Vector( 0, 0, 0 ) },  ["ValveBiped.Bip01_R_Clavicle"] = { rot = Angle( 0, 0, -90 ) },  ["ValveBiped.Bip01_R_Foot"] = { rot = Angle( 0, 0, -180 ) },  ["ValveBiped.Bip01_R_Toe0"] = { rot = Angle( 0, 0, -180 ) }, }  local bbp_func = function ( ent, bonecount )    local pl = ent:GetParent()    if pl and pl:IsValid() then    for i=0, bonecount do    local name = ent:GetBoneName( i )    if not name then continue end    local bone = i  local bone_pl = pl:LookupBone( name )    if bone then    local m = ent:GetBoneMatrix( bone )    if bone_pl then    local m_pl = pl:GetBoneMatrix( bone_pl )    if m and m_pl then    m:SetTranslation( m_pl:GetTranslation() )  m:SetAngles( m_pl:GetAngles() )    if adjustments_table and adjustments_table[ name ] then    local v = adjustments_table[ name ]    if v.add then  m:Translate( v.add )  end  if v.rot then  m:Rotate( v.rot )  end  if v.sc then  m:SetScale( v.sc )  end    if v.move_to then  local m_to = ent:GetBoneMatrix( v.move_to )  if m_to then  m:SetTranslation( m_to:GetTranslation() )  end  end    end    ent:SetBoneMatrix( bone, m )    end  else         if i == 0 then    local root = pl:GetBoneMatrix( 0 )    if root then    m:SetTranslation( root:GetTranslation() )    if adjustments_table and adjustments_table[ name ] then    local v = adjustments_table[ name ]    if v.add then  m:Translate( v.add )  end  if v.rot then  m:Rotate( v.rot )  end  if v.sc then  m:SetScale( v.sc )  end    if v.move_to then  local m_to = ent:GetBoneMatrix( v.move_to )  if m_to then  m:SetTranslation( m_to:GetTranslation() )  end  end    end      ent:SetBoneMatrix( i, m )    end    else    local m_p = ent:GetBoneMatrix( ent:GetBoneParent( i ) )  if m then    if m_p then  m:SetTranslation( m_p:GetTranslation() )  m:SetAngles( m_p:GetAngles() )    if adjustments_table and adjustments_table[ name ] then    local v = adjustments_table[ name ]    if v.add then  m:Translate( v.add )  end  if v.rot then  m:Rotate( v.rot )  end  if v.sc then  m:SetScale( v.sc )  end    if v.move_to then  local m_to = ent:GetBoneMatrix( v.move_to )  if m_to then  m:SetTranslation( m_to:GetTranslation() )  end  end    end    ent:SetBoneMatrix( i, m )    else  m:SetScale( vector_origin )  ent:SetBoneMatrix( i, m )  end  end  end  end    end    end  end end   SWEP.WElements = {  ["chainsaw_base"] = { type = "Model", model = "models/props_c17/TrapPropeller_Blade.mdl", bone = "ValveBiped.Bip01_R_Forearm", rel = "", pos = Vector(28.055, -1.675, -6.154), angle = Angle(-1.734, 45.568, 0), size = Vector(1, 1, 1), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["eye"] = { type = "Sprite", sprite = "effects/redflare", bone = "ValveBiped.Bip01_Spine4", rel = "", pos = Vector(25.271, -17.144, -11.162), size = { x = 15.962, y = 15.962 }, color = Color(255, 255, 0, 255), nocull = true, additive = true, vertexalpha = true, vertexcolor = true, ignorez = false},  ["eye+"] = { type = "Sprite", sprite = "effects/fluttercore", bone = "ValveBiped.Bip01_Spine4", rel = "", pos = Vector(24.379, -17.705, -11.162), size = { x = 5.475, y = 5.475 }, color = Color(255, 0, 0, 203), nocull = true, additive = true, vertexalpha = true, vertexcolor = true, ignorez = false},  ["chainsaw_cover2"] = { type = "Model", model = "models/items/car_battery01.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "chainsaw_base", pos = Vector(5.894, 22.823, 3.775), angle = Angle(0, -172.736, 180), size = Vector(2.756, 1.835, 1.187), color = Color(120, 120, 120, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["harpoon"] = { type = "Model", model = "models/props_junk/harpoon002a.mdl", bone = "ValveBiped.Bip01_Spine2", rel = "", pos = Vector(-12.072, 17.815, -22.709), angle = Angle(24.802, 36.583, -11.377), size = Vector(0.6, 1.5, 1.5), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["axe"] = { type = "Model", model = "models/props/cs_militia/axe.mdl", bone = "ValveBiped.Bip01_Spine2", rel = "", pos = Vector(-5.386, 30.729, 3.15), angle = Angle(-3.129, 102.289, 25.465), size = Vector(1.506, 1.506, 1.506), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["chainsaw_bar"] = { type = "Model", model = "models/props_vehicles/carparts_muffler01a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "chainsaw_base", pos = Vector(4.921, 33.386, -3.326), angle = Angle(0, -94.898, -180), size = Vector(1.258, 1.258, 1.258), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["chainsaw_bar+"] = { type = "Model", model = "models/props_vehicles/carparts_muffler01a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "chainsaw_base", pos = Vector(4.921, 33.386, 11.534), angle = Angle(0.046, -94.5, 162.888), size = Vector(1.258, 1.258, 1.258), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["hook"] = { type = "Model", model = "models/props_junk/meathook001a.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "", pos = Vector(22.486, -0.602, 8.968), angle = Angle(-25.984, -25.903, 56.362), size = Vector(1, 1, 1), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["body"] = { type = "Model", model = "models/zombie/poison.mdl", bbp = function( ent, bc ) bbp_func( ent, bc ) end, bone = "ValveBiped.Bip01_Spine", rel = "", pos = Vector(0, 80, 0), angle = Angle(90, -90, 0), size = Vector(3.5, 3.5, 3.5), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["chainsaw_motor"] = { type = "Model", model = "models/props_c17/TrapPropeller_Engine.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "chainsaw_base", pos = Vector(-4.579, -0.763, 6.138), angle = Angle(0.884, -154.736, 89.216), size = Vector(1, 1, 1), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["chainsaw_blade"] = { type = "Model", model = "models/props_junk/sawblade001a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "chainsaw_base", pos = Vector(9.06, 48.567, 3.97), angle = Angle(0, 4.804, 0), size = Vector(0.755, 2.246, 8.539), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} } }  AccessorFuncDT(SWEP, "Enraged", "Bool", 1) AccessorFuncDT(SWEP, "ScreamCombo", "Int", 10)  function SWEP:SecondaryAttack()  self:Reload() end  function SWEP:ApplyMeleeDamage(ent, trace, damage)  if ent:IsValidPlayer() then  if not self:GetEnraged() then  local vel = ent:GetPos() - self:GetOwner():GetPos()  vel.z = 0  vel:Normalize()  vel = vel * 400  vel.z = 200   if CurTime() >= (ent.NextKnockdown or 0) then  ent:KnockDown()  ent.NextKnockdown = CurTime() + 4  end  ent:SetGroundEntity(NULL)  ent:SetVelocity(vel)  else  ent:AddBleedDamage(self.BleedDamage, self:GetOwner())  end  end   self.BaseClass.ApplyMeleeDamage(self, ent, trace, damage) end  function SWEP:MeleeHitWorld(trace)  if IsFirstTimePredicted() and self:GetEnraged() then  local effectdata = EffectData()  effectdata:SetOrigin(trace.HitPos)  effectdata:SetNormal(trace.HitNormal)  effectdata:SetMagnitude(2)  effectdata:SetScale(1)  util.Effect("sparks", effectdata)  end end  function SWEP:PrimaryAttack()  if CurTime() < self:GetNextPrimaryFire() or CurTime() < self:GetNextSecondaryFire() then return end   if self:GetScreamCombo() == 0 then  self:SetScreamCombo(6)  self:Reload()  else  local owner = self:GetOwner()  local armdelay = owner:GetMeleeSpeedMul()   self:SetNextPrimaryFire(CurTime() + self.Primary.Delay * armdelay)  self:StartSwinging()   self:SetScreamCombo(self:GetScreamCombo() - 1)  end end  function SWEP:BotPredictedWalkSpeed()  return self:GetEnraged() and 255 or 85 end  function SWEP:MeleeHit(ent, trace, damage, forcescale)  local angry = self:GetEnraged()  local hit_pl = ent:IsPlayer()   if not hit_pl then  self.PropDamageBuildup = self.PropDamageBuildup + (angry and 1 or 0)  damage = angry and (self.PropDamageNormal + self.PropDamageBuildup) or self.PropDamageNormal   if IsFirstTimePredicted and angry then  local effectdata = EffectData()  effectdata:SetOrigin(trace.HitPos)  effectdata:SetNormal(trace.HitNormal)  effectdata:SetMagnitude(2)  effectdata:SetScale(1)  util.Effect("sparks", effectdata)  end  else  damage = angry and self.MeleeDamageEnraged or self.MeleeDamage  end   self.BaseClass.MeleeHit(self, ent, trace, damage, forcescale) end  function SWEP:Reload()  if CurTime() < self:GetNextPrimaryFire() or CurTime() < self:GetNextSecondaryFire() then return end  self:SetNextSecondaryFire(CurTime() + 2)   local owner = self:GetOwner()  local pos = owner:GetPos()   owner:DoReloadEvent()   if SERVER then  owner:EmitSound("npc/zombie_poison/pz_alert1.wav", 100, math.random(85, 95), 1, CHAN_WEAPON + 20)   owner:EmitSound("ambient/creatures/town_child_scream1.wav", 100, math.random(65, 75), 1, CHAN_WEAPON + 21)   util.ScreenShake(pos, 5, 5, 3, 560)   local center = owner:WorldSpaceCenter()  owner:AddLegDamage(24)    for _, ent in pairs(ents.FindInSphere(center, 230)) do  if ent:IsValidLivingHuman() and WorldVisible(ent:WorldSpaceCenter(), center) then  ent:GiveStatus("debuff_frightened", 10)  end  end  end end  local warn_sounds = { "npc/antlion_guard/angry1.wav", "npc/antlion_guard/angry2.wav", "npc/antlion_guard/angry3.wav" } function SWEP:PlayAttackSound()  self:EmitSound( warn_sounds[math.random(#warn_sounds)], 75, math.random(45, 60)) end  function SWEP:PlayMissSound()  self:EmitSound("npc/zombie/claw_miss"..math.random(2)..".wav", 75, math.random(70, 80), nil, CHAN_AUTO)   if self:GetEnraged() then  self:EmitSound("ambient/machines/spinup.wav", 75, math.random(70, 80), nil, CHAN_AUTO)  end end  function SWEP:PlayHitSound()  if self:GetEnraged() then  self:EmitSound("npc/manhack/grind_flesh"..math.random(3)..".wav", 75, math.random(60, 70), nil, CHAN_AUTO)  self:EmitSound("npc/manhack/grind"..math.random(5)..".wav", 75, math.random(60, 70), nil, CHAN_AUTO)  self:EmitSound("ambient/machines/spinup.wav", 75, math.random(70, 80), nil, CHAN_AUTO)  else  self:EmitSound("npc/zombie/claw_strike"..math.random(3)..".wav", 75, math.random(70, 80), nil, CHAN_AUTO)  end end  function SWEP:StartMoaning() end  function SWEP:StopMoaning() end  function SWEP:IsMoaning()  return false end  if not CLIENT then return end  function SWEP:Initialize()  self:SCKInit() end  function SWEP:DrawWorldModel()  self:SCKWorldModel() end