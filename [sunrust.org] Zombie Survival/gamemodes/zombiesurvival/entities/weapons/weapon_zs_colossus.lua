AddCSLuaFile()  SWEP.PrintName = "'Colossus' Mass Driver" SWEP.Description = "Projects rifle ammo rounds at extremely high velocity, penetrating through multiple targets.\nGaining enough headshots allows you to use secondary fire for a large beam."  if CLIENT then  SWEP.Slot = 3  SWEP.SlotPos = 0   SWEP.ViewModelFlip = false  SWEP.ViewModelFOV = 55   SWEP.HUD3DBone = "v_weapon.xm1014_Bolt"  SWEP.HUD3DPos = Vector(-3.75, -1, -10)  SWEP.HUD3DAng = Angle(0, 0, 0)  SWEP.HUD3DScale = 0.022   SWEP.VElements = {  ["frontbit_inner"] = { type = "Model", model = "models/hunter/tubes/tube2x2x1.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "frontbit__behind_underbit", pos = Vector(0, 0, 0), angle = Angle(0, 141.695, 0), size = Vector(0.07, 0.07, 0.215), color = Color(255, 35, 20, 255), surpresslightning = false, material = "models/props_combine/masterinterface_disp", skin = 0, bodygroup = {} },  ["frontbit_behind"] = { type = "Model", model = "models/XQM/panel360.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "side", pos = Vector(6.011, 0.037, -3.062), angle = Angle(0, 0, 0), size = Vector(1.881, 0.136, 0.136), color = Color(170, 176, 188, 255), surpresslightning = false, material = "models/props_pipes/pipemetal004a", skin = 0, bodygroup = {} },  ["top"] = { type = "Model", model = "models/props_wasteland/laundry_washer001a.mdl", bone = "v_weapon.xm1014_Parent", rel = "", pos = Vector(-0.262, -3.875, -25.164), angle = Angle(0, 100.58, 0), size = Vector(0.085, 0.085, 0.143), color = Color(170, 176, 188, 255), surpresslightning = false, material = "models/props/de_nuke/coolingtower", skin = 0, bodygroup = {} },  ["frontbit_behind_2+"] = { type = "Model", model = "models/hunter/triangles/trapezium3x3x1a.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "frontbit_behind+", pos = Vector(-0.461, 2, 0), angle = Angle(90, 90, 0), size = Vector(0.032, 0.092, 0.089), color = Color(165, 165, 165, 255), surpresslightning = false, material = "phoenix_storms/metalset_1-2", skin = 0, bodygroup = {} },  ["frontbit_behind_bottom"] = { type = "Model", model = "models/props_docks/dock03_pole01a.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "frontbit_behind_2+", pos = Vector(0, 1.937, 3.118), angle = Angle(0, 0, 10), size = Vector(0.092, 0.092, 0.012), color = Color(165, 165, 165, 255), surpresslightning = false, material = "phoenix_storms/metalset_1-2", skin = 0, bodygroup = {} },  ["frontbit_behind+"] = { type = "Model", model = "models/XQM/panel360.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "frontbit_behind", pos = Vector(10.821, 0, 0), angle = Angle(0, 0, 0), size = Vector(1, 0.136, 0.136), color = Color(170, 176, 188, 255), surpresslightning = false, material = "models/props/de_nuke/coolingtower", skin = 0, bodygroup = {} },  ["frontbit_behind_mp5"] = { type = "Model", model = "models/weapons/w_smg_mp5.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "frontbit_behind_2", pos = Vector(0, -2.057, -4.428), angle = Angle(0, 90, 0), size = Vector(0.977, 1.077, 0.354), color = Color(165, 165, 165, 255), surpresslightning = false, material = "phoenix_storms/metalset_1-2", skin = 0, bodygroup = {} },  ["frontbit_behind_2"] = { type = "Model", model = "models/hunter/triangles/trapezium3x3x1a.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "frontbit_behind+", pos = Vector(0, -1.275, 0), angle = Angle(-90, 90, 0), size = Vector(0.032, 0.085, 0.048), color = Color(165, 165, 165, 255), surpresslightning = false, material = "phoenix_storms/metalset_1-2", skin = 0, bodygroup = {} },  ["frontbit_pipe"] = { type = "Model", model = "models/props_debris/rebar_smallnorm01c.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "side", pos = Vector(0, 0.239, 0.003), angle = Angle(21.548, 0, 0), size = Vector(0.649, 0.666, 0.319), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_lab/ravendoor_sheet", skin = 0, bodygroup = {} },  ["side"] = { type = "Model", model = "models/props_wasteland/horizontalcoolingtank04.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "top", pos = Vector(-0.736, -2.576, 0.358), angle = Angle(90, -78, 0), size = Vector(0.028, 0.041, 0.048), color = Color(170, 176, 188, 255), surpresslightning = false, material = "models/props/de_nuke/coolingtower", skin = 0, bodygroup = {} },  ["frontbit__behind_underbit"] = { type = "Model", model = "models/hunter/tubes/tube2x2x1b.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "frontbit_behind", pos = Vector(5.613, 0.043, 0), angle = Angle(-45, 90, 90), size = Vector(0.074, 0.074, 0.231), color = Color(170, 176, 188, 255), surpresslightning = false, material = "models/props/de_nuke/coolingtower", skin = 0, bodygroup = {} }  }   SWEP.WElements = {  ["frontbit_behind++"] = { type = "Model", model = "models/XQM/panel360.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "side", pos = Vector(-4.196, -0.069, -3.062), angle = Angle(0, 0, 0), size = Vector(1.205, 0.119, 0.119), color = Color(0, 0, 0, 255), surpresslightning = false, material = "models/debug/debugwhite", skin = 0, bodygroup = {} },  ["frontbit_inner"] = { type = "Model", model = "models/hunter/tubes/tube2x2x1.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "frontbit__behind_underbit", pos = Vector(0, 0, 0), angle = Angle(0, 141.695, 0), size = Vector(0.07, 0.07, 0.215), color = Color(255, 35, 20, 255), surpresslightning = false, material = "models/props_combine/masterinterface_disp", skin = 0, bodygroup = {} },  ["frontbit_behind"] = { type = "Model", model = "models/XQM/panel360.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "side", pos = Vector(6.011, 0.037, -3.062), angle = Angle(0, 0, 0), size = Vector(1.881, 0.136, 0.136), color = Color(170, 176, 188, 255), surpresslightning = false, material = "models/props_pipes/pipemetal004a", skin = 0, bodygroup = {} },  ["top"] = { type = "Model", model = "models/props_wasteland/laundry_washer001a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(20.954, 2.823, -8.398), angle = Angle(-78.195, 180, 0), size = Vector(0.085, 0.085, 0.143), color = Color(170, 176, 188, 255), surpresslightning = false, material = "models/props/de_nuke/coolingtower", skin = 0, bodygroup = {} },  ["frontbit_pipe"] = { type = "Model", model = "models/props_debris/rebar_smallnorm01c.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "side", pos = Vector(0, 0.239, 0.003), angle = Angle(21.548, 0, 0), size = Vector(0.649, 0.666, 0.319), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_lab/ravendoor_sheet", skin = 0, bodygroup = {} },  ["side"] = { type = "Model", model = "models/props_wasteland/horizontalcoolingtank04.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "top", pos = Vector(-0.736, -2.576, 0.358), angle = Angle(90, -78, 0), size = Vector(0.028, 0.041, 0.048), color = Color(170, 176, 188, 255), surpresslightning = false, material = "models/props/de_nuke/coolingtower", skin = 0, bodygroup = {} },  ["frontbit_behind+"] = { type = "Model", model = "models/XQM/panel360.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "frontbit_behind", pos = Vector(10.821, 0, 0), angle = Angle(0, 0, 0), size = Vector(1, 0.136, 0.136), color = Color(170, 176, 188, 255), surpresslightning = false, material = "models/props/de_nuke/coolingtower", skin = 0, bodygroup = {} },  ["frontbit__behind_underbit"] = { type = "Model", model = "models/hunter/tubes/tube2x2x1b.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "frontbit_behind", pos = Vector(5.613, 0.043, 0), angle = Angle(-45, 90, 90), size = Vector(0.074, 0.074, 0.231), color = Color(170, 176, 188, 255), surpresslightning = false, material = "models/props/de_nuke/coolingtower", skin = 0, bodygroup = {} },  ["frontbit_behind_2"] = { type = "Model", model = "models/hunter/triangles/trapezium3x3x1a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "frontbit_behind+", pos = Vector(0, -1.275, 0), angle = Angle(-90, 90, 0), size = Vector(0.032, 0.085, 0.048), color = Color(165, 165, 165, 255), surpresslightning = false, material = "phoenix_storms/metalset_1-2", skin = 0, bodygroup = {} },  ["frontbit_behind_2+"] = { type = "Model", model = "models/hunter/triangles/trapezium3x3x1a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "frontbit_behind+", pos = Vector(-0.461, 2, 0), angle = Angle(90, 90, 0), size = Vector(0.032, 0.092, 0.089), color = Color(165, 165, 165, 255), surpresslightning = false, material = "phoenix_storms/metalset_1-2", skin = 0, bodygroup = {} },  ["frontbit_behind_bottom"] = { type = "Model", model = "models/props_docks/dock03_pole01a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "frontbit_behind_2+", pos = Vector(0, 1.937, 3.118), angle = Angle(0, 0, 10), size = Vector(0.092, 0.092, 0.012), color = Color(165, 165, 165, 255), surpresslightning = false, material = "phoenix_storms/metalset_1-2", skin = 0, bodygroup = {} },  ["frontbit_behind_mp5"] = { type = "Model", model = "models/weapons/w_smg_mp5.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "frontbit_behind_2", pos = Vector(0, -2.057, -4.428), angle = Angle(0, 90, 0), size = Vector(0.977, 1.077, 0.354), color = Color(165, 165, 165, 255), surpresslightning = false, material = "phoenix_storms/metalset_1-2", skin = 0, bodygroup = {} }  }   SWEP.ViewModelBoneMods = {  ["v_weapon.xm1014_Parent"] = { scale = Vector(1, 1, 1), pos = Vector(-5, -2, -3), angle = Angle(0, 0, 0) }  } end  SWEP.ShowWorldModel = false SWEP.ShowViewModel = false  SWEP.Base = "weapon_zs_base"  SWEP.HoldType = "ar2"  SWEP.ViewModel = "models/weapons/cstrike/c_shot_xm1014.mdl" SWEP.WorldModel = "models/weapons/w_shot_xm1014.mdl" SWEP.UseHands = false  SWEP.Primary.Damage = 195 SWEP.Primary.NumShots = 1 SWEP.Primary.Delay = 1 SWEP.HeadshotMulti = 1.5 SWEP.ReloadSound = Sound("ambient/machines/thumper_startup1.wav")  SWEP.Primary.ClipSize = 2 SWEP.Primary.Automatic = true SWEP.Primary.Ammo = "357" SWEP.Primary.DefaultClip = 9 SWEP.RequiredClip = 2  SWEP.ConeMax = 0.35 SWEP.ConeMin = 0.35  SWEP.Recoil = 5  SWEP.IronSightsPos = Vector(5.015, -8, 2.52) SWEP.IronSightsAng = Vector(0, 0, 0)  SWEP.WalkSpeed = SPEED_SLOWER  SWEP.FireAnimSpeed = 0.4  SWEP.TracerName = "tracer_colossus"  SWEP.ReloadSpeed = 1.155 SWEP.PlayerReloadSpeedEffectiveness = 0.5  SWEP.Tier = 6  SWEP.MaxStock = 2 SWEP.Pens = 4 SWEP.PenTaper = 0.9 SWEP.PenOneTracer = true  SWEP.WeaponBuildup = {  Colour = {30, 120, 170, 255},  Name = "Pierces" }  SWEP.ReloadPitch = 147  SWEP.Primary.MaxDistance = 1024  GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_RELOAD_SPEED, 0.06, 1) branch = GAMEMODE:AddNewRemantleBranch(SWEP, 1, "'Dominator' Gauss Cannon", "Very heavy and slow to reload, but deals immense damage and pierces further. Uses 4 ammo. Reduced headshot multiplier. Alternate fire has a timed charged attack.", function(wept)  wept.ViewModel = "models/weapons/c_physcannon.mdl"  wept.WorldModel = "models/weapons/w_physics.mdl"   wept.ViewModelFOV = 49   wept.Pens = 7  wept.RequiredClip = 4  wept.Primary.ClipSize = 4  wept.Primary.Damage = wept.Primary.Damage * 1.1   wept.ReloadSpeed = wept.ReloadSpeed * 0.84  wept.ReloadPitch = 147 * 0.8   wept.HoldType = "physgun"  wept.HeadshotMulti = 1.1   wept.ChargeDelay = 0.2  wept.WalkSpeed = SPEED_SLOWEST - 7      wept.HUD3DBone = "Base"  wept.HUD3DPos = Vector(0.5, -1.6, -12.5)  wept.HUD3DAng = Angle(180, 0, -20)     wept.HUD3DScale = 0.03      wept.ResistanceAmmoAs = "xbowbolt"   function wept:EmitFireSound()  local mega_charge = self.Mega  if mega_charge then  self:EmitSound("weapons/zs_dds/zs_gc.ogg", 80, 85, 1)  self:EmitSound("npc/strider/fire.wav", 85, 75, 0.85, CHAN_WEAPON + 20)  self:EmitSound("weapons/physcannon/energy_sing_explosion2.wav", 85, 140, 0.85, CHAN_WEAPON + 21)   if CLIENT then  timer.Simple(0.6, function() MySelf:SetDSP(32) end)  timer.Simple(1, function() MySelf:SetDSP(0) end)  end   return  end   self:EmitSound("npc/strider/fire.wav", 85, 85, 0.45)  self:EmitSound("weapons/zs_dds/zs_gc.ogg", 80, 100, 1)  self:EmitSound("weapons/physcannon/energy_sing_explosion2.wav", 85, 180, 0.75, CHAN_WEAPON + 20)  end   function wept:PrimaryAttack()  if not self:CanPrimaryAttack() then return end   self:SetNextPrimaryFire(CurTime() + self:GetFireDelay())  self.Mega = false   self:EmitFireSound()  self:TakeAmmo()  self:ShootBullets(self.Primary.Damage, self.Primary.NumShots, self:GetCone())   local owner = self:GetOwner()  owner:SetGroundEntity(NULL)  owner:SetVelocity(-290 * owner:GetAimVector())    self.IdleAnimation = CurTime() + self:SequenceDuration()  end   function wept:Initialize()  self.BaseClass.Initialize(self)   self.ChargeSound = CreateSound(self, "weapons/zs_dds/zs_gcloop.ogg")  end   function wept:SecondaryAttack()  end   function wept:SecondaryAttack()  if not self:CanPrimaryAttack() or self:GetCharging() then return end   if self:GetWeaponBuildup() >= 0.9 then  self:SetNextPrimaryFire(CurTime() + self:GetFireDelay())  self:SetLastChargeTime(CurTime())  self:TakeAmmo()  self:SetCharging(true)  self:EmitSound("weapons/zs_dds/zs_gcstart.ogg", 85)  end  end   function wept:SetLastChargeTime(lct)  self:SetDTFloat(8, lct)  end   function wept:GetLastChargeTime()  return self:GetDTFloat(8)  end   function wept:SetGunCharge(charge)  self:SetDTInt(1, charge)  end   function wept:GetGunCharge(charge)  return self:GetDTInt(1)  end   function wept:SetCharging(charge)  self:SetDTBool(1, charge)  end   function wept:GetCharging()  return self:GetDTBool(1)  end    function wept:CheckCharge()  if self:GetCharging() then  local owner = self:GetOwner()  if self:GetGunCharge() == 10 then  self.Mega = true   self:EmitFireSound()   self.FireAnimSpeed = 0.3  self:ShootBullets(self.Primary.Damage, self.Primary.NumShots, self:GetCone())  self.IdleAnimation = CurTime() + self:SequenceDuration()  self.FireAnimSpeed = 1   self:SetCharging(false)  self:SetLastChargeTime(CurTime())  self:SetGunCharge(0)  elseif self:GetGunCharge() < 10 and self:GetPrimaryAmmoCount() ~= 0 and self:GetLastChargeTime() + self.ChargeDelay < CurTime() then  self:SetGunCharge(self:GetGunCharge() + 1)  self:SetLastChargeTime(CurTime())  end   self.ChargeSound:PlayEx(math.min(1, self:GetGunCharge() * 0.35), 100)  else  self.ChargeSound:Stop()  end  end   local lerped_pos_y = -7  function wept:Think()  self.BaseClass.Think(self)   if self:Clip1() <= 0 and self:GetPrimaryAmmoCount() <= 0 then  self:MockReload()  end   self:CheckCharge()   if CLIENT then  lerped_pos_y = Lerp(0.05, lerped_pos_y, -7 - self:GetGunCharge() * 0.2)  self.VElements["dominator_base+"].pos.y = lerped_pos_y  self.VElements["dominator_base++"].pos.y = lerped_pos_y + 1.3  self.VElements["dominator_base++++++"].pos.x = -27.1 - lerped_pos_y  end  end     wept.VElements = {  ["dominator_base+++"] = { type = "Model", model = "models/props_combine/combine_fence01b.mdl", bone = "Base", rel = "dominator_base", pos = Vector(-10, -2, -0.2), angle = Angle(-90, 80, 80), size = Vector(0.107, 0.075, 0.209), color = Color(155, 215, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["dominator_base"] = { type = "Model", model = "models/props_combine/combinetrain01a.mdl", bone = "Base", rel = "", pos = Vector(-1, -1, 9.869), angle = Angle(90, -90, 0), size = Vector(0.029, 0.029, 0.014), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["dominator_base+++++++"] = { type = "Model", model = "models/props_lab/generatorconsole.mdl", bone = "Base", rel = "dominator_base", pos = Vector(-16, -1.5, -2), angle = Angle(0, 110, 0), size = Vector(0.119, 0.119, 0.09), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["dominator_base++"] = { type = "Model", model = "models/props_combine/combine_generator01.mdl", bone = "Base", rel = "dominator_base", pos = Vector(-4, -5.715, -2.597), angle = Angle(-61.949, 90, 90), size = Vector(0.1, 0.079, 0.119), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["dominator_base++++++"] = { type = "Model", model = "models/props_combine/combine_mortar01a.mdl", bone = "Base", rel = "dominator_base", pos = Vector(-20.105, -0.519, -3.5), angle = Angle(90, 180, 0), size = Vector(0.237, 0.25, 0.432), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["dominator_base+++++"] = { type = "Model", model = "models/props_combine/combine_intmonitor001.mdl", bone = "Base", rel = "dominator_base", pos = Vector(-23, -1.219, -1.597), angle = Angle(29.221, 180, 0), size = Vector(0.119, 0.109, 0.09), color = Color(125, 175, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["dominator_base++++"] = { type = "Model", model = "models/props_combine/combine_fence01b.mdl", bone = "Base", rel = "dominator_base", pos = Vector(12, -4, 0), angle = Angle(-90, 180, 0), size = Vector(0.107, 0.119, 0.209), color = Color(155, 215, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["dominator_base+"] = { type = "Model", model = "models/props_combine/combine_generator01.mdl", bone = "Base", rel = "dominator_base", pos = Vector(-4, -7, -2.557), angle = Angle(-90, 90, 90), size = Vector(0.1, 0.079, 0.119), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} }  }   wept.WElements = {  ["dominator_base+++"] = { type = "Model", model = "models/props_combine/combine_fence01b.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "dominator_base", pos = Vector(-10, -2, -0.2), angle = Angle(-90, 80, 80), size = Vector(0.107, 0.075, 0.1), color = Color(155, 215, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["dominator_base"] = { type = "Model", model = "models/props_combine/combinetrain01a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(23, -2.715, -7), angle = Angle(-6, 15.194, -155.456), size = Vector(0.029, 0.029, 0.014), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["dominator_base+"] = { type = "Model", model = "models/props_combine/combine_generator01.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "dominator_base", pos = Vector(-4, -7, -2.557), angle = Angle(-90, 90, 90), size = Vector(0.01, 0.079, 0.119), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["dominator_base++"] = { type = "Model", model = "models/props_combine/combine_generator01.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "dominator_base", pos = Vector(-4, -5.715, -2.597), angle = Angle(-61.949, 90, 90), size = Vector(0.01, 0.079, 0.119), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["dominator_base+++++++"] = { type = "Model", model = "models/props_lab/generatorconsole.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "dominator_base", pos = Vector(-16, -1.5, -2), angle = Angle(0, 110, 0), size = Vector(0.119, 0.119, 0.09), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["dominator_base+++++"] = { type = "Model", model = "models/props_combine/combine_intmonitor001.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "dominator_base", pos = Vector(-23, -1.219, -1.597), angle = Angle(29.221, 180, 0), size = Vector(0.119, 0.109, 0.09), color = Color(125, 175, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["dominator_base++++++"] = { type = "Model", model = "models/props_combine/combine_mortar01a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "dominator_base", pos = Vector(-20.105, -0.519, -3.5), angle = Angle(90, 180, 0), size = Vector(0.237, 0.25, 0.237), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["dominator_base++++"] = { type = "Model", model = "models/props_combine/combine_fence01b.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "dominator_base", pos = Vector(12, -4, 0), angle = Angle(-90, 180, 0), size = Vector(0.107, 0.119, 0.1), color = Color(155, 215, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} }  }   function wept:CanPrimaryAttack()  if self:GetCharging() or self:GetOwner():IsHolding() or self:GetOwner():GetBarricadeGhosting() or self:GetReloadFinish() > 0 then return false end   if self:Clip1() < self.RequiredClip then  self:EmitSound(self.DryFireSound)  self:SetNextPrimaryFire(CurTime() + math.max(0.25, self.Primary.Delay))  return false  end   return self:GetNextPrimaryFire() <= CurTime()  end  end) branch.CollectiveName = "Dominator" branch.Killicon = "weapon_zs_dominator"  function SWEP:ShootBullets(dmg, numbul, cone)  local owner = self:GetOwner()  self:SendWeaponAnimation()  owner:DoAttackEvent()   local mega_charge = self.Mega      if mega_charge then         dmg = dmg * 2.25          self.Pens = self.Pens * 2     end      local shoot_pos = self.CustomShootPos or owner:GetShootPos()     local aim_vec   = self.CustomAimVec or owner:GetAimVector()      DO_BULLET_LAG_COMP = true     owner:FireBulletsLua(shoot_pos, aim_vec, cone, numbul, dmg, nil, self.Primary.KnockbackScale, self.TracerName, self.BulletCallback, self.Primary.HullSize, nil, self.Primary.MaxDistance, nil, self)     DO_BULLET_LAG_COMP = nil   if mega_charge then         self.Pens = self.Pens / 2   owner:ViewPunch(Angle(-10, 0, -4 * (math.random(2) == 1 and -1 or 1) * 1))  owner:SetGroundEntity(NULL)  owner:SetVelocity(-430 * owner:GetAimVector())   self:SetWeaponBuildup(math.max(self:GetWeaponBuildup() - 0.9, 0))  end end  function SWEP:SendWeaponAnimation()  self:SendWeaponAnim(ACT_VM_PRIMARYATTACK)   local owner = self:GetOwner()  local vm = owner:GetViewModel()  local speed = self.ReloadSpeed * self:GetReloadSpeedMultiplier()   if vm:IsValid() then  vm:SetPlaybackRate(0.25 * speed)  end   self:SetReloadFinish(CurTime() + 2.1 / speed)   if IsFirstTimePredicted() then  self:EmitSound("ambient/machines/thumper_startup1.wav", 70, self.ReloadPitch, 1, CHAN_WEAPON + 21)  end end  function SWEP:MockReload()  local speed = self.ReloadSpeed * self:GetReloadSpeedMultiplier()  self:SetReloadFinish(CurTime() + 2.1 / speed) end  function SWEP:PrimaryAttack()  if not self:CanPrimaryAttack() then return end   self:SetNextPrimaryFire(CurTime() + self:GetFireDelay())  self.Mega = false   self:EmitFireSound()  self:TakeAmmo()  self:ShootBullets(self.Primary.Damage, self.Primary.NumShots, self:GetCone())  self.IdleAnimation = CurTime() + self:SequenceDuration() end  function SWEP:SecondaryAttack()  if not self:CanPrimaryAttack() then return end   if self:GetWeaponBuildup() >= 0.9 then  self:SetNextPrimaryFire(CurTime() + self:GetFireDelay())  self.Mega = true   self:EmitFireSound()  self:TakeAmmo()  self:ShootBullets(self.Primary.Damage, self.Primary.NumShots, self:GetCone())  self.IdleAnimation = CurTime() + self:SequenceDuration()  end end  function SWEP:Reload()  local owner = self:GetOwner()  if owner:IsHolding() or owner.IsCharging and owner:IsCharging() then return end   if self:GetIronsights() then  self:SetIronsights(false)  end   if self:CanReload() then  self:MockReload()  end end  function SWEP:Deploy()  self.BaseClass.Deploy(self)   if self:Clip1() <= 0 then  self:MockReload()  end   return true end  function SWEP:Think()  self.BaseClass.Think(self)   if self:Clip1() <= 0 and self:GetPrimaryAmmoCount() <= 0 then  self:MockReload()  end end  function SWEP.BulletCallback(attacker, tr, dmginfo, curpen)     local my_wep = attacker:GetActiveWeapon()     if IsValid(my_wep) then         if SERVER and my_wep.Mega and curpen == 0 then             util.BlastDamagePlayer(my_wep, attacker, tr.HitPos, 75, dmginfo:GetDamage(), DMG_ALWAYSGIB, 0.95)         end          if not my_wep.Mega and curpen >= 1 and tr.Entity and tr.Entity:IsValidLivingZombie() then             my_wep:SetWeaponBuildup(math.min(1, my_wep:GetWeaponBuildup() + 0.06))         end     end      if curpen == 0 then         local effectdata = EffectData()             effectdata:SetOrigin(tr.HitPos)             effectdata:SetNormal(tr.HitNormal)         util.Effect("hit_hunter", effectdata)     end end  function SWEP:EmitReloadSound()  end  function SWEP:EmitReloadFinishSound() end  function SWEP:EmitFireSound()  local mega_charge = self.Mega  if mega_charge then  self:EmitSound("weapons/zs_dds/zs_gc.ogg", 80, 85, 1)  self:EmitSound("weapons/zs_rail/rail.wav", 80, 55, 0.95, CHAN_WEAPON + 20)  self:EmitSound("weapons/zs_dds/zs_dd.ogg", 76, 135, 0.85, CHAN_WEAPON + 21)   if CLIENT then  timer.Simple(0.6, function() MySelf:SetDSP(32) end)  timer.Simple(1, function() MySelf:SetDSP(0) end)  end   return  end   self:EmitSound("weapons/m4a1/m4a1_unsil-1.wav", 76, 45, 0.35)  self:EmitSound("weapons/zs_rail/rail.wav", 76, 100, 0.95, CHAN_WEAPON + 20) end 