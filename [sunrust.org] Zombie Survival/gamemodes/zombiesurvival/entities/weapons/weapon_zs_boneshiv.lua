AddCSLuaFile()  SWEP.PrintName = "Bone Shiv" SWEP.Description = "A bone constructed shiv. Very sharp and deals extra damage to the back. Grants you fervor, blood armour and stamina bonuses on backstab kill."  if CLIENT then  SWEP.ViewModelFOV = 55  SWEP.ViewModelFlip = false   SWEP.ShowViewModel = false  SWEP.ShowWorldModel = false   SWEP.VElements = {  ["hilt"] = { type = "Model", model = "models/Gibs/HGIBS.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "handle", pos = Vector(-0.116, 0.945, 4.927), angle = Angle(0, 0, 0), size = Vector(0.263, 0.349, 0.349), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["eye"] = { type = "Sprite", sprite = "sprites/glow", bone = "ValveBiped.Bip01_R_Hand", rel = "hilt", pos = Vector(0.788, 0.615, 0.165), size = { x = 0.6, y = 0.6 }, color = Color(0, 165, 255, 255), nocull = true, additive = true, vertexalpha = true, vertexcolor = true, ignorez = false},  ["handle"] = { type = "Model", model = "models/Gibs/HGIBS_spine.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(3.253, 1.315, -1.132), angle = Angle(0, 90, -17.348), size = Vector(0.407, 0.421, 0.524), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["blade+"] = { type = "Model", model = "models/Gibs/HGIBS_spine.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "handle", pos = Vector(0, -0.48, -6.365), angle = Angle(0, 180, -8.054), size = Vector(0.202, 0.5, 0.5), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["eye+"] = { type = "Sprite", sprite = "sprites/glow", bone = "ValveBiped.Bip01_R_Hand", rel = "hilt", pos = Vector(0.788, -0.594, 0.165), size = { x = 0.6, y = 0.6 }, color = Color(255, 115, 0, 255), nocull = true, additive = true, vertexalpha = true, vertexcolor = true, ignorez = false},  ["hilt2+"] = { type = "Model", model = "models/Gibs/HGIBS_spine.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "handle", pos = Vector(0, -1.124, -2.418), angle = Angle(0, 180, 90), size = Vector(0.388, 0.335, 0.252), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["blade_tip+"] = { type = "Model", model = "models/XQM/trianglelong4.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "handle", pos = Vector(0, -0.116, -9.204), angle = Angle(-73.065, -90, -90), size = Vector(0.126, 0.145, 0.165), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/gibs/hgibs/spine", skin = 0, bodygroup = {} },  ["hilt2"] = { type = "Model", model = "models/Gibs/HGIBS_spine.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "handle", pos = Vector(0, 0.921, -2.418), angle = Angle(0, 0, 90), size = Vector(0.388, 0.335, 0.252), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["blade_tip"] = { type = "Model", model = "models/XQM/trianglelong4.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "handle", pos = Vector(0, -0.415, -9.204), angle = Angle(-73.125, 90, -90), size = Vector(0.126, 0.145, 0.165), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/gibs/hgibs/spine", skin = 0, bodygroup = {} },  ["blade"] = { type = "Model", model = "models/Gibs/HGIBS_spine.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "handle", pos = Vector(0, 0, -6.365), angle = Angle(0, 0, -8.054), size = Vector(0.202, 0.5, 0.5), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["blade++"] = { type = "Model", model = "models/Gibs/HGIBS_spine.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "handle", pos = Vector(0, -0.08, -4.568), angle = Angle(0, 180, -31.827), size = Vector(0.156, 0.649, 0.317), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} }  }  SWEP.WElements = {  ["hilt"] = { type = "Model", model = "models/Gibs/HGIBS.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "handle", pos = Vector(-0.116, 0.945, 4.927), angle = Angle(0, 180, 0), size = Vector(0.263, 0.349, 0.349), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["eye"] = { type = "Sprite", sprite = "sprites/glow", bone = "ValveBiped.Bip01_R_Hand", rel = "hilt", pos = Vector(0.788, 0.615, 0.165), size = { x = 0.6, y = 0.6 }, color = Color(0, 165, 255, 255), nocull = true, additive = true, vertexalpha = true, vertexcolor = true, ignorez = false},  ["handle"] = { type = "Model", model = "models/Gibs/HGIBS_spine.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(3.253, 1.315, -1.132), angle = Angle(0, 90, -17.348), size = Vector(0.407, 0.421, 0.524), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["blade+"] = { type = "Model", model = "models/Gibs/HGIBS_spine.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "handle", pos = Vector(0, -0.48, -6.365), angle = Angle(0, 180, -8.054), size = Vector(0.202, 0.5, 0.5), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["eye+"] = { type = "Sprite", sprite = "sprites/glow", bone = "ValveBiped.Bip01_R_Hand", rel = "hilt", pos = Vector(0.788, -0.594, 0.165), size = { x = 0.6, y = 0.6 }, color = Color(255, 115, 0, 255), nocull = true, additive = true, vertexalpha = true, vertexcolor = true, ignorez = false},  ["hilt2+"] = { type = "Model", model = "models/Gibs/HGIBS_spine.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "handle", pos = Vector(0, -1.124, -2.418), angle = Angle(0, 180, 90), size = Vector(0.388, 0.335, 0.252), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["blade_tip+"] = { type = "Model", model = "models/XQM/trianglelong4.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "handle", pos = Vector(0, -0.116, -9.204), angle = Angle(-73.065, -90, -90), size = Vector(0.126, 0.145, 0.165), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/gibs/hgibs/spine", skin = 0, bodygroup = {} },  ["hilt2"] = { type = "Model", model = "models/Gibs/HGIBS_spine.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "handle", pos = Vector(0, 0.921, -2.418), angle = Angle(0, 0, 90), size = Vector(0.388, 0.335, 0.252), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["blade_tip"] = { type = "Model", model = "models/XQM/trianglelong4.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "handle", pos = Vector(0, -0.415, -9.204), angle = Angle(-73.125, 90, -90), size = Vector(0.126, 0.145, 0.165), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/gibs/hgibs/spine", skin = 0, bodygroup = {} },  ["blade"] = { type = "Model", model = "models/Gibs/HGIBS_spine.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "handle", pos = Vector(0, 0, -6.365), angle = Angle(0, 0, -8.054), size = Vector(0.202, 0.5, 0.5), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} },  ["blade++"] = { type = "Model", model = "models/Gibs/HGIBS_spine.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "handle", pos = Vector(0, -0.08, -4.568), angle = Angle(0, 180, -31.827), size = Vector(0.156, 0.649, 0.317), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} }  } end  SWEP.Base = "weapon_zs_basemelee" local BaseClass = baseclass.Get("weapon_zs_basemelee")  SWEP.HoldType = "knife"  SWEP.ViewModel = "models/weapons/cstrike/c_knife_t.mdl" SWEP.WorldModel = "models/weapons/w_knife_t.mdl" SWEP.UseHands = true  SWEP.MeleeDamage = 60 SWEP.MeleeRange = 59 SWEP.MeleeSize = 1.2  SWEP.WalkSpeed = SPEED_FASTEST  SWEP.Primary.Delay = 0.7  SWEP.HitDecal = "Manhackcut"  SWEP.HitGesture = ACT_HL2MP_GESTURE_RANGE_ATTACK_KNIFE SWEP.MissGesture = SWEP.HitGesture  SWEP.HitAnim = ACT_VM_SECONDARYATTACK SWEP.MissAnim = ACT_VM_PRIMARYATTACK  SWEP.NoHitSoundFlesh = true  SWEP.AllowQualityWeapons = true  SWEP.BlockRotation = Angle(0, 0, -70) SWEP.BlockOffset = Vector(5, 10, 0) SWEP.DeploySpeedMulti = 2  SWEP.Stability = 20 SWEP.BlockReduction = 0.7 SWEP.BackstabRatio = 2.25  SWEP.StaminaUsage = 0.14  SWEP.Tier = 3  GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_FIRE_DELAY, -0.075) GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_STAMINA_USAGE, -0.01) GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_BACKSTAB_RATIO, 0.12, 1) GAMEMODE:AddNewRemantleBranch(SWEP, 1, "Vitrolic Spur", "Only stamina reward, inflicts acid on stab. Backstabs inflict soften and sapped. Dodges instead of bashing.", function(wept)  wept.MeleeDamage  = wept.MeleeDamage * 0.75  wept.WalkSpeed  = SPEED_FASTEST + 5     wept.IsDodge        = 0.6  wept.OnZombieKilled = function(self, zombie, total, dmginfo)         local killer = self:GetOwner()         if self.m_BackStabbing and zombie:IsValidLivingZombie() then             killer:AddDecimalStamina(0.8)         end  end   if SERVER then  function wept:OnMeleeHit(hitent, hitflesh, tr)  local dif = math.abs(hitent:GetForward():Angle().yaw - self:GetOwner():GetForward():Angle().yaw)  if hitent:IsValid() and hitent:IsPlayer() and not self.m_BackStabbing and util.AngleCompCheck(dif) then  self.m_BackStabbing = true  self.MeleeDamage = self.MeleeDamage * self.BackstabRatio  end   local owner = self:GetOwner()             local status = hitent:GiveStatus("dot_corrosion")  status:AddDamage(25 * (owner.AcidDamageMul or 1))             status.Applier = owner   if self.m_BackStabbing and hitent:IsValid() and hitent:IsPlayer() then  status = hitent:GiveStatus("debuff_zombie_sap")  status.DieTime = CurTime() + 4 * (owner.DebuffDurationMul or 1)  status.Applier = owner   status = hitent:GiveStatus("debuff_zombie_soften")  status.DieTime = CurTime() + 5 * (owner.DebuffDurationMul or 1)  status.Applier = owner   hitent:AddLegDamage(16)  end  end  else  wept.VElements["eye"].color  = COLOR_LIMEGREEN  wept.VElements["eye+"].color  = COLOR_LIMEGREEN   wept.WElements["eye"].color  = COLOR_LIMEGREEN  wept.WElements["eye+"].color  = COLOR_LIMEGREEN  end end).CollectiveName = "Spur"  function SWEP:PlaySwingSound()  self:EmitSound("weapons/knife/knife_slash"..math.random(2)..".wav") end  function SWEP:PlayHitSound()  self:EmitSound("weapons/knife/knife_hitwall1.wav", 75, 130) end  function SWEP:PlayHitFleshSound()  self:EmitSound("weapons/knife/knife_stab.wav", 75, 170) end  function SWEP:OnMeleeHit(hitent, hitflesh, tr)  local dif = math.abs(hitent:GetForward():Angle().yaw - self:GetOwner():GetForward():Angle().yaw)  if hitent:IsValid() and hitent:IsPlayer() and not self.m_BackStabbing and util.AngleCompCheck(dif) then  self.m_BackStabbing = true  self.MeleeDamage = self.MeleeDamage * self.BackstabRatio  end end  function SWEP:PostOnMeleeHit(hitent, hitflesh, tr)  if self.m_BackStabbing then  self.m_BackStabbing = false   self.MeleeDamage = self.MeleeDamage / self.BackstabRatio  end end  function SWEP:OnZombieKilled(zombie, total, dmginfo)  local killer = self:GetOwner()  if self.m_BackStabbing and zombie:IsValidLivingZombie() then  killer:GiveStack("buff_stack_fervor")  killer:SetBloodArmor(math.min(killer:GetBloodArmor() + 5 * killer.BloodarmorGainMul, killer:GetBloodArmorMax() + 15))  killer:AddDecimalStamina(0.8)  end end  if SERVER then  function SWEP:InitializeHoldType()  self.ActivityTranslate = {}  self.ActivityTranslate[ACT_HL2MP_IDLE] = ACT_HL2MP_IDLE_KNIFE  self.ActivityTranslate[ACT_HL2MP_WALK] = ACT_HL2MP_WALK_KNIFE  self.ActivityTranslate[ACT_HL2MP_RUN] = ACT_HL2MP_RUN_KNIFE  self.ActivityTranslate[ACT_HL2MP_IDLE_CROUCH] = ACT_HL2MP_IDLE_CROUCH_PHYSGUN  self.ActivityTranslate[ACT_HL2MP_WALK_CROUCH] = ACT_HL2MP_WALK_CROUCH_KNIFE  self.ActivityTranslate[ACT_HL2MP_GESTURE_RANGE_ATTACK] = ACT_HL2MP_GESTURE_RANGE_ATTACK_KNIFE  self.ActivityTranslate[ACT_HL2MP_GESTURE_RELOAD] = ACT_HL2MP_GESTURE_RELOAD_KNIFE  self.ActivityTranslate[ACT_HL2MP_JUMP] = ACT_HL2MP_JUMP_KNIFE  self.ActivityTranslate[ACT_RANGE_ATTACK1] = ACT_RANGE_ATTACK_KNIFE  end end 