AddCSLuaFile() local BaseClass = baseclass.Get("weapon_zs_basemelee")  SWEP.PrintName = "Falchion and Shield"  if CLIENT then  SWEP.ViewModelFOV = 70  SWEP.ShowViewModel = false  SWEP.ShowWorldModel = false   SWEP.VElements = {  ["base+++"] = { type = "Model", model = "models/hunter/tubes/circle2x2d.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(1.96, 0, 29.1), angle = Angle(-10.52, 0, -90), size = Vector(0.086, 0.09, 0.14), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_canal/canal_bridge_railing_01b", skin = 0, bodygroup = {} },  ["shield_base++++++"] = { type = "Model", model = "models/props_combine/pipes03_single02b.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "shield_base", pos = Vector(1.817, 2.178, 8.472), angle = Angle(140.466, -2.631, 13.706), size = Vector(0.017, 0.025, 0.013), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_wasteland/grainelevator01", skin = 0, bodygroup = {} },  ["shield_base++++"] = { type = "Model", model = "models/props_phx/construct/metal_angle90.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "shield_base", pos = Vector(-0.25, -0.051, -0.25), angle = Angle(90, 0, -90), size = Vector(0.2, 0.2, 0.207), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_wasteland/wood_fence01a_skin2", skin = 0, bodygroup = {} },  ["base++"] = { type = "Model", model = "models/hunter/plates/plate05x1.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(-0.024, 0, 18), angle = Angle(0, 0, 90), size = Vector(0.171, 0.5, 0.137), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_canal/canal_bridge_railing_01b", skin = 0, bodygroup = {} },  ["base+"] = { type = "Model", model = "models/gibs/metal_gib1.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(0, 0, 6.281), angle = Angle(0, -90, 79.763), size = Vector(1.25, 0.6, 2.065), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_pipes/pipemetal004b", skin = 0, bodygroup = {} },  ["shield_base++"] = { type = "Model", model = "models/props_phx/construct/metal_angle90.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "shield_base", pos = Vector(0.25, -0.051, -0.25), angle = Angle(-180, 0, -90), size = Vector(0.2, 0.2, 0.207), color = Color(255, 85, 85, 255), surpresslightning = false, material = "models/props_wasteland/wood_fence01a", skin = 0, bodygroup = {} },  ["shield_base+"] = { type = "Model", model = "models/props_phx/construct/metal_angle90.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "shield_base", pos = Vector(-0.25, -0.051, 0.25), angle = Angle(0, 0, -90), size = Vector(0.2, 0.2, 0.207), color = Color(255, 85, 85, 255), surpresslightning = false, material = "models/props_wasteland/wood_fence01a", skin = 0, bodygroup = {} },  ["shield_base+++"] = { type = "Model", model = "models/props_phx/construct/metal_angle90.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "shield_base", pos = Vector(0.25, -0.051, 0.25), angle = Angle(-90, 0, -90), size = Vector(0.2, 0.2, 0.207), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_wasteland/wood_fence01a_skin2", skin = 0, bodygroup = {} },  ["base"] = { type = "Model", model = "models/props_borealis/bluebarrel001.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(2.94, 1.475, 3.098), angle = Angle(-175.295, -2.589, 0.375), size = Vector(0.086, 0.061, 0.245), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_pipes/pipemetal004b", skin = 0, bodygroup = {} },  ["shield_base"] = { type = "Model", model = "models/props_wasteland/wheel03b.mdl", bone = "ValveBiped.Bip01_L_Forearm", rel = "", pos = Vector(11.319, -0.193, 2.045), angle = Angle(-11.004, 20.45, -94.703), size = Vector(0.174, 0.068, 0.174), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_wasteland/metal_tram001a", skin = 0, bodygroup = {} },  ["shield_base+++++"] = { type = "Model", model = "models/props_combine/pipes03_single02b.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "shield_base", pos = Vector(7.638, 1.065, 2.994), angle = Angle(151.333, 6.416, 13.901), size = Vector(0.012, 0.017, 0.008), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_wasteland/grainelevator01", skin = 0, bodygroup = {} }  }   SWEP.WElements = {  ["base+++"] = { type = "Model", model = "models/hunter/tubes/circle2x2d.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(1.96, 0, 29.1), angle = Angle(-10.52, 0, -90), size = Vector(0.086, 0.09, 0.14), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_canal/canal_bridge_railing_01b", skin = 0, bodygroup = {} },  ["shield_base++++++"] = { type = "Model", model = "models/props_combine/pipes03_single02b.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "shield_base", pos = Vector(1.817, 2.178, 8.472), angle = Angle(140.466, -2.631, 13.706), size = Vector(0.017, 0.025, 0.013), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_wasteland/grainelevator01", skin = 0, bodygroup = {} },  ["shield_base++++"] = { type = "Model", model = "models/props_phx/construct/metal_angle90.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "shield_base", pos = Vector(-0.25, -0.051, -0.25), angle = Angle(90, 0, -90), size = Vector(0.2, 0.2, 0.207), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_wasteland/wood_fence01a_skin2", skin = 0, bodygroup = {} },  ["base++"] = { type = "Model", model = "models/hunter/plates/plate05x1.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(-0.024, 0, 18), angle = Angle(0, 0, 90), size = Vector(0.171, 0.5, 0.137), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_canal/canal_bridge_railing_01b", skin = 0, bodygroup = {} },  ["base+"] = { type = "Model", model = "models/gibs/metal_gib1.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(0, 0, 6.281), angle = Angle(0, -90, 79.763), size = Vector(1.25, 0.6, 2.065), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_pipes/pipemetal004b", skin = 0, bodygroup = {} },  ["shield_base++"] = { type = "Model", model = "models/props_phx/construct/metal_angle90.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "shield_base", pos = Vector(0.25, -0.051, -0.25), angle = Angle(-180, 0, -90), size = Vector(0.2, 0.2, 0.207), color = Color(255, 85, 85, 255), surpresslightning = false, material = "models/props_wasteland/wood_fence01a", skin = 0, bodygroup = {} },  ["shield_base+"] = { type = "Model", model = "models/props_phx/construct/metal_angle90.mdl", bone = "ValveBiped.Bip01_L_Forearm", rel = "shield_base", pos = Vector(-0.25, -0.051, 0.25), angle = Angle(0, 0, -90), size = Vector(0.2, 0.2, 0.207), color = Color(255, 85, 85, 255), surpresslightning = false, material = "models/props_wasteland/wood_fence01a", skin = 0, bodygroup = {} },  ["shield_base+++"] = { type = "Model", model = "models/props_phx/construct/metal_angle90.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "shield_base", pos = Vector(0.25, -0.051, 0.25), angle = Angle(-90, 0, -90), size = Vector(0.2, 0.2, 0.207), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_wasteland/wood_fence01a_skin2", skin = 0, bodygroup = {} },  ["base"] = { type = "Model", model = "models/props_borealis/bluebarrel001.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(3.653, 1.205, 3.072), angle = Angle(174.662, 17.724, 2.719), size = Vector(0.086, 0.061, 0.245), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_pipes/pipemetal004b", skin = 0, bodygroup = {} },  ["shield_base+++++"] = { type = "Model", model = "models/props_combine/pipes03_single02b.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "shield_base", pos = Vector(7.638, 1.065, 2.994), angle = Angle(151.333, 6.416, 13.901), size = Vector(0.012, 0.017, 0.008), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_wasteland/grainelevator01", skin = 0, bodygroup = {} },  ["shield_base"] = { type = "Model", model = "models/props_wasteland/wheel03b.mdl", bone = "ValveBiped.Bip01_L_Forearm", rel = "", pos = Vector(11.282, 0.268, 2.961), angle = Angle(-5.492, 28.843, -97.347), size = Vector(0.174, 0.068, 0.174), color = Color(255, 255, 255, 255), surpresslightning = false, material = "models/props_wasteland/metal_tram001a", skin = 0, bodygroup = {} }  }   SWEP.ViewModelBoneMods = {  ["ValveBiped.Bip01_L_UpperArm"] = { scale = Vector(1, 1, 1), pos = Vector(0, 0, 0), angle = Angle(-5.763, -39.824, 0) },  ["ValveBiped.Bip01_L_Hand"] = { scale = Vector(1, 1, 1), pos = Vector(0, 0, 0), angle = Angle(-2.881, -4.165, -14.912) },  ["ValveBiped.Bip01_L_Forearm"] = { scale = Vector(1, 1, 1), pos = Vector(0, 0, 0), angle = Angle(0, -70, -23.122) }  }   function SWEP:PreDrawViewModel(vm)  BaseClass.PreDrawViewModel(self, vm)   local ang = self.ViewModelBoneMods["ValveBiped.Bip01_L_UpperArm"].angle  ang.yaw = math.Approach(ang.yaw, self:IsSwinging() and 10 or -39.824, FrameTime() * 250)  end   function SWEP:DrawHUD()  if GetConVar("crosshair"):GetInt() ~= 1 then return end  self:DrawCrosshairDot()  end end  SWEP.Base = "weapon_zs_basemelee"  SWEP.ViewModel = "models/weapons/c_crowbar.mdl" SWEP.WorldModel = "models/weapons/w_crowbar.mdl" SWEP.UseHands = true  SWEP.HoldType = "melee" SWEP.BlockHoldType = "knife"  SWEP.MeleeDamage = 27 SWEP.BleedDamage = 10 SWEP.MeleeRange = 58 SWEP.MeleeSize = 4.5  SWEP.Primary.Delay = 1.1 SWEP.Secondary.Delay = 4.5  SWEP.ZombieOnly = true  SWEP.StaminaUsage = 0  SWEP.SwingTime = 0.4 SWEP.SwingRotation = Angle(30, -30, -30) SWEP.SwingHoldType = "grenade"  SWEP.CounterTime = 0.6  SWEP.NoWind = true  SWEP.HitAnim = ACT_VM_MISSCENTER  SWEP.BlockRotation = Angle(0, -40, 30) SWEP.BlockOffset = Vector(7, 7, 5)  SWEP.BotReactToMelee = true  function SWEP:Think()  if self:GetCounterEnd() > 0 and self:GetCounterEnd() <= CurTime() then  local timesincelast = math.Clamp(self:GetBlockEnd() - CurTime(), 0, 0.5)  self:SetCounterEnd(0)  self:SetBlocking(false)  self:SetBlockEnd(CurTime() + (0.3 - timesincelast))  self:GetOwner():ResetSpeed()  end   BaseClass.Think(self) end  function SWEP:PrimaryAttack()  self:EmitSound("npc/fast_zombie/wake1.wav", 70, math.random(115, 140))   BaseClass.PrimaryAttack(self) end  function SWEP:CanPrimaryAttack()  if IsValid(self:GetOwner().FeignDeath) or self:IsBlocking() then return false end      return self:GetNextPrimaryFire() <= CurTime() and not self:IsSwinging() and not self:IsWinding() end  function SWEP:PlaySwingSound()  self:EmitSound("weapons/iceaxe/iceaxe_swing1.wav", 75, math.random(65, 85)) end  function SWEP:PlayHitSound()  self:EmitSound("ambient/machines/slicer"..math.random(4)..".wav", 75, math.random(85, 90)) end  function SWEP:OnMeleeHit(hitent, hitflesh, tr)  if SERVER and hitent:IsPlayer() then  hitent:AddBleedDamage(self.BleedDamage, self:GetOwner())  end end  function SWEP:SecondaryAttack()  if not self:CanSecondaryAttack() or not self:CanPrimaryAttack() then return end   local owner = self:GetOwner()   self:SetNextSecondaryFire(CurTime() + self.Secondary.Delay)   for i=1,4 do  self:EmitSound("player/footsteps/metalgrate"..i..".wav", 70, math.random(145, 155), nil, CHAN_AUTO)  end  self:EmitSound("npc/roller/blade_out.wav", 70, math.random(135, 140), nil, CHAN_AUTO)   local timesincelast = math.Clamp(self:GetBlockEnd() - CurTime(), 0, 0.5)  self:SetBlocking(true)  self:SetBlockEnd(CurTime() + (0.1 - timesincelast))  self:SetCounterEnd(CurTime() + self.CounterTime)   local pos, ang = owner:GetBonePositionMatrixed(5)   local effectdata = EffectData()  effectdata:SetOrigin(LocalToWorld(Vector(12, -2, 1.5), angle_zero, pos, ang))  effectdata:SetNormal(ang:Forward())  effectdata:SetEntity(owner)  util.Effect("danger_warning", effectdata) end  function SWEP:CanSecondaryAttack()  return self:GetNextSecondaryFire() <= CurTime() and not self:IsSwinging() and not self:IsWinding() end  function SWEP:SetCounterEnd(time)  self:SetDTFloat(4, time) end  function SWEP:GetCounterEnd()  return self:GetDTFloat(4) end 