AddCSLuaFile()  SWEP.PrintName = "Howler"  SWEP.Base = "weapon_zs_zombie"  SWEP.ViewModel = Model("models/weapons/v_pza.mdl") SWEP.WorldModel = "models/player/zombie_lacerator2.mdl"  if CLIENT then  SWEP.ViewModelFOV = 48   SWEP.ShowWorldModel = false   local bone_table = {  ["Barnacle.base"] = { bone = "ValveBiped.Bip01_Spine", sc = Vector( 0, 0, 0 ) },  ["Barnacle.body"] = { bone = "ValveBiped.Bip01_Spine4", sc = Vector( 0, 0, 0 ) },    ["Barnacle.belly1"] = { bone = "ValveBiped.Bip01_Spine4", sc = Vector( 0, 0, 0 ) },  ["Barnacle.belly2"] = { bone = "ValveBiped.Bip01_Spine4", sc = Vector( 0, 0, 0 ) },  ["Barnacle.belly3"] = { bone = "ValveBiped.Bip01_Spine4", sc = Vector( 0, 0, 0 ) },  ["Barnacle.belly4"] = { bone = "ValveBiped.Bip01_Spine4", sc = Vector( 0, 0, 0 ) },    ["Barnacle.mouth3"] = { bone = "ValveBiped.Bip01_Spine4", sc = Vector( 0, 0, 0 ) },  ["Barnacle.mouth2"] = { bone = "ValveBiped.Bip01_Spine4", sc = Vector( 0, 0, 0 ) },  ["Barnacle.mouth1"] = { bone = "ValveBiped.Bip01_Spine4", sc = Vector( 0, 0, 0 ) },  ["Barnacle.mouth4"] = { bone = "ValveBiped.Bip01_Spine4", sc = Vector( 0, 0, 0 ) },    ["Barnacle.innards"] = { bone = "ValveBiped.Bip01_Spine4", add = Vector( 8, 4 ,0 ), rot = Angle( 0,0,0 ), sc = Vector( 1.7, 1.7, 1.7 ) },   ["Barnacle.jaw1"] = { bone = "ValveBiped.Bip01_Spine4", add = Vector( 8, 3 ,4 ), rot = Angle( -100,180,-70 ), sc = Vector( 1.5, 1.5, 1.5 ) },  ["Barnacle.jaw2"] = { bone = "ValveBiped.Bip01_Spine4",add = Vector( 8, 3 ,-4 ), rot = Angle( 70,0,-110 ), sc = Vector( 1.5, 1.5, 1.5 ) },    ["Barnacle.tongue1"] = { bone = "ValveBiped.Bip01_Spine4", sc = Vector( 0, 0, 0 ) },  ["Barnacle.tongue2"] = { bone = "ValveBiped.Bip01_Spine4", sc = Vector( 0, 0, 0 ) },  ["Barnacle.tongue3"] = { bone = "ValveBiped.Bip01_Spine4", sc = Vector( 0, 0, 0 ) },  ["Barnacle.tongue4"] = { bone = "ValveBiped.Bip01_Spine4", sc = Vector( 0, 0, 0 ) },  ["Barnacle.tongue5"] = { bone = "ValveBiped.Bip01_Spine4", sc = Vector( 0, 0, 0 ) },  ["Barnacle.tongue6"] = { bone = "ValveBiped.Bip01_Spine4", sc = Vector( 0, 0, 0 ) },  ["Barnacle.tongue7"] = { bone = "ValveBiped.Bip01_Spine4", sc = Vector( 0, 0, 0 ) },  ["Barnacle.tongue8"] = { bone = "ValveBiped.Bip01_Spine4", sc = Vector( 0, 0, 0 ) },  }   SWEP.WElements = {  ["body"] = { type = "Model", model = "models/barnacle.mdl", bone = "ValveBiped.Bip01_Spine4", rel = "", bbp = function( ent, bc ) CustomBoneMerge(ent, bc, bone_table) end, pos = Vector(0, 0, 0), angle = Angle(0, 0, 0), size = Vector(1.5, 1.5, 1.5), color = Color(200, 200, 125, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} }  } end  SWEP.MeleeReach = 65 SWEP.MeleeForceScale = 1.45 SWEP.MeleeSize = 4.5 SWEP.Primary.Delay = 1.35 SWEP.MeleeDamage = 38 SWEP.AlertDelay = 3.2  SWEP.SwingAnimSpeed = 0.58  SWEP.HowlDelay = 10  SWEP.BattlecryInterval = 0  function SWEP:Reload()  if CurTime() < self:GetNextSecondaryFire() then return end  self:SetNextSecondaryFire(CurTime() + self.AlertDelay)   self:DoAlert()      self:SetNextAlternateAbility(CurTime() + self.AlertDelay)   local owner = self:GetOwner()   owner:LagCompensation(true)  local tr = owner:CompensatedMeleeTrace(500, 3, nil, nil, nil, true)  owner:LagCompensation(false)   local trent = tr.Entity   if SERVER and IsValid(trent) then  if trent:IsNailed() then  trent.HowlerMarkedProp = CurTime() + 3  elseif trent:IsPlayer() and trent:CooldownReady("HowlerMarked") then  local gt = trent:GiveStatus("debuff_enfeeble", 10, owner)  if gt and gt:IsValid() then  gt.Applier = self:GetOwner()  end   trent:AddNewCooldown("HowlerMarked", 15)  end    local pos = tr.HitPos   net.Start("zs_zombie_target")  net.WriteTable({  x = pos.x, y = pos.y, z = pos.z  })  net.Broadcast()  end end  local function Battlecry(pos)  if SERVER then  local effectdata = EffectData()  effectdata:SetOrigin(pos)  effectdata:SetNormal(Vector(0,0,1))  util.Effect("zombie_battlecry", effectdata, true)  end end  function SWEP:Think()  self.BaseClass.Think(self)   if self:GetBattlecry() > CurTime() and self.BattlecryInterval < CurTime() then  self.BattlecryInterval = CurTime() + 0.25  local owner = self:GetOwner()  local center = owner:GetPos() + Vector(0, 0, 32)  if SERVER then  for _, ent in pairs(ents.FindInSphere(center, 80)) do  if ent:IsValidLivingZombie() and WorldVisible(ent:WorldSpaceCenter(), center)then  ent:GiveStatus("zombie_battlecry", 1)  end  end  end  end end  function SWEP:SecondaryAttack()  if CurTime() < self:GetNextPrimaryFire() or CurTime() < self:GetNextSecondaryFire() or CurTime() < self:GetNextHowl() then return end   local owner = self:GetOwner()  local pos = owner:GetPos()   owner:DoAnimationEvent(ACT_GMOD_GESTURE_TAUNT_ZOMBIE)   self:SetBattlecry(CurTime() + 5)   if SERVER then  owner:EmitSound("npc/stalker/go_alert2a.wav", 100, math.random(50, 54))  util.ScreenShake(pos, 5, 5, 3, 560)   local center = owner:WorldSpaceCenter()  timer.Simple(0, function() Battlecry(center) end)   for _, ent in pairs(ents.FindInSphere(center, 150)) do  if ent:IsValidLivingHuman() and WorldVisible(ent:WorldSpaceCenter(), center) then  ent:GiveStatus("debuff_frightened", 5, owner)  end  end  end  self:SetNextHowl(CurTime() + self.HowlDelay)  self:SetNextSecondaryFire(CurTime() + 0.5)  self:SetNextPrimaryFire(CurTime() + self.Primary.Delay) end  function SWEP:PlayIdleSound()  self:GetOwner():EmitSound("npc/combine_gunship/gunship_moan.wav", 70, math.random(85, 95)) end  SWEP.PlayAlertSound = SWEP.PlayIdleSound  function SWEP:PlayAttackSound()  self:GetOwner():EmitSound("npc/antlion_guard/angry"..math.random(3)..".wav", 75, math.random(80, 85)) end  function SWEP:SetBattlecry(time)  self:SetDTFloat(1, time) end  function SWEP:GetBattlecry()  return self:GetDTFloat(1) end  function SWEP:SetNextHowl(time)  self:SetDTFloat(2, time) end  function SWEP:GetNextHowl()  return self:GetDTFloat(2) end  if not CLIENT then return end  function SWEP:Initialize()  self:SCKInit() end  function SWEP:ViewModelDrawn()  render.SetColorModulation(1, 1, 1) end  function SWEP:PreDrawViewModel(vm)  render.SetColorModulation(1, 0.9, 0.6) end  function SWEP:DrawWorldModel()  self:SCKWorldModel() end