AddCSLuaFile()  SWEP.PrintName = "'Z9000' Pulse Pistol" SWEP.Description = "Although the Z9000 does not deal that much damage, the pulse shots it fires will slow targets. Holding right click charges the gun." SWEP.Slot = 1 SWEP.SlotPos = 0  if CLIENT then  SWEP.ViewModelFlip = false  SWEP.ViewModelFOV = 60   SWEP.HUD3DBone = "ValveBiped.square"  SWEP.HUD3DPos = Vector(1.1, 0.25, -2)  SWEP.HUD3DScale = 0.015   SWEP.ShowViewModel = false   SWEP.VElements = {  ["alyxgun"] = { type = "Model", model = "models/weapons/w_alyx_gun.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(5.714, 2.299, -5.315), angle = Angle(171.817, 8.182, 10.519), size = Vector(1.299, 1.299, 1.299), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} }  }   SWEP.ViewModelBoneMods = {  ["ValveBiped.Bip01_R_Hand"] = { scale = Vector(1, 1, 1), pos = Vector(0, 0, 0), angle = Angle(0, 0, 0) }  } end  SWEP.Base = "weapon_zs_base" local BaseClass = baseclass.Get("weapon_zs_base")  SWEP.HoldType = "pistol"  SWEP.ViewModel = "models/weapons/c_pistol.mdl" SWEP.WorldModel = "models/weapons/w_alyx_gun.mdl" SWEP.UseHands = true  SWEP.CSMuzzleFlashes = false  SWEP.ReloadSound = Sound("weapons/alyx_gun/alyx_shotgun_cock1.wav") SWEP.Primary.Damage = 17 SWEP.Primary.NumShots = 1 SWEP.Primary.Delay = 0.2  SWEP.Primary.ClipSize = 10 SWEP.Primary.Automatic = false SWEP.Primary.Ammo = "pulse" SWEP.Primary.DefaultClip = 50  SWEP.Secondary.Automatic = true  SWEP.ConeMax = 2 SWEP.ConeMin = 1.5  SWEP.IronSightsPos = Vector(-5.95, 3, 2.75) SWEP.IronSightsAng = Vector(-0.15, -1, 2)  SWEP.HeadshotMulti = 2  SWEP.MaxCharge = 4  SWEP.TracerName = "AR2Tracer"  GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_MAX_SPREAD, -0.25) GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_FIRE_DELAY, -0.0175, 1) GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_HEADSHOT_MULTI, 0.07)  SWEP.PointsMultiplier = GAMEMODE.PulsePointsMultiplierLow SWEP.LegDamage = 4.5 SWEP.DamageScaling = 1.1  SWEP.FireModes = 2 SWEP.FireModeNames = {"Semi-Auto", "Charge"} SWEP.FireModeNames3D = {"SEMI", "CHRG"}  function SWEP:Initialize()  BaseClass.Initialize(self)   self.ChargeSound = CreateSound(self, "ambient/atmosphere/city_beacon_loop1.wav") end  function SWEP.BulletCallback(attacker, tr, dmginfo, curpen)  local ent = tr.Entity  if ent:IsValidZombie() then  local charge_multi = 1  local wep = attacker:GetActiveWeapon()  if wep:GetCharging() then  charge_multi = math.min(12, wep:GetGunCharge())  end   ent:AddLegDamageExt((dmginfo:GetInflictor().LegDamage * charge_multi) / (curpen + 1), attacker, attacker:GetActiveWeapon(), SLOWTYPE_PULSE)  end   if IsFirstTimePredicted() then  util.CreatePulseImpactEffect(tr.HitPos, tr.HitNormal)  end end  function SWEP:PrimaryAttack()  if not self:CanPrimaryAttack() or self:GetCharging() then return end   self:SetNextPrimaryFire(CurTime() + self:GetFireDelay())  self:TakeAmmo()   if self:GetFireMode() == 1 then  self:SetLastChargeTime(CurTime())  self:SetCharging(true)  else  self:EmitFireSound()  self:ShootBullets(self.Primary.Damage, self.Primary.NumShots, self:GetCone())  end end  function SWEP:CanPrimaryAttack()  if self:GetOwner():IsHolding() or self:GetOwner():GetBarricadeGhosting() or self:GetReloadFinish() > 0 then return false end   if self:Clip1() < self.RequiredClip then  if not self:GetCharging() then self:EmitSound(self.DryFireSound) end  self:SetNextPrimaryFire(CurTime() + math.max(0.25, self.Primary.Delay))  self:SetNextSecondaryFire(CurTime() + math.max(0.25, self.Primary.Delay))  return false  end   return self:GetNextPrimaryFire() <= CurTime() end  function SWEP:Think()  self:CheckCharge()   BaseClass.Think(self) end  function SWEP:GetCone()  return BaseClass.GetCone(self) * (1 + (self:GetGunCharge() * 0.08)) end  function SWEP:CheckCharge()  if self:GetCharging() then  local owner = self:GetOwner()  if not owner:KeyDown(IN_ATTACK) then  self:EmitFireSound()   self.FireAnimSpeed = 0.3  self.OverkillFactor = 0.5  self:ShootBullets(self.Primary.Damage * math.max(1, self:GetGunCharge() * 1.25), self.Primary.NumShots, self:GetCone())  self.OverkillFactor = nil   self.IdleAnimation = CurTime() + self:SequenceDuration()  self.FireAnimSpeed = 1   self:SetNextPrimaryFire(CurTime() + self:GetFireDelay() * 2)  self:SetCharging(false)  self:SetLastChargeTime(CurTime())  self:SetGunCharge(0)  elseif self:GetGunCharge() < self.MaxCharge and self:Clip1() ~= 0 and self:GetLastChargeTime() + self.Primary.Delay * 2 < CurTime() then  self:SetGunCharge(self:GetGunCharge() + 1)  self:SetLastChargeTime(CurTime())  self:TakeAmmo()  end   self.ChargeSound:PlayEx(0.5, math.min(255, 130 + self:GetGunCharge() * 12))  else  self.ChargeSound:Stop()  end end  function SWEP:EmitFireSound()  local deduct = self:GetCharging() and 100 - self:GetGunCharge() * 10 or 100   self:EmitSound("weapons/alyx_gun/alyx_gun_fire3.wav", 75, deduct, 0.9) end  function SWEP:CanReload()  if self:GetCharging() then return end   return BaseClass.CanReload(self) end  function SWEP:SetLastChargeTime(lct)  self:SetDTFloat(8, lct) end  function SWEP:GetLastChargeTime()  return self:GetDTFloat(8) end  function SWEP:SetGunCharge(charge)  self:SetDTInt(1, charge) end  function SWEP:GetGunCharge(charge)  return self:GetDTInt(1) end  function SWEP:SetCharging(charge)  self:SetDTBool(1, charge) end  function SWEP:GetCharging()  return self:GetDTBool(1) end  function SWEP:FireModeChanged(fm)  fm = tonumber(fm)  self.Primary.Automatic = fm == 1 end  function SWEP:PlayFireModeSwitchSound(fm)  fm = tonumber(fm)  if CLIENT then  if fm == 1 then  surface.PlaySound("items/battery_pickup.wav")  else  surface.PlaySound("buttons/button19.wav")  end  end end  if CLIENT then  local ghostlerp = 0  function SWEP:CalcViewModelView(vm, oldpos, oldang, pos, ang)  if self:GetOwner():GetBarricadeGhosting() or self:GetReloadFinish() > 0 then  ghostlerp = math.min(1, ghostlerp + FrameTime() * 1)  elseif ghostlerp > 0 then  ghostlerp = math.max(0, ghostlerp - FrameTime() * 1.5)  end   if ghostlerp > 0 then  ang:RotateAroundAxis(ang:Right(), -20 * ghostlerp)  end   local charge = self:GetGunCharge()  if charge >= 1 then  local r_ang = Angle(math.Rand(3 * charge, -1.5 * charge), math.Rand(3 * charge, -3 * charge), 0)   local start = self.ViewModelBoneMods["ValveBiped.Bip01_R_Hand"].angle  self.ViewModelBoneMods["ValveBiped.Bip01_R_Hand"].angle = LerpAngle(0.05, start, r_ang)  end   return pos, ang  end end 