AddCSLuaFile() local BaseClass = baseclass.Get("weapon_zs_base")  SWEP.PrintName = "'Tosser' SMG" SWEP.Description = "A relatively simple SMG with a decent fire rate and reload speed."  SWEP.Slot = 2 SWEP.SlotPos = 0  if CLIENT then  SWEP.HUD3DBone = "ValveBiped.base"  SWEP.HUD3DPos = Vector(1.5, 0.25, -2)  SWEP.HUD3DScale = 0.02   SWEP.ViewModelFlip = false  SWEP.ViewModelFOV = 60 end  SWEP.Base = "weapon_zs_base"  SWEP.HoldType = "smg"  SWEP.ViewModel = "models/weapons/c_smg1.mdl" SWEP.WorldModel = "models/weapons/w_smg1.mdl" SWEP.UseHands = true  SWEP.CSMuzzleFlashes = false  SWEP.ReloadSound = Sound("weapons/smg1/smg1_reload.wav") SWEP.Primary.Sound = Sound("^weapons/ar1/ar1_dist1.wav") SWEP.Primary.Damage = 14.35 SWEP.Primary.NumShots = 1 SWEP.Primary.Delay = 0.15  SWEP.Primary.ClipSize = 25 SWEP.Primary.Automatic = true SWEP.Primary.Ammo = "smg1" GAMEMODE:SetupDefaultClip(SWEP.Primary)  SWEP.Primary.Gesture = ACT_HL2MP_GESTURE_RANGE_ATTACK_SMG1 SWEP.ReloadGesture = ACT_HL2MP_GESTURE_RELOAD_SMG1  SWEP.ReloadSpeed = 0.73 SWEP.FireAnimSpeed = 0.55  SWEP.ConeMax = 4.4 SWEP.ConeMin = 2.4  SWEP.IronSightsPos = Vector(-6.425, 5, 1.02)  SWEP.DamageScaling = 0.85  SWEP.FireModes = 2 SWEP.FireModeNames = {"Full-Auto", "Semi-Auto"} SWEP.FireModeNames3D = {"AUTO", "SEMI"}  GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_FIRE_DELAY, -0.015) local branch = GAMEMODE:AddNewRemantleBranch(SWEP, 1, "'Thrower' Burst SMG", "Increased damage but makes the tosser burst fire", function(wept)  wept.Primary.Damage = wept.Primary.Damage * 1.1  wept.Primary.Delay = wept.Primary.Delay * 3.9  wept.Primary.BurstShots = 3  wept.ConeMin = wept.ConeMin * 0.6  wept.ConeMax = wept.ConeMax * 0.6  wept.FireModeNames = {"3-Round Burst", "Semi-Auto"}  wept.FireModeNames3D = {"BRST", "SEMI"}   wept.PrimaryAttack = function(self)  if not self:CanPrimaryAttack() then return end  local fm = self:GetFireMode()   self:SetNextPrimaryFire(CurTime() + self:GetFireDelay(fm == 1 and 2.55 or 1))  self:EmitFireSound()   if fm == 0 then  self:SetNextShot(CurTime())  self:SetShotsLeft(self.Primary.BurstShots)  else  self:TakeAmmo()  self:ShootBullets(self.Primary.Damage, self.Primary.NumShots, self:GetCone())  end   self.IdleAnimation = CurTime() + self:SequenceDuration()  end   wept.Think = function(self)  BaseClass.Think(self)   local shotsleft = self:GetShotsLeft()  if shotsleft > 0 and CurTime() >= self:GetNextShot() then  self:SetShotsLeft(shotsleft - 1)  self:SetNextShot(CurTime() + self:GetFireDelay(9))   if self:Clip1() > 0 and self:GetReloadFinish() == 0 then  self:EmitFireSound()  self:TakeAmmo()  self:ShootBullets(self.Primary.Damage, self.Primary.NumShots, self:GetCone())   self.IdleAnimation = CurTime() + self:SequenceDuration()  else  self:SetShotsLeft(0)  end  end          self:NextThink(CurTime())         return true  end end) branch.CollectiveName = "Burst" branch.DamageScaling = 0.92  function SWEP:EmitFireSound()  self:EmitSound("^weapons/ar1/ar1_dist1.wav", 75, math.random(95, 105), 0.7, CHAN_WEAPON) end  function SWEP:SetNextShot(nextshot)  self:SetDTFloat(5, nextshot) end  function SWEP:GetNextShot()  return self:GetDTFloat(5) end  function SWEP:SetShotsLeft(shotsleft)  self:SetDTInt(1, shotsleft) end  function SWEP:GetShotsLeft()  return self:GetDTInt(1) end