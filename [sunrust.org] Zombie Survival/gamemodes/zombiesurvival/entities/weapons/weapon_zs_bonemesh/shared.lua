SWEP.Base = "weapon_zs_zombie" local BaseClass = baseclass.Get("weapon_zs_zombie")  SWEP.MeleeReach = 52 SWEP.MeleeDelay = 0.8 SWEP.MeleeSize = 4.5   SWEP.MeleeDamage = 35   SWEP.MeleeDamageType = DMG_SLASH SWEP.MeleeAnimationDelay = 0.2 SWEP.SwingAnimSpeed = 0.88  SWEP.Primary.Delay = 1.6  SWEP.Secondary.Delay = 2.2  SWEP.PoisonThrowDelay = 1  SWEP.PassiveMoan = false  SWEP.ViewModel = Model("models/weapons/v_pza.mdl") SWEP.WorldModel = "models/Zombie/Poison.mdl"  function SWEP:Reload()  BaseClass.SecondaryAttack(self) end  function SWEP:CheckMoaning() end  function SWEP:StopMoaningSound() end  function SWEP:StartMoaningSound() end  function SWEP:PlayHitSound()  self:EmitSound("npc/zombie/claw_strike"..math.random(3)..".wav", 75, 80, nil, CHAN_AUTO) end  function SWEP:PlayMissSound()  self:EmitSound("npc/zombie/claw_miss"..math.random(2)..".wav", 75, 80, nil, CHAN_AUTO) end  function SWEP:PlayAttackSound()  local rn = math.random(2)  self:EmitSound("npc/zombie_poison/pz_warn"..rn..".wav", 75, 85)  self:EmitSound("npc/zombie_poison/pz_warn"..rn..".wav", 75, 91, nil, CHAN_AUTO) end  function SWEP:PlaySecondarySound()  local rn = math.random(2, 3)  self:EmitSound("npc/zombie_poison/pz_throw"..rn..".wav", 75, 78)  self:EmitSound("npc/zombie_poison/pz_throw"..rn..".wav", 75, 84, nil, CHAN_AUTO) end  function SWEP:PlayAlertSound()  local rn = math.random(3)  self:GetOwner():EmitSound("npc/antlion_guard/angry"..rn..".wav", 75, 126)  self:GetOwner():EmitSound("npc/antlion_guard/angry"..rn..".wav", 75, 132) end SWEP.PlayIdleSound = SWEP.PlayAlertSound  function SWEP:SetSwingAnimTime(time)  self:SetDTFloat(3, time) end  function SWEP:GetSwingAnimTime()  return self:GetDTFloat(3) end  function SWEP:StartSwinging()  BaseClass.StartSwinging(self)  self:SetSwingAnimTime(CurTime() + 1) end  function SWEP:SecondaryAttack()  local time = CurTime()  if time < self:GetNextPrimaryFire() or time < self:GetNextSecondaryFire() then return end   local owner = self:GetOwner()     owner:DoCustomAnimEvent( PLAYERANIMEVENT_ATTACK_PRIMARY, 1 )   self:SetNextSecondaryFire(time + self.Secondary.Delay)  self:SetNextPrimaryFire(time + self.Primary.Delay)   self.NextThrow = time + self.PoisonThrowDelay  self.NextThrowAnim = self.NextThrow - 0.4   if IsFirstTimePredicted() then self:PlaySecondarySound() end end  function SWEP:Think()  BaseClass.Think(self)   local time = CurTime()   if self.NextThrowAnim and time >= self.NextThrowAnim and IsFirstTimePredicted() then  self.NextThrowAnim = nil   self:EmitSound(string.format("physics/body/body_medium_break%d.wav", math.random(2, 4)), 72, math.random(70, 83), nil, CHAN_AUTO)  self:SendWeaponAnim(ACT_VM_SECONDARYATTACK)  self.IdleAnimation = time + self:SequenceDuration()  end   if self.NextThrow then  if time >= self.NextThrow and IsFirstTimePredicted() then  self.NextThrow = nil   local owner = self:GetOwner()   owner.LastRangedAttack = CurTime()  owner:ResetSpeed()   if SERVER then  self:DoFleshThrow(owner)  end  end   self:NextThink(time)  return true  end end 