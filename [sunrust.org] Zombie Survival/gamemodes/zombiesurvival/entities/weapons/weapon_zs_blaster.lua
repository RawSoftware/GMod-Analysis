AddCSLuaFile()  SWEP.Base = "weapon_zs_baseshotgun" local BaseClass = baseclass.Get("weapon_zs_baseshotgun")  SWEP.PrintName = "'Blaster' Shotgun" SWEP.Description = "A basic shotgun that can deal significant amounts of damage at close range."  if CLIENT then  SWEP.ViewModelFlip = false   SWEP.HUD3DPos = Vector(3, -0.75, -1.1)  SWEP.HUD3DAng = Angle(90, 0, -10)  SWEP.HUD3DScale = 0.02  SWEP.HUD3DBone = "Weapon_Controller" end  SWEP.HoldType = "shotgun"  SWEP.ViewModel = "models/weapons/c_blaster/c_blaster.mdl" SWEP.WorldModel = "models/weapons/w_supershorty.mdl" SWEP.UseHands = false  SWEP.ReloadDelay = 0.4  SWEP.UseHands = true  SWEP.Primary.Sound = Sound("weapons/shotgun/shotgun_fire6.wav") SWEP.Primary.Damage = 8.1 SWEP.Primary.NumShots = 8 SWEP.Primary.Delay = 0.8  SWEP.Primary.ClipSize = 6 SWEP.Primary.Automatic = false SWEP.Primary.Ammo = "buckshot" GAMEMODE:SetupDefaultClip(SWEP.Primary)  SWEP.ConeMax = 5.6 SWEP.ConeMin = 5.1  SWEP.WalkSpeed = SPEED_SLOWER  SWEP.PumpSound = Sound("weapons/m3/m3_pump.wav") SWEP.ReloadSound = Sound("weapons/shotgun/shotgun_reload1.wav")  SWEP.PumpActivity = ACT_SHOTGUN_RELOAD_FINISH  SWEP.SpreadPattern = {  {0, 0},  {90, 0.3},  {215, 0.3},  {315, 0.3},  {90, 0.8},  {180, 0.8},  {270, 0.8},  {0, 0.8} }  SWEP.AmmoTrinketOverride = 2  GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_CLIP_SIZE, 1) GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_MAX_SPREAD, -0.403, 1) GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_MIN_SPREAD, -0.35, 1) GAMEMODE:AttachWeaponModifier(SWEP, WEAPON_MODIFIER_FIRE_DELAY, -0.066)  local branch = GAMEMODE:AddNewRemantleBranch(SWEP, 1, "'Blaster' Slug Gun", "Single accurate slug round, less total damage.", function(wept)  wept.Primary.Damage = wept.Primary.Damage * 6.02  wept.Primary.NumShots = 1  wept.ConeMin = wept.ConeMin * 0.22  wept.ConeMax = wept.ConeMax * 0.25   wept.SpreadPattern = nil   local mat = Material("models/props_wasteland/tugboat01")  wept.PreDrawViewModel = function(self, vm)  render.MaterialOverrideByIndex(1, mat)  render.MaterialOverrideByIndex(3, mat)  render.MaterialOverrideByIndex(0, mat)  render.SetColorModulation(200/255, 255/255, 200/255)   BaseClass.PreDrawViewModel(self, vm)  end  wept.PostDrawViewModel = function(self, vm)  render.MaterialOverrideByIndex(0)  render.MaterialOverrideByIndex(1)  render.MaterialOverrideByIndex(3)  render.SetColorModulation(1, 1, 1)   BaseClass.PostDrawViewModel(self, vm)  end      wept.AmmoTrinketOverride = nil     wept.ResistanceAmmoAs = "357" end) branch.CollectiveName = "Slug" branch.DamageScaling = 1.1  branch = GAMEMODE:AddNewRemantleBranch(SWEP, 2, "'Buster' Shotgun", "Has a 4 shot unfixed spread and shoots much faster, uses 50% ammo, with much less total damage. Cannot headshot.", function(wept)     AccessorFuncDT(wept, "AltUsage", "Bool", 1)      wept.SpreadPattern = nil     wept.Primary.Delay = wept.Primary.Delay * 0.66     wept.FireAnimSpeed = 1.4   wept.HeadshotMulti = 1     wept.Primary.NumShots = 4  wept.Primary.Damage = wept.Primary.Damage * 1.075      wept.ConeMin = wept.ConeMin * 0.64     wept.ConeMax = wept.ConeMax * 0.64      wept.Primary.ClipSize = math.ceil(wept.Primary.ClipSize * (10/12))      function wept:PrimaryAttack()         if not self:CanPrimaryAttack() then return end         self:SetNextPrimaryFire(CurTime() + self:GetFireDelay())         self:EmitFireSound()          local altuse = self:GetAltUsage()         if not altuse then             self:TakeAmmo()         end         self:SetAltUsage(not altuse)          self:ShootBullets(self.Primary.Damage, self.Primary.NumShots, self:GetCone())         self.IdleAnimation = CurTime() + self:SequenceDuration()     end   local mat = Material("models/props_pipes/destroyedpipes01a")  wept.PreDrawViewModel = function(self, vm)  render.MaterialOverrideByIndex(1, mat)  render.MaterialOverrideByIndex(3, mat)  render.MaterialOverrideByIndex(0, mat)   BaseClass.PreDrawViewModel(self, vm)  end  wept.PostDrawViewModel = function(self, vm)  render.MaterialOverrideByIndex(0)  render.MaterialOverrideByIndex(1)  render.MaterialOverrideByIndex(3)   BaseClass.PostDrawViewModel(self, vm)  end      function wept:EmitFireSound()         self:EmitSound("weapons/shotgun/shotgun_fire6.wav", 75, math.Rand(132, 138))     end      function wept:EmitAfterShotPumpSound()         self:EmitSound("weapons/m3/m3_pump.wav", 65, 130, 0.6, CHAN_AUTO)     end      if CLIENT then         function wept:GetDisplayAmmo(clip, spare, maxclip)             local minus = self:GetAltUsage() and 0 or 1             return math.max(0, (clip * 2) - minus), spare * 2, maxclip * 2         end     end end) branch.CollectiveName = "Buster" branch.Colors = {Color(190, 220, 210), Color(140, 170, 160), Color(100, 170, 145), Color(70, 150, 100)}  function SWEP:EmitAfterShotPumpSound()     self:EmitSound("weapons/m3/m3_pump.wav", 65, 100, 0.5, CHAN_AUTO) end  function SWEP:SendWeaponAnimation()  self:SendWeaponAnim(ACT_VM_PRIMARYATTACK)  self:GetOwner():GetViewModel():SetPlaybackRate(self.FireAnimSpeed)   if IsFirstTimePredicted() then  timer.Simple(0.25 / self.FireAnimSpeed, function()  if IsValid(self) then  self:SendWeaponAnim(ACT_SHOTGUN_PUMP)  self:GetOwner():GetViewModel():SetPlaybackRate(self.FireAnimSpeed * 0.65)   if CLIENT and self:GetOwner() == MySelf then  self:EmitAfterShotPumpSound()  end  end  end)  end end 