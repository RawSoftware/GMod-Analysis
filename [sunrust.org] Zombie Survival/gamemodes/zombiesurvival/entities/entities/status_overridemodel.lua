AddCSLuaFile()  ENT.Type = "anim" ENT.Base = "status__base" ENT.RenderGroup = RENDERGROUP_TRANSLUCENT  function ENT:Initialize()  self:SetSolid(SOLID_NONE)  self:SetMoveType(MOVETYPE_NONE)  self:AddEffects(bit.bor(EF_BONEMERGE, EF_BONEMERGE_FASTCULL, EF_PARENT_ANIMATES))  self:SetRenderMode(RENDERMODE_TRANSALPHA)   local pPlayer = self:GetOwner()  if pPlayer:IsValid() then  pPlayer.status_overridemodel = self  if SERVER and pPlayer:Team() ~= TEAM_UNDEAD or not pPlayer:GetZombieClassTable().NoHideMainModel then  pPlayer:SetRenderMode(RENDERMODE_NONE)  end  end end  function ENT:PlayerSet(pPlayer, bExists)  if SERVER and pPlayer:Team() ~= TEAM_UNDEAD or not pPlayer:GetZombieClassTable().NoHideMainModel then  pPlayer:SetRenderMode(RENDERMODE_NONE)  end end  function ENT:OnRemove()  local pPlayer = self:GetOwner()  if SERVER and pPlayer:IsValid() then  pPlayer:SetRenderMode(RENDERMODE_NORMAL)  end end  function ENT:Think() end  if CLIENT then  function ENT:Draw()  local owner = self:GetOwner()   if owner == MySelf and not MySelf:ShouldDrawLocalPlayer() then  return  end   if owner:IsValid() and (not owner:IsPlayer() or owner:Alive()) then  local opaque = true  local pcolor = owner:GetColor()  if owner.SpawnProtection then  pcolor.a = (0.02 + (CurTime() + self:EntIndex() * 0.2) % 0.05) * 255  pcolor.r = 0  pcolor.b = 0  pcolor.g = 255  render.SuppressEngineLighting(true)  if not owner.Transparency then  hook.Run("PlayerAlphaChanged", owner, 0)  end  owner.Transparency = 0  opaque = false  end  self:SetColor(pcolor)   if  not (owner.SpawnProtection and owner:GetZombieClassTable().NoHideMainModel) and   not owner:CallZombieFunction1("PrePlayerDrawOverrideModel", self) then   local radius = GAMEMODE.TransparencyRadius   local draw_model = true  if owner ~= MySelf and MySelf:Team() == TEAM_UNDEAD then  local dist = owner:GetPos():DistToSqr(EyePos())  if dist < radius then  local blend = (dist / radius) ^ 1.4  if blend <= 0.1 then  draw_model = false  blend = 0  end   if owner.Transparency ~= blend then  hook.Run("PlayerAlphaChanged", owner, blend)  end  owner.Transparency = blend  opaque = false   render.SetBlend(blend)  end  end   if draw_model and blend ~= 0 then  owner.LastDrawFrame = FrameNumber()  self:DrawModel()  end   owner:CallZombieFunction1("PostPlayerDrawOverrideModel", self)  end   if owner.SpawnProtection then  render.SuppressEngineLighting(false)  end   if opaque and owner.Transparency then  owner.Transparency = nil  hook.Run("PlayerAlphaChanged", owner, 1)  end  end  end  ENT.DrawTranslucent = ENT.Draw end 