include("shared.lua")  ENT.RenderGroup = RENDERGROUP_TRANSLUCENT  ENT.NextEmit = 0  function ENT:Initialize()  self:DrawShadow(false)  self:SetRenderBounds(Vector(-40, -40, -18), Vector(40, 40, 90)) end  function ENT:Think()     if self.AmbientSound then         local pl = self:GetOwner()         local wep = pl:GetActiveWeapon()         if wep:IsValid() and wep.IsSwinging and wep:IsSwinging() then             self.AmbientSound:Stop()         elseif wep:IsValid() and wep.IsCharging and wep:IsCharging() then             self.AmbientSound:SetDSP(23)             self.AmbientSound:SetSoundLevel(82)             self.AmbientSound:PlayEx(1, 50 + math.sin(RealTime() * 155) * 8)         else             self.AmbientSound:SetDSP(23)             self.AmbientSound:SetSoundLevel(82)             self.AmbientSound:PlayEx(1, 40 + math.sin(RealTime() * 155) * 5)         end     else         self.AmbientSound = CreateSound(self, "npc/antlion_guard/growl_high.wav")     end end  function ENT:OnRemove()  self.AmbientSound:Stop() end  local matGlow = Material("effects/blueflare1") local colGlow = Color(10, 190, 255, 150) function ENT:DrawTranslucent()  local owner = self:GetOwner()  if not self:ShouldDrawStatusEffect(owner) then return end       if owner:IsValid() and (owner ~= MySelf or owner:ShouldDrawLocalPlayer()) then  local pos = owner:LocalToWorld(owner:OBBCenter())  pos.z = pos.z + 32   render.SetMaterial(matGlow)  render.DrawSprite(pos, 120, 120, colGlow)   if self.NextEmit <= CurTime() then  self.NextEmit = CurTime() + 0.05   local wep = owner:GetActiveWeapon()  local charging = wep:IsValid() and wep.IsCharging and wep:IsCharging()    local offset = VectorRand()  offset.z = 0  offset:Normalize()  offset = math.Rand(-32, 32) * 2 * offset  offset.z = 1  local pos = self:LocalToWorld(offset)   local emitter = ParticleEmitter(pos)  emitter:SetNearClip(32, 48)   local r,g,b = 10, 190, 255   local particle = emitter:Add("sprites/glow04_noz", pos)  particle:SetDieTime(math.Rand(1.5, 4))  particle:SetVelocity(Vector(0, 0, math.Rand(32, 64) * 2))  particle:SetStartAlpha(0)  particle:SetEndAlpha(255)  particle:SetStartSize(math.Rand(2, 4) * 2)  particle:SetEndSize(0)  particle:SetRoll(math.Rand(0, 360))  particle:SetRollDelta(math.Rand(-1, 1))  particle:SetColor(r, g, b)   if charging then  for i = 1, 10 do  particle = emitter:Add("sprites/glow04_noz", pos + VectorRand() * 50)  particle:SetDieTime(math.Rand(0.3, 0.4))  particle:SetVelocity(VectorRand() * 20)  particle:SetStartAlpha(0)  particle:SetEndAlpha(255)  particle:SetStartSize(math.Rand(84, 85))  particle:SetEndSize(0)  particle:SetRoll(math.Rand(0, 360))  particle:SetRollDelta(math.Rand(-1, 1))  particle:SetColor(r, g, b)  end  end   emitter:Finish() emitter = nil collectgarbage("step", 64)  end  end end 