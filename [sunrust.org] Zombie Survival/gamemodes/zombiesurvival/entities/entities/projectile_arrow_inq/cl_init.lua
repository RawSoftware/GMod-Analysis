include("shared.lua")  local matGlow = Material("sprites/light_glow02_add") local vector_origin = vector_origin  ENT.ProjColor = Color(250, 178, 70) ENT.TrailMat = Material("trails/laser")  function ENT:Draw()     self:DrawModel()          local col = self.ProjColor      if self:GetVelocity():LengthSqr() > 100 then         self:SetAngles(self:GetVelocity():Angle())          render.SetMaterial(matGlow)         render.DrawSprite(self:GetPos(), 10, 10, col)     end      render.SetMaterial(self.TrailMat)     if self.Zeus then         local velo = self:GetVelocity()         local heading = velo:GetNormal() * -1.3         local pos = self:GetPos() + heading * -10         for i=1, 8 do             local dir = (VectorRand() + heading):GetNormal()             render.DrawBeam(pos, pos + dir * 24, 16, i, 2 + i, self.ProjColor)         end     end      for i=1, #self.TrailPositions do         if self.TrailPositions[i+1] then             col.a = 255 - 255 * (i/#self.TrailPositions)              render.DrawBeam(self.TrailPositions[i], self.TrailPositions[i+1], 2, 1, 0, col)         end     end end  function ENT:Initialize()     self.Trailing = CurTime() + 0.15     self.TrailPositions = {}      local alt = self:GetDTBool(0)     if alt then         self.ProjColor = Color(250, 230, 170)     end      local zeus_alt = self:GetDTInt(0) == 1     if zeus_alt then         self.ProjColor = Color(250, 110, 110)         self.TrailMat = Material("trails/electric")         self.Zeus = true     end end  function ENT:Think()     table.insert(self.TrailPositions, 1, self:GetPos())     if self.TrailPositions[12] then         table.remove(self.TrailPositions, 12)     end      local dist = 0     local mypos = self:GetPos()     for i=1, #self.TrailPositions do         if self.TrailPositions[i]:DistToSqr(mypos) > dist then             self:SetRenderBoundsWS(self.TrailPositions[i], mypos, Vector(16, 16, 16))             dist = self.TrailPositions[i]:DistToSqr(mypos)         end     end end 