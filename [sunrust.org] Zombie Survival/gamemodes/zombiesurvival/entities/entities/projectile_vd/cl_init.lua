include("shared.lua")  ENT.NextEmit = 0  function ENT:Initialize()  self:SetColor(Color(212, 149, 60, 255))  self:SetModelScale(3, 0)  self:SetMaterial("models/flesh")   self.AmbientSound = CreateSound(self, "weapons/cguard/charging.wav")  self.Created = CurTime()   for i = 1, 15 do  local emitter = ParticleEmitter(self:GetPos())  emitter:SetNearClip(16, 24)   local particle = emitter:Add("!sprite_bloodspray"..math.random(8), self:GetPos())  particle:SetVelocity(VectorRand():GetNormalized() * math.Rand(140, 150))  particle:SetDieTime(1)  particle:SetStartAlpha(230)  particle:SetEndAlpha(0)  particle:SetStartSize(25)  particle:SetEndSize(0)  particle:SetRoll(math.Rand(0, 360))  particle:SetColor(155, 255, 30)   emitter:Finish() emitter = nil collectgarbage("step", 64)  end end  function ENT:Think()  self.AmbientSound:PlayEx(1, 10 + math.min(1, CurTime() - self.Created) * 10)  self.AmbientSound:SetSoundLevel(80)   self:NextThink(CurTime())  return true end  function ENT:OnRemove()  self.AmbientSound:Stop() end  local matGlow = Material("sprites/light_glow02_add") local matWhite = Material("models/shadertest/shader2") function ENT:Draw()  local multi = CurTime() - self.Created   self:SetModelScale(1 + multi * 2)   render.ModelMaterialOverride(matWhite)  render.SuppressEngineLighting(true)  render.SetBlend(0.3 + multi * 0.05)  self:DrawModel()  render.SetBlend(1)  render.SuppressEngineLighting(false)  render.ModelMaterialOverride(nil)   local pos = self:GetPos()      local add = multi >= 4.5 and multi % 0.15 <= 0.075 and 50 or 0   render.SetMaterial(matGlow)  render.DrawSprite(pos, 90 * multi, 90 * multi, Color(100 + add, 60 + add, 30 + add/2))   if CurTime() >= self.NextEmit then  self.NextEmit = CurTime() + 0.03   local emitter = ParticleEmitter(pos)  emitter:SetNearClip(16, 24)   local particle = emitter:Add("!sprite_bloodspray"..math.random(8), pos)  particle:SetVelocity(VectorRand():GetNormalized() * math.Rand(12, 36))  particle:SetDieTime(3)  particle:SetStartAlpha(230)  particle:SetEndAlpha(0)  particle:SetStartSize(3)  particle:SetEndSize(0)  particle:SetRoll(math.Rand(0, 360))  particle:SetRollDelta(math.Rand(-25, 25))  particle:SetColor(200, 200, 30)   particle = emitter:Add("sprites/glow04_noz", pos)  particle:SetDieTime(0.5)  particle:SetVelocity(vector_up * 200 + VectorRand() * 100)  particle:SetAirResistance(24)  particle:SetStartAlpha(255)  particle:SetEndAlpha(0)  particle:SetStartSize(math.Rand(6, 8))  particle:SetEndSize(0)  particle:SetRoll(math.Rand(0, 360))  particle:SetRollDelta(math.Rand(-3, 3))  particle:SetColor(220, 110, 30)   for i = 1, 10 do  local pos = self:GetPos()  pos.z = pos.z   local particle = emitter:Add("effects/fire_embers"..math.random(1, 3), pos + VectorRand():GetNormalized() * 40)  particle:SetDieTime(math.Rand(0.4, 0.5))  particle:SetStartSize(3)  particle:SetEndSize(6)  particle:SetStartAlpha(255)  particle:SetEndAlpha(0)  particle:SetGravity(Vector(0, 0, -60))  particle:SetVelocity(self:GetVelocity() + Vector(0, 0, 30))  particle:SetAirResistance(32)  particle:SetRoll(math.Rand(0, 360))  particle:SetStartLength(5)  particle:SetEndLength(15)  particle:SetColor(255, 255, 160)  particle:SetRollDelta(math.Rand(-1.5, 1.5))  end   emitter:Finish() emitter = nil collectgarbage("step", 64)  end end  function ENT:OnRemove()  local pos = self:GetPos()  local alt = self:GetDTBool(0)   sound.Play("weapons/physcannon/energy_sing_explosion2.wav", pos, 75, math.random(44, 45))      util.ScreenShake(pos, 5, 5, 1, 300)   local emitter = ParticleEmitter(pos)  emitter:SetNearClip(24, 32)  local particle  for i=0, 19 do  particle = emitter:Add(matGlow, pos)  particle:SetVelocity(VectorRand() * 75)  particle:SetDieTime(2.5)  particle:SetStartAlpha(255)  particle:SetEndAlpha(0)  particle:SetStartSize(math.Rand(6, 8))  particle:SetEndSize(0)  particle:SetRoll(math.Rand(-0.8, 0.8))  particle:SetRollDelta(math.Rand(-3, 3))  particle:SetColor(245, alt and 155 or 33, 20)  end  for i=0,5 do  particle = emitter:Add(matGlow, pos)  particle:SetVelocity(VectorRand() * 15)  particle:SetDieTime(2.3)  particle:SetStartAlpha(255)  particle:SetEndAlpha(0)  particle:SetStartSize(math.Rand(34, 35))  particle:SetEndSize(0)  particle:SetRoll(math.Rand(-0.8, 0.8))  particle:SetRollDelta(math.Rand(-3, 3))  particle:SetColor(245, 88, 20)  end  for i=0,5 do  particle = emitter:Add(matGlow, pos)  particle:SetVelocity(VectorRand() * 5)  particle:SetDieTime(0.2)  particle:SetStartAlpha(255)  particle:SetEndAlpha(0)  particle:SetStartSize(100)  particle:SetEndSize(0)  particle:SetRoll(math.Rand(-0.8, 0.8))  particle:SetRollDelta(math.Rand(-3, 3))  particle:SetColor(245, 100, 20)  end  for i=1, 45 do  particle = emitter:Add("effects/splash2", pos)  particle:SetDieTime(2.6)  particle:SetColor(255, alt and 150 or 35, 20)  particle:SetStartAlpha(255)  particle:SetEndAlpha(0)  particle:SetStartSize(22)  particle:SetEndSize(0)  particle:SetStartLength(1)  particle:SetEndLength(22)  particle:SetVelocity(VectorRand():GetNormal() * 100)  end  emitter:Finish() emitter = nil collectgarbage("step", 64) end