include("shared.lua")  local matGlow = Material("effects/yellowflare") local matWhite = Material("models/debug/debugwhite") local vector_origin = vector_origin  ENT.SmokeTimer = 0  function ENT:Draw()     local opt_col = self:GetDTVector(0)     local col = opt_col and opt_col.y ~= 0 and Color(opt_col.x, opt_col.y, opt_col.z) or Color(255, 205, 55)   render.ModelMaterialOverride(matWhite)  render.SetColorModulation(col.r/255, col.g/255, col.b/255)  render.SuppressEngineLighting(true)  self:DrawModel()  render.SuppressEngineLighting(false)  render.SetColorModulation(1, 1, 1)  render.ModelMaterialOverride(nil)   local pos = self:GetPos()   if self:GetVelocity() ~= vector_origin then  render.SetMaterial(matGlow)  render.DrawSprite(pos, 7, 7, col)  render.DrawSprite(pos, 29, 6, col)  render.DrawSprite(pos, 3, 23, col)   local emitter = ParticleEmitter(pos)  emitter:SetNearClip(24, 32)  local particle  for i=0, 1 do  particle = emitter:Add(matGlow, pos)  particle:SetVelocity(VectorRand() * 5)  particle:SetDieTime(0.15)  particle:SetStartAlpha(175)  particle:SetEndAlpha(0)  particle:SetStartSize(5)  particle:SetEndSize(0)  particle:SetRollDelta(math.Rand(-10, 10))  particle:SetColor(col.r, col.g, col.b)  end  emitter:Finish() emitter = nil collectgarbage("step", 64)  end end 