include("shared.lua")  ENT.NextEmit = 0 ENT.DoEmit = false  function ENT:Initialize() end  function ENT:Think()     if self.DoEmit then         self.DoEmit = false     end end  function ENT:OnRemove() end  local math_Rand = math.Rand local math_sin = math.sin local math_cos = math.cos local math_rad = math.rad  local vector_rand = VectorRand  function ENT:Draw()     local time = CurTime()     local rtime = RealTime()     local pos = self:GetPos()          local colr, col,g, colb = 60, 255, 60     local radius_mul = 1     local sprite = "effects/blueflare1"          if self:HasRandomTypeBuff() then         local b = self.RandomBuffs[ self:GetRandomBuffType() ]         if b then             colr, col,g, colb = b.color.r, b.color.g, b.color.b             radius_mul = b.radius_mul             if b.sprite then                 sprite = b.sprite             end         end     end      if time < self.NextEmit then return end     self.NextEmit = time + 0.1     self.DoEmit = true      local emitter = ParticleEmitter(pos)     emitter:SetNearClip(12, 16)           for i=1, 4 do         local shift = math_rad(  i > 2 and 180 or 0  )                  if i > 2 then             i = 5 - i         end              local sin = math_sin( time * 4 + shift )         local cos = math_cos( time * 4 + shift )         local size = i * 5 + math_sin(rtime * 4) * 6          particle = emitter:Add(sprite, pos + Vector(sin, cos, 0.1) * self.Radius * radius_mul)         particle:SetVelocity( vector_rand() * self.Radius * radius_mul / 2)         particle:SetColor(colr, col,g, colb)         particle:SetAirResistance(100)         particle:SetDieTime(math_Rand(0.3, 0.7))         particle:SetStartAlpha(1)         particle:SetEndAlpha(100)         particle:SetStartSize(size)         particle:SetEndSize(1)         particle:SetRoll(math_Rand(0, 30))         particle:SetRollDelta(math_Rand(-1, 1))     end      for i=1, 4 do         particle = emitter:Add("sprites/glow04_noz", pos)         particle:SetVelocity(vector_rand() * 18)         particle:SetColor(colr, col,g, colb)         particle:SetDieTime(0.5)         particle:SetStartAlpha(0)         particle:SetEndAlpha(255)         particle:SetStartSize(14)         particle:SetEndSize(0)         particle:SetRoll(math_Rand(0, 360))     end      emitter:Finish() emitter = nil collectgarbage("step", 64) end 