include("shared.lua")  function ENT:Initialize()  local alt = self:GetDTBool(0)  local cmodel = ClientsideModel(alt and "models/props_lab/labpart.mdl" or "models/healthvial.mdl")  if cmodel:IsValid() then  cmodel:SetPos(self:LocalToWorld(Vector(-4, 0, 0)))  cmodel:SetAngles(self:LocalToWorldAngles(Angle(90, alt and 90 or 0, 0)))  cmodel:SetSolid(SOLID_NONE)  cmodel:SetMoveType(MOVETYPE_NONE)  cmodel:SetColor(Color(alt and 255 or 75, alt and 255 or 75, alt and 75 or 255))  cmodel:SetParent(self)  cmodel:SetOwner(self)  cmodel:SetModelScale(alt and 0.6 or 0.8, 0)  cmodel:Spawn()   self.CModel = cmodel  end end  local matOverride = Material("models/shiny") local math_random = math.random function ENT:Draw()  local alt = self:GetDTBool(0)  local hittime = self:GetHitTime()  if hittime == 0 then  render.SetColorModulation(0, 1, 0)  else  render.SetColorModulation(0, 1 - math.Clamp(CurTime() - hittime, 0, 1), 0)  end  render.ModelMaterialOverride(matOverride)   self:DrawModel()   render.ModelMaterialOverride()  render.SetColorModulation(1, 1, 1)   if self:GetMoveType() == MOVETYPE_NONE or CurTime() < self.NextEmit then return end  self.NextEmit = CurTime() + 0.01   local pos = self:GetPos()   local emitter = ParticleEmitter(pos)  emitter:SetNearClip(24, 32)   local particle = emitter:Add("particles/smokey", pos)  particle:SetDieTime(0.35)  particle:SetStartAlpha(255)  particle:SetEndAlpha(0)  particle:SetStartSize(7)  particle:SetEndSize(0)  particle:SetRoll(math.Rand(0, 255))  particle:SetRollDelta(math.Rand(-10, 10))  if alt then  particle:SetColor(math_random(30, 255), math_random(30, 255), math_random(30, 255))  else  particle:SetColor(30, 255, 30)  end   emitter:Finish() emitter = nil collectgarbage("step", 64) end