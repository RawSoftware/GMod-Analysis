include("shared.lua")  local matTrail = Material("trails/laser") local colTrail = Color(255, 255, 255) local matGlow = Material("sprites/light_glow02_add") local vector_origin = vector_origin  function ENT:Draw()  local ang = MySelf:EyeAngles()  ang:RotateAroundAxis(ang:Up(), 180)  self:SetRenderAngles(ang)  self:SetModelScale(0.8 + 0.2 * math.abs(math.sin(CurTime() * 17)))  self:DrawModel()   render.SetMaterial(matGlow)  render.DrawSprite(self:GetPos(), 50, 50, Color(255, 255, 255, 175))   render.SetMaterial(matTrail)  for i=1, #self.TrailPositions do  if self.TrailPositions[i+1] then  colTrail.a = 255 - 255 * (i/#self.TrailPositions)   render.DrawBeam(self.TrailPositions[i], self.TrailPositions[i+1], 40, 1, 0, colTrail)  end  end end  function ENT:Initialize()  self.Trailing = CurTime() + 0.2  self.TrailPositions = {}  self.CreateTime = CurTime() end  function ENT:Think()  table.insert(self.TrailPositions, 1, self:GetPos())  if self.TrailPositions[18] then  table.remove(self.TrailPositions, 18)  end   local dist = 0  local mypos = self:GetPos()  for i=1, #self.TrailPositions do  if self.TrailPositions[i]:DistToSqr(mypos) > dist then  self:SetRenderBoundsWS(self.TrailPositions[i], mypos, Vector(16, 16, 16))  dist = self.TrailPositions[i]:DistToSqr(mypos)  end  end end 