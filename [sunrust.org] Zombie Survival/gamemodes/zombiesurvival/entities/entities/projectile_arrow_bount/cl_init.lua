include("shared.lua")  local matTrail = Material("trails/physbeam") local colTrail = Color(250, 55, 250) local matGlow = Material("sprites/light_glow02_add") local matWhite = Material("models/debug/debugwhite") local vector_origin = vector_origin  function ENT:Draw()  render.ModelMaterialOverride(matWhite)  render.SetColorModulation(1, 0.7, 1)  self:DrawModel()  render.SetColorModulation(1, 1, 1)  render.ModelMaterialOverride(nil)   if self:GetVelocity():LengthSqr() > 100 then  self:SetAngles(self:GetVelocity():Angle())   render.SetMaterial(matGlow)  render.DrawSprite(self:GetPos(), 16, 1, Color(230, 190, 250))  render.DrawSprite(self:GetPos(), 1, 16, Color(230, 190, 250))  end   render.SetMaterial(matTrail)  for i=1, #self.TrailPositions do  if self.TrailPositions[i+1] then  colTrail.a = 255 - 255 * (i/#self.TrailPositions)   render.DrawBeam(self.TrailPositions[i], self.TrailPositions[i+1], 5, 1, 0, colTrail)  end  end end