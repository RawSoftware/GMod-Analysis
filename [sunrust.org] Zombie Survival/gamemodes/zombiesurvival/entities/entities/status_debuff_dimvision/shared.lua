ENT.Type = "anim" ENT.Base = "status__base"  ENT.Ephemeral = true  AccessorFuncDT(ENT, "Duration", "Float", 0) AccessorFuncDT(ENT, "StartTime", "Float", 4)  local colModDimVision = {  ["$pp_colour_colour"] = 1,  ["$pp_colour_brightness"] = 0,  ["$pp_colour_contrast"] = 1,  ["$pp_colour_mulr"] = 0,  ["$pp_colour_mulg"] = 0,  ["$pp_colour_mulb"] = 0,  ["$pp_colour_addr"] = 0,  ["$pp_colour_addg"] = 0,  ["$pp_colour_addb"] = 0 }  function ENT:Initialize()  self.BaseClass.Initialize(self)   self:DrawShadow(false)      local enty = self  if CLIENT then  hook.Add("RenderScreenspaceEffects", tostring(enty), function()             if not IsValid(enty) then return end             if MySelf ~= enty:GetOwner() then return end              colModDimVision["$pp_colour_brightness"] = math.max(0, self:GetDim()) * -0.15             DrawColorModify(colModDimVision)         end)  end   self:GetOwner().DimVision = self end  function ENT:OnRemove()  self.BaseClass.OnRemove(self)   self:GetOwner().DimVision = nil      hook.Remove("RenderScreenspaceEffects", tostring(self)) end  function ENT:PlayerSet()  self:SetStartTime(CurTime())   local owner = self:GetOwner()  if owner:IsValid() and owner.VisionAlterDurationMul then  local newdur = self:GetDuration() * owner.VisionAlterDurationMul  self.DieTime = CurTime() + newdur  self:SetDuration(newdur)  end end 