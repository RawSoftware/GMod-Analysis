include("shared.lua")  ENT.NextEmit = 0  function ENT:Initialize()  self:SetModelScale(2.5, 0)  self:SetMaterial("models/flesh")    for i = 1, 30 do  local emitter = ParticleEmitter(self:GetPos())  emitter:SetNearClip(16, 24)   local particle = emitter:Add("!sprite_bloodspray"..math.random(8), self:GetPos())  particle:SetVelocity(VectorRand():GetNormalized() * math.Rand(20, 30))  particle:SetDieTime(1)  particle:SetStartAlpha(230)  particle:SetEndAlpha(0)  particle:SetStartSize(25)  particle:SetEndSize(0)  particle:SetRoll(math.Rand(0, 360))  particle:SetColor(255, 30, 30)   emitter:Finish() emitter = nil collectgarbage("step", 64)  end end  local matGlow = Material("sprites/light_glow02_add") function ENT:Draw()  self:DrawModel()   local pos = self:GetPos()   if self:GetVelocity():LengthSqr() > 100 then  render.SetMaterial(matGlow)  render.DrawSprite(pos, 15, 2, Color(250, 40, 40))  render.DrawSprite(pos, 2, 30, Color(250, 40, 40))  end   if CurTime() >= self.NextEmit and self:GetVelocity():LengthSqr() >= 256 then  self.NextEmit = CurTime() + 0.05   local emitter = ParticleEmitter(pos)  emitter:SetNearClip(16, 24)   for i = 1, 10 do  local particle = emitter:Add("!sprite_bloodspray"..math.random(8), pos)  particle:SetVelocity(VectorRand():GetNormalized() * math.Rand(32, 44))  particle:SetDieTime(1)  particle:SetStartAlpha(230)  particle:SetEndAlpha(230)  particle:SetStartSize(20)  particle:SetEndSize(0)  particle:SetRoll(math.Rand(0, 360))  particle:SetRollDelta(math.Rand(-25, 25))  particle:SetColor(95, 30, 30)  end   emitter:Finish() emitter = nil collectgarbage("step", 64)  end end 