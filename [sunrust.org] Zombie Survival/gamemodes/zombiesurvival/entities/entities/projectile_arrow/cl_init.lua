include("shared.lua")  local matTrail = Material("trails/physbeam") local colTrail = Color(255, 20, 20) local colTrailAcid = Color(70, 230, 70) local matGlow = Material("sprites/light_glow02_add") local matWhite = Material("models/debug/debugwhite") local vector_origin = vector_origin  function ENT:Draw()  render.ModelMaterialOverride(matWhite)  render.SetColorModulation(0.6, 0.2, 0.2)  self:DrawModel()  render.SetColorModulation(1, 1, 1)  render.ModelMaterialOverride(nil)   if self:GetVelocity():LengthSqr() > 100 then  self:SetAngles(self:GetVelocity():Angle())          local glowcol = self:GetDTBool(0) and colTrailAcid or colTrail   render.SetMaterial(matGlow)  render.DrawSprite(self:GetPos(), 15, 2, glowcol)  render.DrawSprite(self:GetPos(), 2, 30, glowcol)  end   render.SetMaterial(matTrail)      local trail_col = self:GetDTBool(0) and colTrailAcid or colTrail   for i=1, #self.TrailPositions do  if self.TrailPositions[i+1] then  colTrail.a = 255 - 255 * (i/#self.TrailPositions)   render.DrawBeam(self.TrailPositions[i], self.TrailPositions[i+1], 7, 1, 0, trail_col)  end  end end  function ENT:Initialize()  self.Trailing = CurTime() + 0.15  self.TrailPositions = {}  self.CreateTime = CurTime() end  function ENT:Think()  table.insert(self.TrailPositions, 1, self:GetPos())  if self.TrailPositions[18] then  table.remove(self.TrailPositions, 18)  end   local dist = 0  local mypos = self:GetPos()  for i=1, #self.TrailPositions do  if self.TrailPositions[i]:DistToSqr(mypos) > dist then  self:SetRenderBoundsWS(self.TrailPositions[i], mypos, Vector(16, 16, 16))  dist = self.TrailPositions[i]:DistToSqr(mypos)  end  end end  function ENT:OnRemove()     if not self:GetDTBool(0) then return end   local pos = self:GetPos()  local type = self:GetDTInt(5)  local c = Color(120, 205, 60)   local emitter = ParticleEmitter(pos)  emitter:SetNearClip(24, 32)  local particle  for i=1, 12 do  particle = emitter:Add("particles/smokey", pos)  particle:SetDieTime(0.4)  particle:SetColor(c.r, c.g, c.b)  particle:SetStartAlpha(255)  particle:SetEndAlpha(0)  particle:SetStartSize(3)  particle:SetEndSize(0)  particle:SetGravity(Vector(0, 0, -300))  particle:SetVelocity(VectorRand():GetNormal() * 120)  end  for i=0,5 do  particle = emitter:Add("sprites/light_glow02_add", pos)  particle:SetVelocity(VectorRand() * 5)  particle:SetDieTime(0.3)  particle:SetStartAlpha(25)  particle:SetEndAlpha(0)  particle:SetStartSize(math.Rand(27, 29))  particle:SetEndSize(0)  particle:SetRoll(math.Rand(-0.8, 0.8))  particle:SetRollDelta(math.Rand(-3, 3))  particle:SetColor(c.r, c.g, c.b)  end  emitter:Finish() emitter = nil collectgarbage("step", 64) end 