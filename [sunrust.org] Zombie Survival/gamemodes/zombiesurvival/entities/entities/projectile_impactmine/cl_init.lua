include("shared.lua")  ENT.RenderGroup = RENDERGROUP_BOTH ENT.LastPos = Vector(0, 0, 0) ENT.NextTrace = 0  function ENT:Initialize()  self:SetRenderBounds(Vector(-8, -8, -8), Vector(8, 8, 8)) end  function ENT:Draw()  self:DrawModel() end  local matBeam = Material("effects/bluelaser1") local matBeam2 = Material("trails/laser") local matGlow = Material("sprites/glow04_noz") local colBeam = Color(80, 160, 255, 255) local colAlt = Color(40, 225, 160, 155) local trace = {mask = MASK_SHOT} function ENT:DrawTranslucent()  if not self:IsActive() then return end   local owner = self:GetOwner()  local me_owner = owner == MySelf or MySelf:Team() ~= TEAM_HUMAN   local pos = self:GetStartPos()  local alt = self:GetDTBool(0)  local beamcol = alt and colAlt or colBeam   render.SetMaterial(matGlow)  render.DrawSprite(pos, 4, 4, beamcol)   if not me_owner then return end   if CurTime() >= self.NextTrace then  self.NextTrace = CurTime() + 0.15   local forward = self:GetForward()  trace.start = pos  trace.endpos = pos + forward * (alt and 64 or self.Range)  trace.filter = self:GetCachedScanFilter()   self.LastPos = util.TraceLine(trace).HitPos  end   local hitpos = self.LastPos  if not self.RenderBoundsAdjusted then  self:SetRenderBoundsWS(pos, hitpos, Vector(8, 8, 8))  self.RenderBoundsAdjusted = true  end   render.SetMaterial(alt and matBeam2 or matBeam)  render.DrawBeam(pos, hitpos, alt and 1.5 or 0.5, 0, 1, beamcol)  render.SetMaterial(matGlow)  render.DrawSprite(hitpos, 2, 2, beamcol) end 