include("shared.lua")  ENT.RenderGroup = RENDERGROUP_NONE  ENT.NextEmit = 0  function ENT:Initialize()     self:DrawShadow(false) end  function ENT:OnRemove()     self.AmbientSound:Stop() end  function ENT:Think()     if self.AmbientSound then         self:SetPos(self:GetOwner():GetPos())         self.AmbientSound:PlayEx(1, 130)     else         self.AmbientSound = CreateSound(self, "ambient/machines/courtyard_mach_loop.wav")     end end  local vec_up = vector_up function ENT:Draw()     if CurTime() < self.NextEmit then return end          self.NextEmit = CurTime() + 0.1          local owner = self:GetOwner()     if owner:IsValid() then                  for i=9, 15 do                  local pos, ang = owner:GetBonePosition( i )                          if pos and ang then                              local emitter = ParticleEmitter(pos, true)                 emitter:SetNearClip(24, 32)                  local particle = emitter:Add("effects/fleck_glass"..math.random(3), pos + VectorRand()*math.random( 3, 20 ))                 particle:SetVelocity( VectorRand() * math.random( 30, 50 ) )                 particle:SetDieTime(math.Rand(0.4, 0.8))                 particle:SetStartSize(math.Rand(1,3))                 particle:SetEndSize( particle:GetStartSize() )                 particle:SetStartAlpha(240)                 particle:SetEndAlpha(0)                 particle:SetRoll(math.Rand(0, 360))                 particle:SetRollDelta(math.Rand(-90, 90))                 particle:SetColor(60, 164, 255)                 particle:SetAirResistance(1000)                 particle:SetGravity( vec_up * 100 )                                  emitter:Finish() emitter = nil collectgarbage("step", 64)             end         end     end  end 