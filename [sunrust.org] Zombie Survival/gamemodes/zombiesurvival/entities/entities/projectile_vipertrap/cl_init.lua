include("shared.lua")  ENT.RenderGroup = RENDERGROUP_BOTH ENT.LastPos = Vector(0, 0, 0) ENT.NextTrace = 0 ENT.NextEmit = 0  local material = Material("Models/Barnacle/barnacle_sheet") function ENT:Initialize()  self.CreateTime = CurTime()  self:DrawShadow(false)  local cmodel = ClientsideModel("models/props/cs_italy/orange.mdl")  if cmodel:IsValid() then  cmodel:SetPos(self:LocalToWorld(Vector(0, 0, 0)))  cmodel:SetAngles(self:LocalToWorldAngles(Angle(0, 0, 0)))  cmodel:SetColor(Color(30, 230, 30, 255))  cmodel:SetSolid(SOLID_NONE)  cmodel:SetMaterial(material)  cmodel:SetMoveType(MOVETYPE_NONE)  cmodel:SetParent(self)  cmodel:SetOwner(self)  cmodel:Spawn()  self.CModel = cmodel   end end  function ENT:Think()  self:NextThink(CurTime())  return true end  function ENT:OnRemove()  if self.CModel and self.CModel:IsValid() then  self.CModel:Remove()  end end  function ENT:Draw()  self:DrawModel()  if CurTime() < self.NextEmit then return end  self.NextEmit = CurTime() + 0.1  local pos = self:GetPos()   local emitter = ParticleEmitter(pos)  emitter:SetNearClip(24, 32)   local particle = emitter:Add("particles/smokey", pos)  particle:SetVelocity(VectorRand():GetNormalized() * math.Rand(3, 5))  particle:SetDieTime(2)  particle:SetStartAlpha(80)  particle:SetEndAlpha(0)  particle:SetStartSize(math.Rand(2, 3))  particle:SetEndSize(0)  particle:SetRoll(math.Rand(0, 360))  particle:SetRollDelta(math.Rand(-25, 25))  particle:SetGravity(Vector(0, 0, 0))  particle:SetColor(0, 200, 0)   emitter:Finish() emitter = nil collectgarbage("step", 64) end  local matGlow = Material("sprites/glow04_noz") function ENT:DrawTranslucent()  local lightpos = self:GetPos()  if self:GetExplodeTime() ~= 0 then  local size = 14 + math.sin(CurTime() * 20)  render.SetMaterial(matGlow)  render.DrawSprite(lightpos, size, size, Color(255, 50, 50, size * 5))  render.DrawSprite(lightpos, size / 2, size / 2, Color(255, 50, 50, size * 15))  elseif self.CreateTime + self.ArmTime < CurTime() then  local size = 12 + (math.sin(CurTime() * 5) * 2.5)  render.SetMaterial(matGlow)  render.DrawSprite(lightpos, size, size, Color(50, 255, 50, size * 5))  render.DrawSprite(lightpos, size / 2, size / 2, Color(50, 255, 50, size * 15))  end end