include("shared.lua")  ENT.NextEmit = 0  local materialp = {} materialp["$refractamount"] = 0.2 materialp["$colortint"] = "[1.0 1.3 2.6]" materialp["$SilhouetteColor"] = "[2.1 3.5 5.0]" materialp["$BlurAmount"] = 0.01 materialp["$SilhouetteThickness"] = 0.1 materialp["$normalmap"] = "models/shadertest/shader2" materialp["$selfillum"] = 1 materialp["$selfillummask"] = "Concrete/concretewall064b" materialp["$selfillumtint"] = "[2.35 6.4 10]"  function ENT:Initialize()  self:SetColor(Color(40, 80, 160, 255))  self:SetModelScale(3, 0)  self:SetMaterial("models/flesh")   self.AmbientSound = CreateSound(self, "ambient/wind/wind_med1.wav")  self.Created = CurTime()      self.ShieldMaterial = CreateMaterial("coldmarro16" .. self:EntIndex(), "Aftershock_dx9", materialp) end  function ENT:Think()  self.AmbientSound:PlayEx(1, 30 + math.min(1, CurTime() - self.Created) * 20)  self.AmbientSound:SetSoundLevel(80)   self:NextThink(CurTime())  return true end  local matGlow = Material("sprites/light_glow02_add") local matWhite = Material("models/shadertest/shader2") function ENT:Draw()  local multi = CurTime() - self.Created   self:SetModelScale(math.min(9, 1 + multi * 2) * 0.6)  render.SuppressEngineLighting(true)  render.SetBlend(0.75)     render.ModelMaterialOverride(matWhite)  self:DrawModel()      render.SetBlend(1)     self:SetModelScale(math.min(9, 1 + multi * 2) * 0.5)   render.ModelMaterialOverride(self.ShieldMaterial)  self:DrawModel()  render.SuppressEngineLighting(false)  render.ModelMaterialOverride(nil)   local pos = self:GetPos()   render.SetMaterial(matGlow)  render.DrawSprite(pos, 33 * multi, 33 * multi, Color(30, 60, 100))   if CurTime() >= self.NextEmit then  self.NextEmit = CurTime() + 0.03   local emitter = ParticleEmitter(pos)  emitter:SetNearClip(16, 24)   local particle = emitter:Add("sprites/glow04_noz", pos + VectorRand() * math.min(12, 4 * multi))  particle:SetDieTime(0.5)  particle:SetVelocity(VectorRand() * 20)  particle:SetAirResistance(322)  particle:SetStartAlpha(255)  particle:SetEndAlpha(0)  particle:SetStartSize(math.Rand(3, 4))  particle:SetEndSize(0)  particle:SetRoll(math.Rand(0, 360))  particle:SetRollDelta(math.Rand(-3, 3))  particle:SetColor(77, 110, 190)   emitter:Finish() emitter = nil collectgarbage("step", 64)  end end  function ENT:OnRemove()  local pos = self:GetPos()      self.AmbientSound:Stop()   sound.Play("physics/glass/glass_largesheet_break"..math.random(1, 3)..".wav", pos, 75, math.random(234, 235))   local emitter = ParticleEmitter(pos)  emitter:SetNearClip(24, 32)  local particle  for i=0, 19 do  particle = emitter:Add(matGlow, pos)  particle:SetVelocity(VectorRand() * 25)  particle:SetDieTime(1.2)  particle:SetStartAlpha(255)  particle:SetEndAlpha(0)  particle:SetStartSize(math.Rand(6, 8))  particle:SetEndSize(0)  particle:SetRoll(math.Rand(-0.8, 0.8))  particle:SetRollDelta(math.Rand(-3, 3))  particle:SetColor(20, 110, 190)  end  for i=0,5 do  particle = emitter:Add(matGlow, pos)  particle:SetVelocity(VectorRand() * 15)  particle:SetDieTime(1.3)  particle:SetStartAlpha(255)  particle:SetEndAlpha(0)  particle:SetStartSize(math.Rand(34, 35))  particle:SetEndSize(0)  particle:SetRoll(math.Rand(-0.8, 0.8))  particle:SetRollDelta(math.Rand(-3, 3))  particle:SetColor(20, 110, 190)  end  for i=1, 45 do  particle = emitter:Add(matGlow, pos)  particle:SetDieTime(1.6)  particle:SetColor(0, 195, 255)  particle:SetStartAlpha(255)  particle:SetEndAlpha(0)  particle:SetStartSize(22)  particle:SetEndSize(0)  particle:SetStartLength(1)  particle:SetEndLength(22)  particle:SetVelocity(VectorRand():GetNormal() * 20)  end  emitter:Finish() emitter = nil collectgarbage("step", 64) end