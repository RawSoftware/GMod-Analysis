EFFECT.LifeTime = 0.4  function EFFECT:Init(effectdata)  local pos = effectdata:GetOrigin()  local normal = effectdata:GetNormal() or Vector(0, 0, 1)  local ent = effectdata:GetEntity()   self.Pos = pos  self.Normal = normal  self.DieTime = CurTime() + self.LifeTime  self.Ent = ent   if ent == MySelf and not ent:ShouldDrawLocalPlayer() then return end       local emitter = ParticleEmitter(pos)  emitter:SetNearClip(24, 32)   for i=1, 20 do  local heading = VectorRand():GetNormalized()   local particle = emitter:Add("effects/redflare", pos)  particle:SetVelocity(200 * heading)  particle:SetDieTime(math.Rand(0.3, 0.45))  particle:SetStartAlpha(255)  particle:SetEndAlpha(0)  particle:SetStartSize(math.Rand(1, 2))  particle:SetEndSize(0)  particle:SetRoll(math.Rand(0, 360))  particle:SetRollDelta(math.Rand(-10, 10))  particle:SetStartLength(30)  particle:SetEndLength(0)  particle:SetAirResistance(250)  particle:SetColor(255, 255, 255)  end   emitter:Finish() emitter = nil collectgarbage("step", 64) end  function EFFECT:Think()  return CurTime() < self.DieTime end  local matGlow = Material("sprites/glow04_noz") local colRed = Color(255, 0, 0, 255) local colWhite = Color(255, 255, 255, 255) function EFFECT:Render()  local ent = self.Ent  if ent == MySelf and not ent:ShouldDrawLocalPlayer() then return end  local delta = (self.DieTime - CurTime()) / self.LifeTime  local delta2 = math.max(0, (self.DieTime - 0.3 - CurTime()) / (self.LifeTime - 0.3))  local basesize = 3  basesize = basesize + basesize ^ (1.5 - (1 - delta))   local pos = self.Pos   colRed.a = delta * 255  colWhite.a = delta2 * 255  render.SetMaterial(matGlow)  render.DrawSprite(pos, 378, basesize, colRed)  render.DrawSprite(pos, basesize, 248, colRed)  render.DrawSprite(pos, 378, basesize, colWhite)  render.DrawSprite(pos, basesize, 248, colWhite)   local glowsize = 65 * delta  render.DrawSprite(pos, glowsize, glowsize, colWhite)  render.DrawSprite(pos, glowsize, glowsize, colRed) end 