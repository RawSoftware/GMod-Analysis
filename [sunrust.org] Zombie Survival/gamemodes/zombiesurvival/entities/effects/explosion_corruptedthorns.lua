function EFFECT:Think()  return CurTime() < self.DieTime end  function EFFECT:Init(data)  local normal = data:GetNormal() * -1  local pos = data:GetOrigin()   self.DieTime = CurTime() + 1   util.Decal("FadingScorch", pos - normal, pos + normal)   sound.Play("beams/beamstart5.wav", pos, 80, 95)   self.Pos = pos  self.Normal = normal  self.Col = Color(0, 255, 0, 255)   local emitter = ParticleEmitter(pos)  emitter:SetNearClip(28, 36)  self.Emitter = emitter   local particles = {}  for i=0, math.Rand(80, 140) do  local heading = VectorRand():GetNormalized()   local particle = emitter:Add("effects/yellowflare", pos)  particle:SetVelocity(heading * 1300)  particle:SetDieTime(.65)  particle:SetStartAlpha(255)  particle:SetEndAlpha(200)  particle:SetStartSize(math.Rand(48, 64))  particle:SetEndSize(0)  particle:SetRoll(math.Rand(0, 360))  particle:SetRollDelta(math.Rand(-75, 75))  particle:SetAirResistance(200)  particle:SetColor(12, 120, 0)   particles[#particles + 1] = particle  end  emitter:Finish()   self.Particles = particles end  local matGlow = Material("sprites/glow04_noz") local matBeam = Material("effects/tool_tracer") function EFFECT:Render()  local pos = self.Pos  local normal = self.Normal   local delta = self.DieTime - CurTime()  local spread = 420   local size  if 0.25 < delta then  size = delta * spread  else  size = spread - delta * spread  end   local col = self.Col  col.a = delta * 510   render.SetMaterial(matGlow)  render.DrawQuadEasy(pos, normal, size, size, col)  render.DrawQuadEasy(pos, normal, size, size, col)  render.DrawQuadEasy(pos, normal * -1, size, size, col)  render.DrawQuadEasy(pos, normal * -1, size, size, col)  render.DrawSprite(pos, size, size, col)  render.DrawSprite(pos, size, size, col)   render.SetMaterial(matBeam)   local siz = (self.DieTime - CurTime()) * 36   for i, particle in pairs(self.Particles) do  if particle and math.random(1, 3) == 1 then  render.DrawBeam(particle:GetPos(), pos, siz, 1, 0, col)  end  end end 