function EFFECT:Init( data )  self.Position = data:GetStart()  self.WeaponEnt = data:GetEntity()  self.Attachment = data:GetAttachment()   self.StartPos = self:GetTracerShootPos( self.Position, self.WeaponEnt, self.Attachment )  self.EndPos = data:GetOrigin()   self.Life = 0   self:SetRenderBoundsWS( self.StartPos, self.EndPos ) end  function EFFECT:Think( )  self.Life = self.Life + FrameTime() * 2  self.StartPos = self:GetTracerShootPos( self.Position, self.WeaponEnt, self.Attachment )   return self.Life < 1 end  local beammat = Material("trails/physbeam") local beam1mat = Material("trails/laser") local glowmat = Material("sprites/light_glow02_add") function EFFECT:Render()  local texcoord = math.Rand( 0, 1 )   local norm = (self.StartPos - self.EndPos) * self.Life  local nlen = norm:Length()   local alpha = 1 - self.Life   local emitter = ParticleEmitter(self.EndPos)  emitter:SetNearClip(24, 32)   local particle = emitter:Add("effects/blueflare"..math.random(1, 1), self.EndPos - (self.EndPos - self.StartPos) * math.Rand(0, 1))  local vel = VectorRand():GetNormal() * 25  particle:SetDieTime(1)  particle:SetColor(255,45,45)  particle:SetColor(255,45,45)  particle:SetStartAlpha(255)  particle:SetEndAlpha(0)  particle:SetStartSize(2)  particle:SetEndSize(0)  particle:SetVelocity(vel)  particle:SetGravity(vel * -0.5)  particle:SetRoll(math.random(360))   emitter:Finish() emitter = nil collectgarbage("step", 64)   render.SetMaterial(beammat)  for i = 0, 4 do  render.DrawBeam(self.StartPos, self.EndPos, 9, texcoord, texcoord + nlen / 128, Color(195, 75, 75, 200 * alpha))  end   render.SetMaterial(beam1mat)  for i = 0, 4 do  render.DrawBeam(self.StartPos, self.EndPos, 17, texcoord, texcoord + nlen / 128, Color(255, 75, 75, 170 * alpha))  end   render.SetMaterial(glowmat)  render.DrawSprite(self.StartPos, 50, 50, Color(255, 40, 40, 200 * alpha))  render.DrawSprite(self.EndPos, 50, 50, Color(255, 45, 40, 148 * alpha)) end