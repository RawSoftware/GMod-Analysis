EFFECT.LifeTime = 0.25  function EFFECT:Init(effectdata)  local pos = effectdata:GetOrigin()  local normal = effectdata:GetNormal()   pos = pos + normal   self.Pos = pos  self.Normal = normal  self.DieTime = CurTime() + self.LifeTime   local particle   sound.Play("weapons/physcannon/energy_disintegrate"..math.random(4, 5)..".wav", pos, 80, math.random(70, 90))  sound.Play("weapons/physcannon/energy_sing_explosion2.wav", pos, 80, math.random(105, 120))   local emitter = ParticleEmitter(pos)  local emitter2 = ParticleEmitter(pos, true)  emitter:SetNearClip(24, 32)  emitter2:SetNearClip(24, 32)   for i=1, 100 do  particle = emitter:Add("effects/splash2", pos)  particle:SetDieTime(0.2)  particle:SetColor(135, 105, 255)  particle:SetStartAlpha(235)  particle:SetEndAlpha(0)  particle:SetStartSize(6)  particle:SetEndSize(6)  particle:SetStartLength(0)  particle:SetEndLength(40)  particle:SetVelocity(VectorRand():GetNormal() * 30)  end  local ringstart = pos + normal * -3  for i=1, 3 do  particle = emitter2:Add("effects/select_ring", ringstart)  particle:SetDieTime(0.05 + i * 0.05)  particle:SetColor(135, 105, 255)  particle:SetStartAlpha(235)  particle:SetEndAlpha(0)  particle:SetStartSize(0)  particle:SetEndSize(30)  particle:SetAngles(normal:Angle())  particle = emitter2:Add("effects/select_ring", ringstart)  particle:SetDieTime(0.2 + i * 0.1)  particle:SetColor(135, 105, 255)  particle:SetStartAlpha(235)  particle:SetEndAlpha(0)  particle:SetStartSize(0)  particle:SetEndSize(30)  particle:SetAngles(normal:Angle())  end   for i=1, 60 do  local heading = VectorRand()  heading:Normalize()   particle = emitter:Add("effects/spark", pos + heading * 8)  particle:SetVelocity(220 * heading)  particle:SetDieTime(math.Rand(0.3, 0.4))  particle:SetStartAlpha(255)  particle:SetEndAlpha(255)  particle:SetStartSize(math.Rand(3, 4))  particle:SetEndSize(0)  particle:SetRoll(math.Rand(0, 360))  particle:SetRollDelta(math.Rand(-10, 10))  particle:SetAirResistance(150)  particle:SetStartLength(20)  particle:SetEndLength(0)  particle:SetColor(135, 105, 255)  end   emitter:Finish()  emitter2:Finish() end  function EFFECT:Think()  return CurTime() < self.DieTime end  local matRefract = Material("refract_ring") local matGlow = Material("sprites/glow04_noz") local colGlow = Color(135, 105, 255) function EFFECT:Render()  local delta = (self.DieTime - CurTime()) / self.LifeTime  local basesize = 12  basesize = basesize + basesize ^ (1.5 - delta)   local pos = self.Pos  matRefract:SetFloat("$refractamount", (10.75 + math.abs(math.sin(CurTime() * 5)) * math.pi * 0.25) * delta)  render.SetMaterial(matRefract)  render.UpdateRefractTexture()  render.DrawSprite(pos, basesize, basesize)  render.DrawQuadEasy(pos, self.Normal, basesize, basesize, colGlow, 0)  render.DrawQuadEasy(pos, self.Normal, basesize, basesize, colGlow, 0)   basesize = basesize * 1.75   colGlow.a = delta * 255  render.SetMaterial(matGlow)  render.DrawSprite(pos, basesize, basesize, colGlow)  render.DrawQuadEasy(pos, self.Normal, basesize, basesize, colGlow, 0)  render.DrawQuadEasy(pos, self.Normal, basesize, basesize, colGlow, 0) end 