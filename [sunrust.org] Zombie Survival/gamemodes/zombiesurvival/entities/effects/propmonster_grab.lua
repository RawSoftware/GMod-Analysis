local mat_energy = Material( "effects/tool_tracer" ) local mat_glow = Material("sprites/glow04_noz")  local math_clamp = math.Clamp local math_random = math.random local math_round = math.Round  local vec_rand = VectorRand local col_glow = Color( 130, 255, 0, 255 )  function EFFECT:Init(data)   self.Ent = data:GetEntity()  self.EntOwner = Entity( math.Round( data:GetRadius() ) )  self.LifeTime = data:GetMagnitude()   self.DieTime = CurTime() + self.LifeTime   self:SetRenderBounds( Vector( -50, -50, -50 ), Vector( 60, 60, 60 ) )  end  function EFFECT:Think()  return self.DieTime and CurTime() < self.DieTime end  local hands = { 25, 39 }  function EFFECT:Render()   if self.Ent and self.Ent:IsValid() and self.EntOwner and self.EntOwner:IsValid() then      for _, hand in ipairs( hands ) do   local pos, ang = self.EntOwner:GetBonePosition( hand )   if pos and ang then   local dir = vec_rand():GetNormal()  local size = math_random( 75, 80 )   render.SetMaterial( mat_glow )  render.DrawSprite( pos, size, size, col_glow )   local bits = math_random( 4, 6 )  local dist = math_random( 15, 25 )   render.SetMaterial( mat_energy )   local prev_pos  for i=1, bits do  local cur_off = dir * ( i * dist / bits ) + vec_rand() * 10  local prev_off = dir * ( ( i - 1 ) * dist / bits ) + vec_rand() * 10  render.DrawBeam( pos + cur_off, pos + ( prev_pos or prev_off ), 12 - i , RealTime()*0.1, RealTime()*0.1 + 0.2, col_glow )  prev_pos = prev_off  end   local prop_pos = self.Ent:NearestPoint( pos )  dir = ( prop_pos - pos ):GetNormal()   bits = math_random( 5, 8 )  dist = pos:Distance( prop_pos )   local prev_pos  for i=1, bits do  local cur_off = dir * ( i * dist / bits ) + vec_rand() * i * 2  local prev_off = dir * ( ( i - 1 ) * dist / bits ) + vec_rand() * i * 2  render.DrawBeam( pos + cur_off, prev_pos or ( pos + prev_off ), 22 , RealTime()*0.1, RealTime()*0.1 + 0.7, col_glow )  prev_pos = pos + prev_off  end   size = math_random( 55, 100 )   render.SetMaterial( mat_glow )  render.DrawSprite( prop_pos, size, size, col_glow )   end   end   end  end