local surface_SetMaterial = surface.SetMaterial local surface_SetDrawColor = surface.SetDrawColor local surface_DrawRect = surface.DrawRect local surface_DrawOutlinedRect = surface.DrawOutlinedRect local surface_DrawTexturedRect = surface.DrawTexturedRect local surface_DrawTexturedRectUV = surface.DrawTexturedRectUV  local cam_IgnoreZ = cam.IgnoreZ local cam_Start3D2D = cam.Start3D2D local cam_End3D2D = cam.End3D2D local render_FogMode = render.FogMode local render_GetFogMode = render.GetFogMode  local draw_SimpleText = draw.SimpleText local draw_SimpleTextBlurry = draw.SimpleTextBlurry local draw_SimpleTextBlur = draw.SimpleTextBlur local draw_GetFontHeight = draw.GetFontHeight  local M_Player = FindMetaTable("Player") local P_Team = M_Player.Team local P_IsSkillActive = M_Player.IsSkillActive  function GM:_HUDPaint()     if self.FilmMode then return end      local screenscale = BetterScreenScale()     local myteam = P_Team(MySelf)      self:HUDDrawTargetID(myteam, screenscale)      if self:GetWave() > 0 then         self:DrawFearMeter(self:CachedFearPower(), screenscale)     end      if IsValid(GAMEMODE.CachedCapturePoints) then         self:DrawCaptureMeter()     end      if myteam == TEAM_UNDEAD then         self:ZombieHUD()     elseif myteam == TEAM_HUMAN then         self:HumanHUD(screenscale)     end      if GetGlobalBool("classicmode") then         draw_SimpleTextBlurry(translate.Get("classic_mode"), "ZSHUDFontSmaller", 4, ScrH() - 4, COLOR_GRAY, TEXT_ALIGN_LEFT, TEXT_ALIGN_BOTTOM_REAL)     end end  local colCaptureBar = Color(200, 180, 150, 200) local texDownEdge = surface.GetTextureID("gui/gradient_down") local matBarGlow = Material("sprites/glow04_noz")  local ico_types = {     [1] = Material("zombiesurvival/contest_ark.png"),     [2] = Material("zombiesurvival/contest_elder.png"),     [3] = Material("zombiesurvival/contest_blood.png"), }  function GM:DrawCaptureMeter()     local col = colCaptureBar     local point = self.CachedCapturePoints      local point_type = point:GetCapturePointType()     if point_type == 0 then return end      local fraction = point:GetCaptureProgress()     local screenscale = BetterScreenScale()      local x, y = ScrW() * 0.5, ScrH() * 0.3     local icon_size = 64 * screenscale      local maxbarwidth = 355 * screenscale     local barheight = 11 * screenscale     local barwidth = maxbarwidth * math.Clamp(fraction, 0, 1)     local startx = x - maxbarwidth * 0.5 + icon_size * 0.5      surface_SetDrawColor(0, 0, 0, 150)     surface_DrawRect(startx, y, maxbarwidth, barheight)      surface_DrawRect(startx - icon_size, y - icon_size * 0.45, icon_size, icon_size)      surface.SetTexture(texDownEdge)     surface_SetDrawColor(210, 190, 160, 60)     surface_DrawTexturedRect(startx - icon_size + 3, y - icon_size * 0.45 + 3, icon_size - 6, icon_size - 6)      surface_SetDrawColor(255, 255, 255, 190)     surface.SetMaterial(ico_types[point_type])     surface_DrawTexturedRect(startx - icon_size + 3, y - icon_size * 0.45 + 3, icon_size - 6, icon_size - 6)      surface_SetDrawColor(col)     surface_DrawRect(startx + 3, y + 3, barwidth - 6, barheight - 6)      surface.SetMaterial(matBarGlow)  surface.SetDrawColor(255, 235, 215, 195)  surface.DrawTexturedRect(startx + 2 + barwidth - 7, y + 1 - barheight * 1.5, 4, barheight * 4)      draw_SimpleText(self:GetCapturePointName(point_type), "ZSBodyTextFontBig", startx + icon_size * 0.15, y - draw_GetFontHeight("ZSBodyTextFontBig") - 2, col, TEXT_ALIGN_LEFT)      local arrs = ""      for i = 1, point:GetLastCaptureIncrease() do         arrs = arrs .. ">"     end          draw_SimpleText(arrs, "ZSBodyTextFontBig", startx + maxbarwidth - icon_size * 0.15, y + barheight * 0.95, col, TEXT_ALIGN_RIGHT)          local colx     local timeleft = math.max(0, point:GetCaptureTimeEnd() - CurTime())     if timeleft < 20 then         local am = timeleft == 0 and 20 or 8         local glow = math.sin(RealTime() * am) * 200 + 255         colx = Color(255, glow, glow)     else         colx = col     end     local cp_time_remaining = util.ToMinutesSecondsCD(timeleft)      draw_SimpleText(cp_time_remaining, "ZSBodyTextFontBig", startx + icon_size * 0.25, y + barheight * 1.25, colx, TEXT_ALIGN_LEFT) end  local colPackUp = Color(20, 255, 20, 220) local colPackUpNotOwner = Color(255, 240, 10, 220) function GM:DrawPackUpBar(x, y, fraction, notowner, screenscale)     local col = notowner and colPackUpNotOwner or colPackUp      local maxbarwidth = 270 * screenscale     local barheight = 11 * screenscale     local barwidth = maxbarwidth * math.Clamp(fraction, 0, 1)     local startx = x - maxbarwidth * 0.5      surface_SetDrawColor(0, 0, 0, 220)     surface_DrawRect(startx, y, maxbarwidth, barheight)     surface_SetDrawColor(col)     surface_DrawRect(startx + 3, y + 3, barwidth - 6, barheight - 6)     surface_DrawOutlinedRect(startx, y, maxbarwidth, barheight)      draw_SimpleText(notowner and CurTime() % 2 < 1 and translate.Format("requires_x_people", 4) or notowner and translate.Get("packing_others_object") or translate.Get("packing"), "ZSHUDFontSmall", x, y - draw_GetFontHeight("ZSHUDFontSmall") - 2, col, TEXT_ALIGN_CENTER) end  local colSigilTeleport = Color(125, 215, 255, 220) function GM:DrawSigilTeleportBar(x, y, fraction, target, screenscale)     local maxbarwidth = 270 * screenscale     local barheight = 11 * screenscale     local barwidth = maxbarwidth * math.Clamp(fraction, 0, 1)     local startx = x - maxbarwidth * 0.5      local letter = "?"     for i, sigil in pairs(ents.FindByClass("prop_obj_sigil")) do         if target == sigil then             letter = string.char(64 + i)             break         end     end      if letter == "?" then return end      damageflash = math.max(0, math.min((CurTime() - target:GetSigilLastDamaged()) * 2, 1))      colSigilTeleport = Color(125, 215 * damageflash, 255 * damageflash)      surface_SetDrawColor(0, 0, 0, 220)     surface_DrawRect(startx, y, maxbarwidth, barheight)     surface_SetDrawColor(colSigilTeleport)     surface_DrawRect(startx + 3, y + 3, barwidth - 6, barheight - 6)     surface_DrawOutlinedRect(startx, y, maxbarwidth, barheight)      local yadj = self:TypewriterFont() and 8 or 0      draw_SimpleText(translate.Format("teleporting_to_sigil", letter), "ZSHUDFontSmall", x, y - draw_GetFontHeight("ZSHUDFontSmall") - 2 + yadj, colSigilTeleport, TEXT_ALIGN_CENTER)     draw_SimpleText(translate.Get("press_shift_to_cancel"), "ZSHUDFontSmaller", x, y + draw_GetFontHeight("ZSHUDFontSmaller") - 16 + yadj, colSigilTeleport, TEXT_ALIGN_CENTER)     draw_SimpleText(translate.Get("point_at_a_sigil_to_choose_destination"), "ZSHUDFontSmaller", x, y + draw_GetFontHeight("ZSHUDFontSmaller") * 2 - 16 + yadj, colSigilTeleport, TEXT_ALIGN_CENTER) end  local shields = Material("zombiesurvival/defense.png") local matGlow = Material("sprites/glow04_noz") local stam_bar_a = 0 local stam_bar_lerp = 1 function GM:HumanHUD(screenscale)     local curtime = CurTime()     local w, h = ScrW(), ScrH()      local packup = MySelf.PackUp     local sigiltp = MySelf.SigilTeleport     if packup and packup:IsValid() then         self:DrawPackUpBar(w * 0.5, h * 0.55, 1 - packup:GetTimeRemaining() / packup:GetMaxTime(), packup:GetNotOwner(), screenscale)     elseif sigiltp and sigiltp:IsValid() then         self:DrawSigilTeleportBar(w * 0.5, h * 0.55, 1 - sigiltp:GetTimeRemaining() / sigiltp:GetMaxTime(), sigiltp:GetTargetSigil(), screenscale)     end      if not self.RoundEnded then         if self:GetWave() == 0 and not self:GetWaveActive() then             local txth = draw_GetFontHeight("ZSHUDFontSmall")             local desiredzombies = self:GetDesiredStartingZombies()              draw_SimpleTextBlurry(translate.Get("waiting_for_players").." "..util.ToMinutesSecondsCD(math.max(0, self:GetWaveStart() - curtime)), "ZSHUDFontSmall", w * 0.5, h * 0.25, COLOR_GRAY, TEXT_ALIGN_CENTER)              if desiredzombies > 0 then                                   local waveonecount = self.WaveOneZombies                   local percent = self.StartZombiePercent or waveonecount                  draw_SimpleTextBlurry(translate.Get(self:HasSigils() and "humans_furthest_from_sigils_are_zombies" or "humans_closest_to_spawns_are_zombies"), "ZSHUDFontSmall", w * 0.5, h * 0.25 + txth, COLOR_GRAY, TEXT_ALIGN_CENTER)                 draw_SimpleTextBlurry(translate.Format("number_of_initial_zombies_this_game", percent * 100, desiredzombies), "ZSHUDFontSmall", w * 0.5, h * 0.7, COLOR_GRAY, TEXT_ALIGN_CENTER)                  for i, pl in ipairs(self.ZombieVolunteers) do                     if pl:IsValid() then                         draw_SimpleTextBlurry(translate.Get("zombie_volunteers"), "ZSHUDFontSmall", w * 0.5, h * 0.7 + txth, COLOR_GRAY, TEXT_ALIGN_CENTER)                         break                     end                 end                  local y = h * 0.7 + txth * 1.9                 txth = draw_GetFontHeight("ZSHUDFontTiny")                 for i, pl in ipairs(self.ZombieVolunteers) do                     if pl:IsValid() then                         draw_SimpleTextBlurry(pl:Name(), "ZSHUDFontTiny", w * 0.5, y, pl == MySelf and COLOR_SOFTRED or COLOR_GRAY, TEXT_ALIGN_CENTER)                         y = y + txth * 0.8                     end                 end             end         end          local drown = MySelf.status_drown         if drown and drown:IsValid() then             surface_SetDrawColor(0, 0, 0, 60)             surface_DrawRect(w * 0.4, h * 0.35, w * 0.2, 12)             surface_SetDrawColor(30, 30, 230, 180)             surface_DrawOutlinedRect(w * 0.4, h * 0.35, w * 0.2, 12)             surface_DrawRect(w * 0.4, h * 0.35, w * 0.2 * (1 - drown:GetDrown()), 12)             draw_SimpleTextBlurry(translate.Get("breath").." ", "ZSHUDFontSmall", w * 0.4, h * 0.35 + 6, COLOR_LBLUE, TEXT_ALIGN_RIGHT, TEXT_ALIGN_CENTER)         end     end      local cur_dec_stam = MySelf:CurrentDecimalStamina()     stam_bar_a = GAMEMODE.StaminaAlways and 1 or Lerp(FrameTime() * 10, stam_bar_a, cur_dec_stam < 1 and 1 or 0)     if stam_bar_a > 0.05 then         stam_bar_lerp = Lerp(FrameTime() * 5, stam_bar_lerp, cur_dec_stam)          local stambar_width = GAMEMODE.StaminaMeterWidth * screenscale         local stambar_hei = 12 * screenscale          local x, y = ScrW() * 0.5, ScrH() * GAMEMODE.StaminaMeterY         local startx = x - stambar_width * 0.5          local low_stamina = cur_dec_stam <= 0 and (CurTime() * 5) % 2 <= 1         local low_bg = low_stamina and 40 or 0       surface.SetDrawColor(low_bg, 0, 0, 230 * stam_bar_a)  surface.DrawRect(startx, y, stambar_width, stambar_hei)          local subwidth = stam_bar_lerp * stambar_width   surface.SetDrawColor(10, 90, 10, 160 * stam_bar_a)  surface.SetTexture(texDownEdge)  surface.DrawTexturedRect(startx + 2, y + 1, subwidth - 4, stambar_hei - 2)  surface.SetDrawColor(10, 90, 10, 30 * stam_bar_a)  surface.DrawRect(startx + 2, y + 1, subwidth - 4, stambar_hei - 2)          local low_glow = low_stamina and 100 or 255   surface.SetMaterial(matGlow)  surface.SetDrawColor(255, low_glow, low_glow, 255 * stam_bar_a)  surface.DrawTexturedRect(startx + 2 + math.max(0, subwidth - 6), y + 1 - stambar_hei/2, 4, stambar_hei * 2)     end         if self.InventoryMenu and self.InventoryMenu:IsValid() then         local label = self.InventoryMenu.SelectedTop         local lockon = self.HumanMenuLockOn         if lockon and self:ValidMenuLockOnTarget(MySelf, lockon) then             label:SetText(translate.Format("giving_items_to", lockon:Name()))             label:SizeToContents()             label:CenterHorizontal()         else             label:SetText("Selected Item")             label:SizeToContents()             label:CenterHorizontal()         end     end      if gamemode.Call("PlayerCanPurchase", MySelf) then         draw_SimpleTextBlurry(translate.Get("press_f2_for_the_points_shop"), "ZSHUDFontSmall", w * 0.5, screenscale * 135, GAMEMODE.BuyAnywhere and COLOR_GRAYPALE or COLOR_GRAY, TEXT_ALIGN_CENTER)     end end  function GM:ZombieObserverHUD(obsmode)     local w, h = ScrW(), ScrH()     local texh = draw_GetFontHeight("ZSHUDFontSmall")      if obsmode == OBS_MODE_CHASE then         local target = MySelf:GetObserverTarget()         if target and target:IsValid() then             if target:IsPlayer() and P_Team(target) == TEAM_UNDEAD then                 draw_SimpleTextBlur(translate.Format("observing_x", target:Name(), math.max(0, target:Health())), "ZSHUDFontSmall", w * 0.5, h * 0.75 - texh - 32, COLOR_DARKRED, TEXT_ALIGN_CENTER)             end              if target.IsCreeperNest or target.MinionSpawn then                 local txt = target.IsCreeperNest and "Nest" or "Gore Child"                  draw_SimpleTextBlur(translate.Format("observing_x_simple", txt), "ZSHUDFontSmall", w * 0.5, h * 0.75 - texh - 32, COLOR_DARKRED, TEXT_ALIGN_CENTER)             end              dyn = self:GetDynamicSpawning() and self:DynamicSpawnIsValid(target)         end     end      local space = texh + 2     local x, y = w / 2, h * 0.68      if self:GetWaveActive() then         draw_SimpleTextBlurry(translate.Get("press_lmb_to_spawn"), "ZSHUDFontSmall", x, y, COLOR_GRAY, TEXT_ALIGN_CENTER)         draw_SimpleTextBlurry(translate.Get("press_rmb_to_spawn_close"), "ZSHUDFontSmall", x, y + space, COLOR_GRAY, TEXT_ALIGN_CENTER)         draw_SimpleTextBlurry(translate.Get("press_reload_to_spawn_far"), "ZSHUDFontSmall", x, y + space * 2, COLOR_GRAY, TEXT_ALIGN_CENTER)         draw_SimpleTextBlurry(translate.Get("press_alt_nest_menu"), "ZSHUDFontSmall", x, y + space * 4, COLOR_GRAY, TEXT_ALIGN_CENTER)     end      draw_SimpleTextBlurry(translate.Get("press_jump_to_free_roam"), "ZSHUDFontSmall", x, y + space * 3, COLOR_GRAY, TEXT_ALIGN_CENTER) end  local colLifeStats = Color(255, 50, 50, 255) function GM:ZombieHUD()     if self.DemibarAlways and self.DemiBar and not self.DemiBar:IsVisible() then         self.DemiBar:SetVisible(true)     end      if self.LifeStatsEndTime and CurTime() < self.LifeStatsEndTime and (self.LifeStatsBarricadeDamage > 0 or self.LifeStatsHumanDamage > 0 or self.LifeStatsBrainsEaten > 0) then         colLifeStats.a = math.Clamp((self.LifeStatsEndTime - CurTime()) / (self.LifeStatsLifeTime * 0.33), 0, 1) * 255          local th = draw_GetFontHeight("ZSHUDFontSmall")         local x = ScrW() * 0.75         local y = ScrH() * 0.75          draw_SimpleTextBlur(translate.Get("that_life"), "ZSHUDFontSmall", x, y, colLifeStats, TEXT_ALIGN_LEFT)         y = y + th          if self.LifeStatsBarricadeDamage > 0 then             draw_SimpleTextBlur(translate.Format("x_damage_to_barricades", self.LifeStatsBarricadeDamage), "ZSHUDFontSmall", x, y, colLifeStats, TEXT_ALIGN_LEFT)             y = y + th         end         if self.LifeStatsHumanDamage > 0 then             draw_SimpleTextBlur(translate.Format("x_damage_to_humans", self.LifeStatsHumanDamage), "ZSHUDFontSmall", x, y, colLifeStats, TEXT_ALIGN_LEFT)             y = y + th         end         if self.LifeStatsBrainsEaten > 0 then             draw_SimpleTextBlur(translate.Format("x_brains_eaten", self.LifeStatsBrainsEaten), "ZSHUDFontSmall", x, y, colLifeStats, TEXT_ALIGN_LEFT)             y = y + th         end     end      if GAMEMODE.LastHitBlocking and GAMEMODE.LastHitBlocking > CurTime() then         local size = 64         local half_size = size / 2         local mx, my = w / 2 - half_size, h * 0.5 - half_size          local alpha = math.max(0, GAMEMODE.LastHitBlocking - CurTime()) * 255          surface.SetMaterial(shields)         surface.SetDrawColor(220, 50, 50, alpha)         surface.DrawTexturedRect(mx, my, size, size)     end      local obsmode = MySelf:GetObserverMode()     if obsmode ~= OBS_MODE_NONE then         self:ZombieObserverHUD(obsmode)     elseif not MySelf:Alive() then         local x = ScrW() * 0.5         local y = ScrH() * 0.3          if not self:GetWaveActive() then             draw_SimpleTextBlur(translate.Get("waiting_for_next_wave"), "ZSHUDFont", x, y, COLOR_DARKRED, TEXT_ALIGN_CENTER)         end     end      local wave = self:GetWave()     if not self:GetWaveActive() and wave ~= 0 and self:GetWaveStart() - CurTime() >= 5 then         local th = draw_GetFontHeight("ZSHUDFont")         local x, y = ScrW() / 2, ScrH() * 0.3 + th          local pl = GAMEMODE.NextBossZombie         if pl and pl:IsValid() then             if pl == MySelf then                 draw_SimpleTextBlur(translate.Format("you_will_be_x_soon", GAMEMODE.NextBossZombieClass), "ZSHUDFont", x, y, Color(255, 50, 50), TEXT_ALIGN_CENTER)             else                 draw_SimpleTextBlur(translate.Format("x_will_be_y_soon", pl:Name(), GAMEMODE.NextBossZombieClass), "ZSHUDFont", x, y, COLOR_GRAY, TEXT_ALIGN_CENTER)             end             y = y + th         end          local demi_count = GAMEMODE.NextDemibossCount or 0         if demi_count > 0 then             local demi_text = GAMEMODE.NextDemibossIsMe and ("You will be 1 of " .. demi_count .. " demibosses soon.") or                                 "There will be " .. demi_count .. " demibosses soon."              draw_SimpleTextBlur(demi_text, "ZSHUDFontSmall", x, y, GAMEMODE.NextDemibossIsMe and COLOR_YELLOW or COLOR_GRAY, TEXT_ALIGN_CENTER)         end     end end  function GM:EvaluateFilmMode()     local visible = not self.FilmMode      if self.GameStatePanel and self.GameStatePanel:IsValid() then         self.GameStatePanel:SetVisible(visible)     end      if self.TopNotificationHUD and self.TopNotificationHUD:IsValid() then         self.TopNotificationHUD:SetVisible(visible)     end      if self.CenterNotificationHUD and self.CenterNotificationHUD:IsValid() then         self.CenterNotificationHUD:SetVisible(visible)     end      if self.XPHUD and self.XPHUD:IsValid() then         self.XPHUD:SetVisible(visible and self.DisplayXPHUD)     end      if self.HealthHUD and self.HealthHUD:IsValid() then         self.HealthHUD:SetVisible(visible)     end      if self.StatusHUD and self.StatusHUD:IsValid() then         self.StatusHUD:SetVisible(visible)     end end  function GM:RemakeCenterVGUI()     local screenscale = BetterScreenScale()      if self.GameStatePanel then         self.GameStatePanel:SetVisible(false)         self.GameStatePanel = nil     end      self.GameStatePanel = vgui.Create("ZSGameState")     self.GameStatePanel:SetTextFont("ZSHUDFontSmaller")     self.GameStatePanel:SetAlpha(220)     self.GameStatePanel:SetSize(screenscale * 420, screenscale * 80)     self.GameStatePanel:ParentToHUD()      if self.CenterNotificationHUD then         self.CenterNotificationHUD:SetVisible(false)         self.CenterNotificationHUD = nil     end      self.CenterNotificationHUD = vgui.Create("DEXNotificationsList")     self.CenterNotificationHUD:SetAlign(CENTER)     self.CenterNotificationHUD:SetMessageHeight(36)     self.CenterNotificationHUD.PerformLayout = function(pan)         pan:SetSize(ScrW() / 2, ScrH() * 0.35)         pan:CenterHorizontal()         pan:AlignBottom(16 * BetterScreenScale())     end     self.CenterNotificationHUD:InvalidateLayout()     self.CenterNotificationHUD:ParentToHUD() end  function GM:CreateVGUI()     local screenscale = BetterScreenScale()     self.GameStatePanel = vgui.Create("ZSGameState")     self.GameStatePanel:SetTextFont("ZSHUDFontSmaller")     self.GameStatePanel:SetAlpha(220)     self.GameStatePanel:SetSize(screenscale * 420, screenscale * 80)     self.GameStatePanel:ParentToHUD()      self.TopNotificationHUD = vgui.Create("DEXNotificationsList")     self.TopNotificationHUD:SetAlign(RIGHT)     self.TopNotificationHUD.PerformLayout = function(pan)         pan:SetSize(ScrW() * 0.4, ScrH() * 0.6)         pan:AlignTop(16 * BetterScreenScale())         pan:AlignRight()     end     self.TopNotificationHUD.TopNotice = true     self.TopNotificationHUD:InvalidateLayout()     self.TopNotificationHUD:ParentToHUD()      self:RemakeCenterVGUI()      if not self.DemiBar then         local demi_bar = vgui.Create("DProgressBar")         self.DemiBar = demi_bar     end end  function GM:CreateLateVGUI()     if not self.HealthHUD then         self.HealthHUD = vgui.Create("ZSHealthArea")     end      if not self.StatusHUD then         self.StatusHUD = vgui.Create("ZSStatusArea")     end      if not self.XPHUD then         self.XPHUD = vgui.Create("ZSExperienceHUD")         self.XPHUD:ParentToHUD()         self.XPHUD:InvalidateLayout()     end end  local BeatText = {} BeatText[0] = "Somewhat Safe" BeatText[1] = "Not Too Safe" BeatText[2] = "Unsafe" BeatText[3] = "Impending Danger" BeatText[4] = "Dangerous" BeatText[5] = "Very Dangerous" BeatText[6] = "Blood Bath" BeatText[7] = "Horror Show" BeatText[8] = "Zombie Survival" BeatText[9] = "Zombie Cluster-Fuck" BeatText[10] = "OH SHI-"  local currentpower = 0 local currentalpha = 0 local matSigil = Material("zombiesurvival/sigil.png") local matArsenal = Material("zombiesurvival/arsenalcrate.png") local matResupply = Material("zombiesurvival/resupply.png") local matFridge = Material("zombiesurvival/fridge3.png") local matRemantler = Material("zombiesurvival/remantler.png") local matCrossout = Material("zombiesurvival/crossout.png") local matNest = Material("zombiesurvival/nest.png") local matGlow = Material("sprites/glow04_noz")     function GM:DrawFearMeter(power, screenscale)     currentpower = Lerp(FrameTime() * 3, currentpower, power)     currentalpha = Lerp(FrameTime() * 10, currentalpha, power > 0.05 and 1 or 0)      local w, h = ScrW(), ScrH()     local size = 192 * screenscale     local half_size = size / 2     local mx, my = w / 2, h - size     local sigwid, sighei = screenscale * 18, screenscale * 36      local wid, hei = 200 * screenscale, 18 * screenscale      local fear_meter_x = GAMEMODE.FearMeterX or 0      local fear_meter_y = -GAMEMODE.FearMeterY or 0      local x = w/2 - wid/2 + fear_meter_x     local y = my + half_size + sighei * 0.7 + fear_meter_y      local subwidth = currentpower * wid      local bar_r = currentpower * 200     local bar_g = 200 - currentpower * 200      if currentalpha > 0.01 then         surface.SetDrawColor(0, 0, 0, 60 * currentalpha)         surface.DrawRect(x, y, wid, hei)          surface.SetDrawColor(bar_r, bar_g, 0, 160 * currentalpha)         surface.SetTexture(texDownEdge)         surface.DrawTexturedRect(x + 2, y + 1, subwidth - 4, hei - 2)         surface.SetDrawColor(bar_r, bar_g, 0, 30 * currentalpha)         surface.DrawRect(x + 2, y + 1, subwidth - 4, hei - 2)          surface.SetMaterial(matGlow)         surface.SetDrawColor(255, 255, 255, 255 * currentalpha)         surface.DrawTexturedRect(x + 2 + subwidth - 6, y + 1 - hei/2, 4, hei * 2)          if not self.ZombieEscape then             local txt = P_Team(MySelf) == TEAM_UNDEAD and translate.Format("resist_x", math.ceil(self:GetDamageResistance(currentpower) * 100)) or                                                     GAMEMODE.ShowBeatText and BeatText[math.floor(currentpower * 11)] or                                                     ""              local col = P_Team(MySelf) == TEAM_UNDEAD and Color(currentpower * 200, 200 - currentpower * 200, 0, 225 * currentalpha) or                                                         Color(200, 200, 200, 225 * currentalpha)              local typewriter = self.ZSFont == 0 and 0 or self.ZSFont == 2 and -1 or -5             local text_x = w * 0.5 + fear_meter_x             local text_y = y + typewriter * screenscale              draw_SimpleTextBlurry(txt, "ZSDamageResistance", text_x, text_y, col, TEXT_ALIGN_CENTER)         end     end      if self:GetUseSigils() and self.MaxSigils > 0 then         local sigils = GAMEMODE.CachedSigils         local sigil, health, maxhealth, corrupt, damageflash, sigx, sigy, healthfrac         local total_width = #sigils * (sigwid * 1.75)          local corruptsigils = 0         for i=1, #sigils do             sigil = sigils[i]             health = 0             maxhealth = 0             corrupt = false             if sigil and sigil:IsValid() then                 health = sigil:GetSigilHealth()                 maxhealth = sigil:GetSigilMaxHealth()                 corrupt = sigil:GetSigilCorrupted()                 corruptsigils = corruptsigils + (corrupt and 1 or 0)             end              if health >= 0 then                 sigx = mx - total_width/2 + (total_width/#sigils) * (i - 1) + sigwid * 0.45 + fear_meter_x                 sigy = my + half_size + sighei * 1.5 + fear_meter_y                  if sigil and sigil:IsValid() then                     damageflash = math.min((CurTime() - sigil:GetSigilLastDamaged()) * 2, 1) * 255                 else                     damageflash = 255                 end                 healthfrac = health / maxhealth                 if corrupt then                     surface_SetDrawColor((255 - damageflash) * healthfrac, damageflash * healthfrac, 0, 220)                 else                     surface_SetDrawColor((255 - damageflash) * healthfrac, damageflash * healthfrac, 220, 220)                 end                  surface_SetMaterial(matSigil)                 surface_DrawTexturedRect(sigx, sigy, sigwid, sighei)                  local letter = string.char(64 + i)                  draw_SimpleTextBlurry(letter, "ZSDamageResistance", sigx + sigwid*0.5, sigy + sighei*0.45, color_white_alpha180, TEXT_ALIGN_CENTER)                  if corrupt then                     surface_SetMaterial(matCrossout)                     surface_SetDrawColor(160, 0, 0, 220)                     surface_DrawTexturedRect(sigx, sigy, sigwid, sighei)                 end             end         end     end end  function GM:_PostDrawTranslucentRenderables()     if not self.DrawingInSky then         self:DrawPointWorldHints()         self:DrawWorldHints()         self:DrawSigilIndicators()         self:DrawCapturePointIndicators()         self:DrawDetectionIndicators()         self:DrawCrateIndicators()         self:DrawResupplyIndicators()         self:DrawRemantlerIndicators()         self:DrawHumanIndicators()         self:DrawNestIndicators()     end end  local function DrawDeployableIndicator(entity, draw_func)     local eyepos = EyePos()     local pos = entity:GetPos()      local deployable = entity.GetObjectOwner     pos.z = pos.z + (entity:IsPlayer() and 32 or (deployable and 12 or -8))      local distance = eyepos:DistToSqr(pos)      if (distance >= 6400 and distance <= 1048576) and (not deployable or not WorldVisible(eyepos, pos)) then           local ang = (eyepos - pos):Angle()         ang:RotateAroundAxis(ang:Right(), 270)         ang:RotateAroundAxis(ang:Up(), 90)         local alpha = math.min(220, math.sqrt(distance / 4)) * GAMEMODE.IconVisibility          cam_IgnoreZ(true)         cam_Start3D2D(pos, ang, math.max(250, math.sqrt(distance)) / 5000)          surface_SetDrawColor(255, 255, 255, alpha)          draw_func(entity)          cam_End3D2D()         cam_IgnoreZ(false)     end end  local arsenal_func = function()     surface_SetMaterial(matArsenal)      surface_DrawTexturedRect(-123, -113, 248, 228)     draw_SimpleTextBlurry("Arsenal", "ZS3D2DFont2Big", 0, 128, COLOR_GRAY, TEXT_ALIGN_CENTER) end  local remantle_func = function()     surface_SetMaterial(matRemantler)      surface_DrawTexturedRect(-128, -128, 256, 256)     draw_SimpleTextBlurry("Remantler", "ZS3D2DFont2Big", 0, 128, COLOR_GRAY, TEXT_ALIGN_CENTER) end  local resupply_func = function(resupply)     local fridge = resupply:GetClass() == "prop_fridge"      surface_SetMaterial(fridge and matFridge or matResupply)      surface_DrawTexturedRect(-128, -128, 256, 256)     local next_use = fridge and MySelf.NextFridgeUse or MySelf.NextUse      local timeremain = math.ceil(math.max(0, (next_use or 0) - CurTime()))     local txt = not next_use and translate.Get("ready") or timeremain > 0 and timeremain or translate.Get("ready")     draw_SimpleTextBlurry(txt, "ZS3D2DFont2Big", 0, 100, COLOR_GRAY, TEXT_ALIGN_CENTER)      local caches = fridge and MySelf.FridgeCaches or MySelf.StowageCaches     if caches then         draw_SimpleTextBlurry(caches .. " Uses", "ZS3D2DFont2Big", 0, 200, COLOR_GRAY, TEXT_ALIGN_CENTER)     end end  function GM:DrawCrateIndicators()     if P_Team(MySelf) ~= TEAM_HUMAN or not P_IsSkillActive(MySelf, SKILL_INSIGHT) then return end      for i, arsenal in pairs(GAMEMODE.CachedArsenalEntities) do         if not arsenal:IsValid() then continue end         DrawDeployableIndicator(arsenal, arsenal_func)     end end  function GM:DrawResupplyIndicators()     if P_Team(MySelf) ~= TEAM_HUMAN or not P_IsSkillActive(MySelf, SKILL_INSIGHT) then return end      for i, resupply in pairs(GAMEMODE.CachedResupplyEntities) do         if not resupply:IsValid() then continue end         DrawDeployableIndicator(resupply, resupply_func)     end end  function GM:DrawRemantlerIndicators()     if P_Team(MySelf) ~= TEAM_HUMAN or not P_IsSkillActive(MySelf, SKILL_VISION) then return end      for i, remantler in pairs(GAMEMODE.CachedRemantlerEntities) do         if not remantler:IsValid() then continue end         DrawDeployableIndicator(remantler, remantle_func)     end end  function GM:DrawNestIndicators()     if P_Team(MySelf) ~= TEAM_ZOMBIE then return end      local pos, distance, ang, alpha     local eyepos = EyePos()      surface_SetMaterial(matNest)      for i, nest in pairs(GAMEMODE.CachedNests) do         if not nest:IsValid() then continue end          pos = nest:GetPos()         pos.z = pos.z + 32         distance = eyepos:DistToSqr(pos)          ang = (eyepos - pos):Angle()         ang:RotateAroundAxis(ang:Right(), 270)         ang:RotateAroundAxis(ang:Up(), 90)         alpha = math.min(220, math.sqrt(distance / 4)) * GAMEMODE.IconVisibility          cam_IgnoreZ(true)         cam_Start3D2D(pos, ang, math.max(250, math.sqrt(distance)) / 5000)          surface_SetDrawColor(255, 255, 255, alpha)         surface_DrawTexturedRect(-128, -128, 256, 256)          draw_SimpleTextBlurry("Nest", "ZS3D2DFont2Big", 0, 128, COLOR_GRAY, TEXT_ALIGN_CENTER)          if distance < 80000 then             local nown = nest:GetNestOwner()             local ownname = nown:IsValidZombie() and nown:ClippedName() or ""              draw_SimpleTextBlurry(ownname, "ZS3D2DFont2", 0, 256, COLOR_GRAY, TEXT_ALIGN_CENTER)         end          cam_End3D2D()         cam_IgnoreZ(false)     end end  function GM:DrawCapturePointIndicators()     local pos, distance, ang, alpha     local eyepos = EyePos()      capture_point = GAMEMODE.CachedCapturePoints     if not capture_point or not capture_point:IsValid() then return end      local point_type = capture_point:GetCapturePointType()     if point_type == 0 then return end      surface_SetMaterial(ico_types[point_type])      pos = capture_point:GetPos()     pos.z = pos.z + 48      distance = eyepos:DistToSqr(pos)      alpha = math.min(220, math.sqrt(distance / 4)) * GAMEMODE.IconVisibility      ang = (eyepos - pos):Angle()     ang:RotateAroundAxis(ang:Right(), 270)     ang:RotateAroundAxis(ang:Up(), 90)      cam_IgnoreZ(true)     cam_Start3D2D(pos, ang, math.max(250, math.sqrt(distance)) / 5000)     local oldfogmode = render_GetFogMode()     render_FogMode(0)      surface_SetDrawColor(255, 255, 255, alpha)     surface_DrawTexturedRect(-256, -256, 512, 512)      draw_SimpleTextBlurry(self:GetCapturePointName(point_type), "ZS3D2DFont2Big", 0, 128, COLOR_GRAY, TEXT_ALIGN_CENTER)      render_FogMode(oldfogmode)     cam_End3D2D()     cam_IgnoreZ(false) end  function GM:DrawSigilIndicators()     if not self:GetUseSigils() then return end      local health, pos, distance, maxhealth, corrupted, damageflash, missinghealthfrac, ang, alpha     local eyepos = EyePos()      surface_SetMaterial(matSigil)      for i, sigil in pairs(GAMEMODE.CachedSigils) do         if not sigil:IsValid() then continue end          health = sigil:GetSigilHealth()         if health > 0 then             distorted = sigil:GetSigilDistorted()              pos = sigil:GetPos()             pos.z = pos.z + 48              if distorted then                 pos = pos + VectorRand() * 50             end              distance = eyepos:Distance(pos)              maxhealth = sigil:GetSigilMaxHealth()             corrupted = sigil:GetSigilCorrupted()              damageflash = math.min((CurTime() - sigil:GetSigilLastDamaged()) * 2, 1) * 255             missinghealthfrac = 1 - health / maxhealth             alpha = math.min(220, distance / 2) * GAMEMODE.IconVisibility              ang = (eyepos - pos):Angle()             ang:RotateAroundAxis(ang:Right(), 270)             ang:RotateAroundAxis(ang:Up(), 90)              cam_IgnoreZ(true)             cam_Start3D2D(pos, ang, math.max(250, distance) / 5000)             local oldfogmode = render_GetFogMode()             render_FogMode(0)              if corrupted then                 surface_SetDrawColor(255 - damageflash, damageflash, 0, alpha)             else                 surface_SetDrawColor(damageflash, 255, damageflash, alpha)             end             surface_DrawTexturedRect(-64, -128, 128, 256)             if missinghealthfrac > 0 then                 surface_SetDrawColor(40, 40, 40, 255)                 surface_DrawTexturedRectUV(-64, -128, 128, 256 * missinghealthfrac, 0, 0, 1, missinghealthfrac)             end              local distort_add = distorted and math.random(-30, 30) or 0              draw_SimpleTextBlurry(string.char(64 + i + distort_add), "ZS3D2DFont2Big", 0, 128, COLOR_GRAY, TEXT_ALIGN_CENTER)              render_FogMode(oldfogmode)             cam_End3D2D()             cam_IgnoreZ(false)         end     end end  local matRally = Material("zombiesurvival/horderally") local detection_vector = Vector() function GM:DrawDetectionIndicators()     local distance, ang, alpha     local eyepos = EyePos()      surface_SetMaterial(matRally)      local tb = table.Copy(GAMEMODE.Detections)     table.Add(tb, GAMEMODE.ZombieMarks)      for i, detection in ipairs(tb) do         local my_team = P_Team(MySelf)         if (detection.Mark and my_team == TEAM_ZOMBIE or not detection.Mark and my_team == TEAM_HUMAN) and CurTime() < detection.Time then             detection_vector.x = detection.Pos.x             detection_vector.y = detection.Pos.y             detection_vector.z = detection.Pos.z + 32              distance = eyepos:Distance(detection_vector)                          local multi_alpha = (detection.Time - CurTime()) / 10              ang = (eyepos - detection_vector):Angle()             ang:RotateAroundAxis(ang:Right(), 270)             ang:RotateAroundAxis(ang:Up(), 90)             alpha = math.min(220, distance / 2) * multi_alpha * GAMEMODE.IconVisibility              cam_IgnoreZ(true)             cam_Start3D2D(detection_vector, ang, math.max(250, distance) / 5000)              surface_SetDrawColor(255, detection.Mark and 50 or 255, detection.Mark and 50 or 255, alpha)             surface_DrawTexturedRect(-128, -128, 256, 256)              draw_SimpleTextBlurry("!!!", "ZS3D2DFont2Big", 0, 128, color_white_alpha150, TEXT_ALIGN_CENTER)              cam_End3D2D()             cam_IgnoreZ(false)         end     end end