GM.BeatSetHumanDefault = "defaulthuman" GM.BeatSetZombieDefault = "defaultzombiev2"  GM.ItemCategoryIcons = {  [ITEMCAT_GUNS] = "icon16/gun.png",  [ITEMCAT_AMMO] = "icon16/box.png",  [ITEMCAT_MELEE] = "icon16/cog.png",  [ITEMCAT_TOOLS] = "icon16/wrench.png",  [ITEMCAT_DEPLOYABLES] = "icon16/package.png",  [ITEMCAT_OTHER] = "icon16/world.png",  [ITEMCAT_TRINKETS] = "icon16/ruby.png"   }  GM.TrinketCategoryIcons = {  [ITEMSUBCAT_TRINKETS_OFFENSIVE]  = "weapon_zs_trinket_offensive",  [ITEMSUBCAT_TRINKETS_MELEE]  = "weapon_zs_trinket_melee",  [ITEMSUBCAT_TRINKETS_DEFENSIVE]  = "weapon_zs_trinket_defensive",  [ITEMSUBCAT_TRINKETS_SUPPORT]  = "weapon_zs_trinket_supportive",  [ITEMSUBCAT_TRINKETS_PERFORMANCE]  = "weapon_zs_trinket_performance",  [ITEMSUBCAT_TRINKETS_SPECIAL]  = "weapon_zs_trinket", }  GM.RemortColors = {  [9] = COLOR_TAN,  [8] = COLOR_BROWN,  [7] = COLOR_RPINK,  [6] = COLOR_RPURPLE,  [5] = COLOR_CYAN,  [4] = COLOR_GREEN,  [3] = COLOR_YELLOW,  [2] = COLOR_RORANGE,  [1] = COLOR_RED }  GM.SpeedToText = {  [SPEED_NORMAL] = "Normal",  [SPEED_SLOWEST] = "Very Slow",  [SPEED_SLOWER] = "Quite Slow",  [SPEED_SLOW] = "Slow",  [SPEED_FAST] = "Fast",  [SPEED_FASTER] = "Quite Fast",  [SPEED_FASTEST] = "Very Fast",  [-1] = "Ultra Slow", }  GM.AmmoToPurchaseNames = {  ["pistol"] = "pistolammo",  ["buckshot"] = "shotgunammo",  ["smg1"] = "smgammo",  ["ar2"] = "assaultrifleammo",  ["357"] = "rifleammo",  ["pulse"] = "pulseammo",  ["XBowBolt"] = "crossbowammo",  ["impactmine"] = "impactmine",  ["chemical"] = "chemical",     ["scrap"] = "scrapammo" }  GM.WeaponStatBarVals = {} function GM:AddNewItemViewerBar(dt)  self.WeaponStatBarVals[#self.WeaponStatBarVals + 1] = dt  self.WeaponStatBarVals[dt.Var] = dt end  GM:AddNewItemViewerBar({Var = "MeleeDamage",  Name = "Damage", Range = {2, 140},  TextCbk = function(num, swep)  return math.Round(num, 2)  end }) GM:AddNewItemViewerBar({Var = "MeleeRange",  Name = "Range", Range = {30, 100}}) GM:AddNewItemViewerBar({Var = "MeleeKnockBack", Name = "Knockback", Range = {0, 450}}) GM:AddNewItemViewerBar({Var = "Stability",      Name = "Block Stability", Range = {10, 150},     DisplayFunc = function(swep)         return (swep.Stability or 0) ~= 0 and swep.BlockReduction     end }) GM:AddNewItemViewerBar({Var = "BlockReduction",  Name = "Block Value", Range = {0, 100}, TextCbk = function(num, swep)  return 100 - num * 100 .. " %" end, NumCbk = function(num, swep)  return 100 - num * 100 end}) GM:AddNewItemViewerBar({Var = "MeleeSize",  Name = "Size", Range = {0.2, 3}}) GM:AddNewItemViewerBar({Var = "SwingTime",  Name = "Impact Delay", Range = {0, 1.5}, LessGood = true, TextCbk = function(num, swep)  return num == 0 and "Instant" or (math.Round(num, 2) .. " s") end})  GM:AddNewItemViewerBar({Var = "Damage",  Name = "Damage", Range = {1, 105}, Pri = true, TextCbk = function(num, swep)  if swep.Primary.NumShots and swep.Primary.NumShots > 1 then  return math.Round(num, 2) .. " x " .. swep.Primary.NumShots  end   return math.Round(num, 2) end, NumCbk = function(num, swep)  return num * swep.Primary.NumShots end, AmmoIfHasCheck = true}) GM:AddNewItemViewerBar({Var = "TurretFireRate",  Name = "Attack Delay", Range = {0.05, 2}, LessGood = true, AmmoIfHasCheck = true}) GM:AddNewItemViewerBar({Var = "Delay",  Name = "Attack Delay", Range = {0.05, 2}, Pri = true, LessGood = true,  ColCbk = function(swep)  return (swep.Heal or swep.BuffDuration) and "Cooldown" or "Attack Delay"  end,  TextCbk = function(num, swep)  return math.Round(math.ceil(num * GAMEMODE.TickRate)/GAMEMODE.TickRate, 2) .. " s"  end })  local cbk = function(num, swep)  return num / swep.RequiredClip end GM:AddNewItemViewerBar({Var = "ClipSize",  Name = "Clip Size", Range = {1, 35}, Pri = true, TextCbk = cbk, NumCbk = cbk})  GM:AddNewItemViewerBar({Var = "ConeMin",  Name = "Min Spread", Range = {0, 5}, LessGood = true,  TextCbk = function(num, swep)  return math.Round(num, 2)  end }) GM:AddNewItemViewerBar({Var = "ConeMax",  Name = "Max Spread", Range = {1.5, 7}, LessGood = true,  TextCbk = function(num, swep)  return math.Round(num, 2)  end }) GM:AddNewItemViewerBar({Var = "WalkSpeed",  Name = "Move Speed", Range = {200, 250}})  GM:AddNewItemViewerBar({Var = "Heal",  Name = "Healing", Range = {1, 25}}) GM:AddNewItemViewerBar({Var = "BuffDuration",  Name = "Buff Duration", Range = {3, 20}})  local string_lower = string.lower local function convert_to_res_percent(swep)     local res_ammo_as = swep.ResistanceAmmoAs     local ammo_type   = res_ammo_as and res_ammo_as ~= "dummy" and res_ammo_as or                         swep.Primary and swep.Primary.Ammo     local multiplier  = ammo_type and GAMEMODE.AmmoDamageResistanceEffectiveness[string_lower(ammo_type)] or 1     multiplier        = swep.Radius and multiplier * 1.2 or multiplier      return 1 - multiplier end  GM:AddNewItemViewerBar({Var = "ResistanceAmmoAs",  Name = "Resist Pierce", Range = {0, 1},     NumCbk = function(num, swep)         return convert_to_res_percent(swep)     end,  TextCbk = function(num, swep)  return convert_to_res_percent(swep) * 100 .. "%"  end,     DisplayFunc = function(swep)         return convert_to_res_percent(swep) ~= 0     end })  GM:AddNewItemViewerBar({Var = "Radius",  Name = "Area Radius", Range = {1, 120}}) GM:AddNewItemViewerBar({Var = "Taper",  Name = "Area Taper", Range = {0.6, 1},  TextCbk = function(num, swep)  return num * 100 .. "%"  end }) GM:AddNewItemViewerBar({Var = "CleaveTaper",      Name = "Taper", Range = {0.6, 1},  TextCbk = function(num, swep)  return num * 100 .. "%"  end })  GM:AddNewItemViewerBar({Var = "OverkillFactor",  Name = "Overkill", Range = {0, 1},  TextCbk = function(num, swep)  return num * 100 .. "%"  end })  GM:AddNewItemViewerBar({Var = "PointsMultiplier",  Name = "Point Multi", Range = {0.8, 1.3},  TextCbk = function(num, swep)  return num * 100 .. "%"  end })  GM:AddNewItemViewerBar({Var = "LegDamage",  Name = "Slow %", Range = {0, 24},  TextCbk = function(num, swep)  return math.Round((num / 24) * 100) .. "%"  end })  GM:AddNewItemViewerBar({Var = "Arcs",      Name = "Arcs", Range = {0, 7}}) GM:AddNewItemViewerBar({Var = "Pierces",  Name = "Pierces", Range = {0, 7}}) GM:AddNewItemViewerBar({Var = "Pens",      Name = "Pierces", Range = {0, 7},     DisplayFunc = function(swep)         return (swep.Pens or 0) ~= 0     end }) GM:AddNewItemViewerBar({Var = "PenTaper",  Name = "Pierce Taper", Range = {0, 1},  TextCbk = function(num, swep)  return num * 100 .. "%"  end,     DisplayFunc = function(swep)         return (swep.Pens or 0) ~= 0     end })    GM.BestiaryStatBarVals = {      {"Health", "Health", 0, 1000, false},     {"HealthPerWave", "HP Per Wave", 0, 60, false},     {"Speed", "Movement Speed", 0, 300, false},      {"MeleeDamage", "Damage", 2, 140, false},     {"PounceDamage", "Pounce Damage", 2, 10, false},     {"MeleeReach", "Reach", 10, 80, false},     {"Delay", "Attack Delay", 0.2, 3.5, false, "Primary"},     {"MeleeDelay", "Swing Delay", 0.2, 3, false},     {"MeleeSize", "Attack Size", 0.5, 5, false},      {"Points", "Points", 0.5, 25, false}, }  local function ModifyInterface(all)  if all then  GAMEMODE:CreateFonts()  else  GAMEMODE:CreateScalingFonts()  end  GAMEMODE:EmptyCachedFontHeights()   local screenscale = BetterScreenScale()   GAMEMODE.HealthHUD:InvalidateLayout()   GAMEMODE.GameStatePanel:InvalidateLayout()  GAMEMODE.GameStatePanel:SetSize(screenscale * 420, screenscale * 80)   GAMEMODE.TopNotificationHUD:InvalidateLayout()  GAMEMODE.CenterNotificationHUD:InvalidateLayout()  GAMEMODE.XPHUD:InvalidateLayout()  GAMEMODE.StatusHUD:InvalidateLayout()   if GAMEMODE.InventoryMenu and GAMEMODE.InventoryMenu:IsValid() then  GAMEMODE.InventoryMenu:SetVisible(false)  GAMEMODE.InventoryMenu = nil   if GAMEMODE.m_InvViewer and GAMEMODE.m_InvViewer:IsValid() then  GAMEMODE.m_InvViewer:SetVisible(false)  GAMEMODE.m_InvViewer = nil  end   if GAMEMODE.AmmoViewer and GAMEMODE.AmmoViewer:IsValid() then  GAMEMODE.AmmoViewer:SetVisible(false)  GAMEMODE.AmmoViewer = nil  end  return  end   GAMEMODE.ArsenalInterface = nil   GAMEMODE:ScoreboardRebuild() end  GM.LifeStatsLifeTime = 5  GM.CrosshairColor = Color(CreateClientConVar("zs_crosshair_colr", "255", true, false):GetInt(), CreateClientConVar("zs_crosshair_colg", "255", true, false):GetInt(), CreateClientConVar("zs_crosshair_colb", "255", true, false):GetInt(), CreateClientConVar("zs_crosshair_cola", "220", true, false):GetInt()) GM.CrosshairColor2 = Color(CreateClientConVar("zs_crosshair_colr2", "220", true, false):GetInt(), CreateClientConVar("zs_crosshair_colg2", "0", true, false):GetInt(), CreateClientConVar("zs_crosshair_colb2", "0", true, false):GetInt(), CreateClientConVar("zs_crosshair_cola2", "220", true, false):GetInt()) cvars.AddChangeCallback("zs_crosshair_colr", function(cvar, oldvalue, newvalue) GAMEMODE.CrosshairColor.r = tonumber(newvalue) or 255 end) cvars.AddChangeCallback("zs_crosshair_colg", function(cvar, oldvalue, newvalue) GAMEMODE.CrosshairColor.g = tonumber(newvalue) or 255 end) cvars.AddChangeCallback("zs_crosshair_colb", function(cvar, oldvalue, newvalue) GAMEMODE.CrosshairColor.b = tonumber(newvalue) or 255 end) cvars.AddChangeCallback("zs_crosshair_cola", function(cvar, oldvalue, newvalue) GAMEMODE.CrosshairColor.a = tonumber(newvalue) or 255 end) cvars.AddChangeCallback("zs_crosshair_colr2", function(cvar, oldvalue, newvalue) GAMEMODE.CrosshairColor2.r = tonumber(newvalue) or 255 end) cvars.AddChangeCallback("zs_crosshair_colg2", function(cvar, oldvalue, newvalue) GAMEMODE.CrosshairColor2.g = tonumber(newvalue) or 255 end) cvars.AddChangeCallback("zs_crosshair_colb2", function(cvar, oldvalue, newvalue) GAMEMODE.CrosshairColor2.b = tonumber(newvalue) or 255 end) cvars.AddChangeCallback("zs_crosshair_cola2", function(cvar, oldvalue, newvalue) GAMEMODE.CrosshairColor2.a = tonumber(newvalue) or 255 end)  GM.FilmMode = CreateClientConVar("zs_filmmode", "0", true, false):GetBool() cvars.AddChangeCallback("zs_filmmode", function(cvar, oldvalue, newvalue)  GAMEMODE.FilmMode = tonumber(newvalue) == 1   gamemode.Call("EvaluateFilmMode") end)  CreateClientConVar("zs_noredeem", "0", true, true) CreateClientConVar("zs_nodemiredeem", "0", true, true) CreateClientConVar("zs_alwaysvolunteer", "0", true, true) CreateClientConVar("zs_nobosspick", "0", true, true) CreateClientConVar("zs_noheavyviewpunch", "0", true, true) CreateClientConVar("zs_nousetodeposit", "0", true, true) CreateClientConVar("zs_nopickupprops", "0", true, true) CreateClientConVar("zs_friendonlygive", "0", true, true) CreateClientConVar("zs_nopackothers", "0", true, true) CreateClientConVar("zs_nochargeattack", "0", true, true)  GM.FriendOnlyHeal = CreateClientConVar("zs_friendonlyheal", "0", true, true):GetBool() cvars.AddChangeCallback("zs_friendonlyheal", function(cvar, oldvalue, newvalue)  GAMEMODE.FriendOnlyHeal = tonumber(newvalue) ~= 0 end) GM.CustomViewModelHands = CreateClientConVar("zs_customviewmodelhands", "0", true, true):GetBool() cvars.AddChangeCallback("zs_customviewmodelhands", function(cvar, oldvalue, newvalue)  GAMEMODE.CustomViewModelHands = tonumber(newvalue) == 1 end)  GM.DisableScopes = CreateClientConVar("zs_disablescopes", "0", true, false):GetBool() cvars.AddChangeCallback("zs_disablescopes", function(cvar, oldvalue, newvalue)  GAMEMODE.DisableScopes = tonumber(newvalue) == 1 end)  GM.IronsightZoomScale = math.Clamp(CreateClientConVar("zs_ironsightzoom", 1, true, false):GetFloat(), 0, 1) cvars.AddChangeCallback("zs_ironsightzoom", function(cvar, oldvalue, newvalue)  GAMEMODE.IronsightZoomScale = math.Clamp(tonumber(newvalue) or 1, 0, 1) end)  GM.ThirdPersonKnockdown = CreateClientConVar("zs_thirdpersonknockdown", "1", true, false):GetBool() cvars.AddChangeCallback("zs_thirdpersonknockdown", function(cvar, oldvalue, newvalue)  GAMEMODE.ThirdPersonKnockdown = tonumber(newvalue) == 1 end)  GM.SuicideOnChangeClass = CreateClientConVar("zs_suicideonchange", "1", true, false):GetBool() cvars.AddChangeCallback("zs_suicideonchange", function(cvar, oldvalue, newvalue)  GAMEMODE.SuicideOnChangeClass = tonumber(newvalue) == 1 end)  GM.BeatsEnabled = CreateClientConVar("zs_beats", "1", true, false):GetBool() cvars.AddChangeCallback("zs_beats", function(cvar, oldvalue, newvalue)  GAMEMODE.BeatsEnabled = tonumber(newvalue) == 1 end)  GM.HitSounds = CreateClientConVar("zs_hitsounds", "0", true, false):GetBool() cvars.AddChangeCallback("zs_hitsounds", function(cvar, oldvalue, newvalue)  GAMEMODE.HitSounds = tonumber(newvalue) == 1 end)  GM.DamageNumberThroughWalls = CreateClientConVar("zs_damagefloaterswalls", "0", true, false):GetBool() cvars.AddChangeCallback("zs_damagefloaterswalls", function(cvar, oldvalue, newvalue)  GAMEMODE.DamageNumberThroughWalls = tonumber(newvalue) == 1 end)  GM.DisplayPoints = CreateClientConVar("zs_scoreboardpoints", "0", true, false):GetBool() cvars.AddChangeCallback("zs_scoreboardpoints", function(cvar, oldvalue, newvalue)  GAMEMODE.DisplayPoints = tonumber(newvalue) == 1 end)  GM.StaminaAlways = CreateClientConVar("zs_staminaalways", "0", true, false):GetBool() cvars.AddChangeCallback("zs_staminaalways", function(cvar, oldvalue, newvalue)  GAMEMODE.StaminaAlways = tonumber(newvalue) == 1 end)  GM.DemibarAlways = CreateClientConVar("zs_demialways", "0", true, false):GetBool() cvars.AddChangeCallback("zs_demialways", function(cvar, oldvalue, newvalue)  GAMEMODE.DemibarAlways = tonumber(newvalue) == 1      if not GAMEMODE.DemiBar then         local demi_bar = vgui.Create("DProgressBar")         GAMEMODE.DemiBar = demi_bar     end end)  GM.BeatsVolume = math.Clamp(CreateClientConVar("zs_beatsvolume", 80, true, false):GetInt(), 0, 100) / 100 cvars.AddChangeCallback("zs_beatsvolume", function(cvar, oldvalue, newvalue)  GAMEMODE.BeatsVolume = math.Clamp(tonumber(newvalue) or 0, 0, 100) / 100 end)  GM.FixedCrosshair = CreateClientConVar("zs_fixedcrosshair", "0", true, false):GetBool() cvars.AddChangeCallback("zs_fixedcrosshair", function(cvar, oldvalue, newvalue)  GAMEMODE.FixedCrosshair = tonumber(newvalue) == 1 end)  GM.ShowBeatText = CreateClientConVar("zs_beattext", "0", true, false):GetBool() cvars.AddChangeCallback("zs_beattext", function(cvar, oldvalue, newvalue)  GAMEMODE.ShowBeatText = tonumber(newvalue) == 1 end)  GM.IconVisibility = math.Clamp(CreateClientConVar("zs_iconvisibility", 1, true, false):GetFloat(), 0, 1) cvars.AddChangeCallback("zs_iconvisibility", function(cvar, oldvalue, newvalue)  GAMEMODE.IconVisibility = math.Clamp(tonumber(newvalue) or 1, 0, 1) end)  GM.CrosshairLines = math.Clamp(CreateClientConVar("zs_crosshairlines", 4, true, false):GetInt(), 2, 8) cvars.AddChangeCallback("zs_crosshairlines", function(cvar, oldvalue, newvalue)  GAMEMODE.CrosshairLines = math.Clamp(tonumber(newvalue) or 4, 2, 8) end)  GM.CrosshairOffset = math.Clamp(CreateClientConVar("zs_crosshairoffset", 0, true, false):GetInt(), 0, 90) cvars.AddChangeCallback("zs_crosshairoffset", function(cvar, oldvalue, newvalue)  GAMEMODE.CrosshairOffset = math.Clamp(tonumber(newvalue) or 0, 0, 90) end)  GM.CrosshairThickness = math.Clamp(CreateClientConVar("zs_crosshairthickness", 1, true, false):GetFloat(), 0.5, 2) cvars.AddChangeCallback("zs_crosshairthickness", function(cvar, oldvalue, newvalue)  GAMEMODE.CrosshairThickness = math.Clamp(tonumber(newvalue) or 1, 0.5, 2) end)  GM.CrosshairLength = math.Clamp(CreateClientConVar("zs_crosshairlength", 1, true, false):GetFloat(), 0, 2) cvars.AddChangeCallback("zs_crosshairlength", function(cvar, oldvalue, newvalue)  GAMEMODE.CrosshairLength = math.Clamp(tonumber(newvalue) or 1, 0, 2) end)  GM.CrosshairSpacing = math.Clamp(CreateClientConVar("zs_crosshairspacing", 1, true, false):GetFloat(), 0, 20) cvars.AddChangeCallback("zs_crosshairspacing", function(cvar, oldvalue, newvalue)  GAMEMODE.CrosshairSpacing = math.Clamp(tonumber(newvalue) or 1, 0, 20) end)  GM.PropRotationSensitivity = math.Clamp(CreateClientConVar("zs_proprotationsens", 1, true, false):GetFloat(), 0.1, 4) cvars.AddChangeCallback("zs_proprotationsens", function(cvar, oldvalue, newvalue)  GAMEMODE.PropRotationSensitivity = math.Clamp(tonumber(newvalue) or 1, 0.1, 4) end)  GM.PropRotationSnap = math.Clamp(CreateClientConVar("zs_proprotationsnap", 0, true, false):GetInt(), 0, 45) cvars.AddChangeCallback("zs_proprotationsnap", function(cvar, oldvalue, newvalue)  GAMEMODE.PropRotationSnap = math.Clamp(tonumber(newvalue) or 0, 0, 45) end)  GM.FearMeterX = math.Clamp(CreateClientConVar("zs_fearmeterx", 0, true, false):GetInt(), -3000, 3000) cvars.AddChangeCallback("zs_fearmeterx", function(cvar, oldvalue, newvalue)  GAMEMODE.FearMeterX = math.Clamp(tonumber(newvalue) or 0, -3000, 3000) end)  GM.FearMeterY = math.Clamp(CreateClientConVar("zs_fearmetery", 0, true, false):GetInt(), 0, 2000) cvars.AddChangeCallback("zs_fearmetery", function(cvar, oldvalue, newvalue)  GAMEMODE.FearMeterY = math.Clamp(tonumber(newvalue) or 0, 0, 2000) end)  GM.StaminaMeterY = math.Clamp(CreateClientConVar("zs_staminay", 0.6, true, false):GetFloat(), 0, 1) cvars.AddChangeCallback("zs_staminay", function(cvar, oldvalue, newvalue)  GAMEMODE.StaminaMeterY = math.Clamp(tonumber(newvalue) or 0.6, 0, 1) end)  GM.StaminaMeterWidth = math.Clamp(CreateClientConVar("zs_staminawid", 300, true, false):GetInt(), 0, 800) cvars.AddChangeCallback("zs_staminawid", function(cvar, oldvalue, newvalue)  GAMEMODE.StaminaMeterWidth = math.Clamp(tonumber(newvalue) or 300, 0, 800) end)  GM.StatusBarX = math.Clamp(CreateClientConVar("zs_statusbarx", 0.01, true, false):GetFloat(), 0, 1) cvars.AddChangeCallback("zs_statusbarx", function(cvar, oldvalue, newvalue)  GAMEMODE.StatusBarX = math.Clamp(tonumber(newvalue) or 0.01, 0, 1)      GAMEMODE.StatusHUD:InvalidateLayout() end)  GM.StatusBarY = math.Clamp(CreateClientConVar("zs_statusbary", 0.92, true, false):GetFloat(), 0, 1) cvars.AddChangeCallback("zs_statusbary", function(cvar, oldvalue, newvalue)  GAMEMODE.StatusBarY = math.Clamp(tonumber(newvalue) or 0.92, 0, 1)      GAMEMODE.StatusHUD:InvalidateLayout() end)  GM.StatusShortName = CreateClientConVar("zs_statusshort", "0", true, false):GetBool() cvars.AddChangeCallback("zs_statusshort", function(cvar, oldvalue, newvalue)     GAMEMODE.StatusShortName = tonumber(newvalue) == 1 end)  GM.DamageNumberScale = math.Clamp(CreateClientConVar("zs_dmgnumberscale", 1, true, false):GetFloat(), 0.5, 2) cvars.AddChangeCallback("zs_dmgnumberscale", function(cvar, oldvalue, newvalue)  GAMEMODE.DamageNumberScale = math.Clamp(tonumber(newvalue) or 1, 0.5, 2) end)  GM.DamageNumberSpeed = math.Clamp(CreateClientConVar("zs_dmgnumberspeed", 1, true, false):GetFloat(), 0, 1) cvars.AddChangeCallback("zs_dmgnumberspeed", function(cvar, oldvalue, newvalue)  GAMEMODE.DamageNumberSpeed = math.Clamp(tonumber(newvalue) or 1, 0, 1) end)  GM.DamageNumberLifetime = math.Clamp(CreateClientConVar("zs_dmgnumberlife", 1, true, false):GetFloat(), 0.2, 1.5) cvars.AddChangeCallback("zs_dmgnumberlife", function(cvar, oldvalue, newvalue)  GAMEMODE.DamageNumberLifetime = math.Clamp(tonumber(newvalue) or 1, 0.2, 1.5) end)  GM.FadeTimeMulti = math.Clamp(CreateClientConVar("zs_killfeedtime", 1, true, false):GetFloat(), 0.3, 1.5) cvars.AddChangeCallback("zs_killfeedtime", function(cvar, oldvalue, newvalue)  GAMEMODE.FadeTimeMulti = math.Clamp(tonumber(newvalue) or 1, 0.3, 1.5) end)  GM.CooldownRingDisplay = CreateClientConVar("zs_cooldownringdisplay", "0", true, false):GetBool() cvars.AddChangeCallback("zs_cooldownringdisplay", function(cvar, oldvalue, newvalue)     GAMEMODE.CooldownRingDisplay = tonumber(newvalue) == 1 end)  GM.CooldownRingDisplayFood = CreateClientConVar("zs_cooldownringdisplayfood", "0", true, false):GetBool() cvars.AddChangeCallback("zs_cooldownringdisplayfood", function(cvar, oldvalue, newvalue)     GAMEMODE.CooldownRingDisplayFood = tonumber(newvalue) == 1 end)  GM.CooldownRingDisplayReload = CreateClientConVar("zs_cooldownringdisplayreload", "0", true, false):GetBool() cvars.AddChangeCallback("zs_cooldownringdisplayreload", function(cvar, oldvalue, newvalue)     GAMEMODE.CooldownRingDisplayReload = tonumber(newvalue) == 1 end)  GM.CooldownRingValueDisplay = CreateClientConVar("zs_cooldownringvaluedisplay", "0", true, false):GetBool() cvars.AddChangeCallback("zs_cooldownringvaluedisplay", function(cvar, oldvalue, newvalue)     GAMEMODE.CooldownRingValueDisplay = tonumber(newvalue) == 1 end)  GM.CooldownRingSize = math.Clamp(CreateClientConVar("zs_cooldownringsize", 0.3, true, false):GetFloat(), 0, 1) cvars.AddChangeCallback("zs_cooldownringsize", function(cvar, oldvalue, newvalue)     GAMEMODE.CooldownRingSize = math.Clamp(tonumber(newvalue) or 1, 0, 1) end)  GM.CooldownRingSpacing = math.Clamp(CreateClientConVar("zs_cooldownringspacing", 0, true, false):GetFloat(), 0, 1) cvars.AddChangeCallback("zs_cooldownringspacing", function(cvar, oldvalue, newvalue)     GAMEMODE.CooldownRingSpacing = math.Clamp(tonumber(newvalue) or 1, 0, 1) end)  GM.DistanceDrawParticleDist = math.Clamp(CreateClientConVar("zs_particledistance", 2048, true, false):GetFloat(), 0, 2048) ^ 2 cvars.AddChangeCallback("zs_particledistance", function(cvar, oldvalue, newvalue)     GAMEMODE.DistanceDrawParticleDist = math.Clamp(tonumber(newvalue) or 2048, 0, 2048) ^ 2 end)  GM.DistanceDrawParticlePerc = math.Clamp(CreateClientConVar("zs_particleamount", 100, true, false):GetFloat(), 0, 100) cvars.AddChangeCallback("zs_particleamount", function(cvar, oldvalue, newvalue)     GAMEMODE.DistanceDrawParticlePerc = math.Clamp(tonumber(newvalue) or 1, 0, 100) end)  GM.CooldownRingPrimaryColor = Color(CreateClientConVar("zs_cooldownringprimary_colr", "240", true, false):GetInt(), CreateClientConVar("zs_cooldownringprimary_colg", "20", true, false):GetInt(), CreateClientConVar("zs_cooldownringprimary_colb", "20", true, false):GetInt(), CreateClientConVar("zs_cooldownringprimary_cola", "200", true, false):GetInt()) GM.CooldownRingSecondaryColor = Color(CreateClientConVar("zs_cooldownringsecondary_colr", "120", true, false):GetInt(), CreateClientConVar("zs_cooldownringsecondary_colg", "30", true, false):GetInt(), CreateClientConVar("zs_cooldownringsecondary_colb", "120", true, false):GetInt(), CreateClientConVar("zs_cooldownringsecondary_cola", "200", true, false):GetInt()) cvars.AddChangeCallback("zs_cooldownringprimary_colr", function(cvar, oldvalue, newvalue) GAMEMODE.CooldownRingPrimaryColor.r = tonumber(newvalue) or 255 end) cvars.AddChangeCallback("zs_cooldownringprimary_colg", function(cvar, oldvalue, newvalue) GAMEMODE.CooldownRingPrimaryColor.g = tonumber(newvalue) or 255 end) cvars.AddChangeCallback("zs_cooldownringprimary_colb", function(cvar, oldvalue, newvalue) GAMEMODE.CooldownRingPrimaryColor.b = tonumber(newvalue) or 255 end) cvars.AddChangeCallback("zs_cooldownringprimary_cola", function(cvar, oldvalue, newvalue) GAMEMODE.CooldownRingPrimaryColor.a = tonumber(newvalue) or 255 end) cvars.AddChangeCallback("zs_cooldownringsecondary_colr", function(cvar, oldvalue, newvalue) GAMEMODE.CooldownRingSecondaryColor.r = tonumber(newvalue) or 255 end) cvars.AddChangeCallback("zs_cooldownringsecondary_colg", function(cvar, oldvalue, newvalue) GAMEMODE.CooldownRingSecondaryColor.g = tonumber(newvalue) or 255 end) cvars.AddChangeCallback("zs_cooldownringsecondary_colb", function(cvar, oldvalue, newvalue) GAMEMODE.CooldownRingSecondaryColor.b = tonumber(newvalue) or 255 end) cvars.AddChangeCallback("zs_cooldownringsecondary_cola", function(cvar, oldvalue, newvalue) GAMEMODE.CooldownRingSecondaryColor.a = tonumber(newvalue) or 255 end)  GM.DamageNumberColor = Color(  CreateClientConVar("zs_damagenumber_colr", "220", true, false):GetInt(),  CreateClientConVar("zs_damagenumber_colg", "0", true, false):GetInt(),  CreateClientConVar("zs_damagenumber_colb", "0", true, false):GetInt() ) GM.DamageNumberHeadshotColor = Color(  CreateClientConVar("zs_damagenumber_h_colr", "240", true, false):GetInt(),  CreateClientConVar("zs_damagenumber_h_colg", "60", true, false):GetInt(),  CreateClientConVar("zs_damagenumber_h_colb", "0", true, false):GetInt() ) cvars.AddChangeCallback("zs_damagenumber_colr", function(cvar, oldvalue, newvalue) GAMEMODE.DamageNumberColor.r = tonumber(newvalue) or 255 end) cvars.AddChangeCallback("zs_damagenumber_colg", function(cvar, oldvalue, newvalue) GAMEMODE.DamageNumberColor.g = tonumber(newvalue) or 255 end) cvars.AddChangeCallback("zs_damagenumber_colb", function(cvar, oldvalue, newvalue) GAMEMODE.DamageNumberColor.b = tonumber(newvalue) or 255 end) cvars.AddChangeCallback("zs_damagenumber_h_colr", function(cvar, oldvalue, newvalue) GAMEMODE.DamageNumberHeadshotColor.r = tonumber(newvalue) or 255 end) cvars.AddChangeCallback("zs_damagenumber_h_colg", function(cvar, oldvalue, newvalue) GAMEMODE.DamageNumberHeadshotColor.g = tonumber(newvalue) or 255 end) cvars.AddChangeCallback("zs_damagenumber_h_colb", function(cvar, oldvalue, newvalue) GAMEMODE.DamageNumberHeadshotColor.b = tonumber(newvalue) or 255 end)  GM.InterfaceSize = math.Clamp(CreateClientConVar("zs_interfacesize", 1, true, false):GetFloat(), 0.7, 1.5) cvars.AddChangeCallback("zs_interfacesize", function(cvar, oldvalue, newvalue)  if not GAMEMODE.EmptyCachedFontHeights then return end     GAMEMODE.InterfaceSize = math.Clamp(tonumber(newvalue) or 1, 0.7, 1.5)   ModifyInterface() end)  GM.ShowLowProp = math.Clamp(CreateClientConVar("zs_showlowprophealth", 0.15, true, false):GetFloat(), 0, 1) cvars.AddChangeCallback("zs_showlowprophealth", function(cvar, oldvalue, newvalue)  GAMEMODE.ShowLowProp = math.Clamp(tonumber(newvalue) or 1, 0, 1) end)  GM.DisableAutoSwitch = CreateClientConVar("zs_disableautoswitch", "0", true, false):GetBool() cvars.AddChangeCallback("zs_disableautoswitch", function(cvar, oldvalue, newvalue)  GAMEMODE.DisableAutoSwitch = tonumber(newvalue) == 1 end)  GM.AlwaysQuickBuy = CreateClientConVar("zs_alwaysquickbuy", "0", true, false):GetBool() cvars.AddChangeCallback("zs_alwaysquickbuy", function(cvar, oldvalue, newvalue)  GAMEMODE.AlwaysQuickBuy = tonumber(newvalue) == 1 end)  GM.NoIronsights = CreateClientConVar("zs_noironsights", "0", true, false):GetBool() cvars.AddChangeCallback("zs_noironsights", function(cvar, oldvalue, newvalue)  GAMEMODE.NoIronsights = tonumber(newvalue) == 1 end)  GM.DisableWeaponModelLight = CreateClientConVar("zs_disableworldweaponlights", "0", true, false):GetBool() cvars.AddChangeCallback("zs_disableworldweaponlights", function(cvar, oldvalue, newvalue)  GAMEMODE.DisableWeaponModelLight = tonumber(newvalue) == 1 end)  GM.NoDrawHumanWeaponsAsZombie = CreateClientConVar("zs_nowepsaszombie", "0", true, false):GetBool() cvars.AddChangeCallback("zs_nowepsaszombie", function(cvar, oldvalue, newvalue)  GAMEMODE.NoDrawHumanWeaponsAsZombie = tonumber(newvalue) == 1 end)  GM.NoCentreViewModels = CreateClientConVar("zs_disablecentredmodels", "0", true, false):GetBool() cvars.AddChangeCallback("zs_disablecentredmodels", function(cvar, oldvalue, newvalue)  GAMEMODE.NoCentreViewModels = tonumber(newvalue) == 1 end)  GM.HideViewModels = CreateClientConVar("zs_hideviewmodels", "0", true, false):GetBool() cvars.AddChangeCallback("zs_hideviewmodels", function(cvar, oldvalue, newvalue)  GAMEMODE.HideViewModels = tonumber(newvalue) == 1 end)  GM.DisableMedicalAura = CreateClientConVar("zs_disablemedicalaura", "0", true, false):GetBool() cvars.AddChangeCallback("zs_disablemedicalaura", function(cvar, oldvalue, newvalue)  GAMEMODE.DisableMedicalAura = tonumber(newvalue) == 1 end)  GM.TransparencyRadiusMax = 2048 GM.TransparencyRadius = 0  GM.TransparencyRadius1p = math.Clamp(CreateClientConVar("zs_transparencyradius", 140, true, false):GetInt(), 0, GM.TransparencyRadiusMax) ^ 2 cvars.AddChangeCallback("zs_transparencyradius", function(cvar, oldvalue, newvalue)  GAMEMODE.TransparencyRadius1p = math.Clamp(tonumber(newvalue) or 0, 0, GAMEMODE.TransparencyRadiusMax) ^ 2 end)  GM.TransparencyRadius3p = math.Clamp(CreateClientConVar("zs_transparencyradius3p", 140, true, false):GetInt(), 0, GM.TransparencyRadiusMax) ^ 2 cvars.AddChangeCallback("zs_transparencyradius3p", function(cvar, oldvalue, newvalue)  GAMEMODE.TransparencyRadius3p = math.Clamp(tonumber(newvalue) or 0, 0, GAMEMODE.TransparencyRadiusMax) ^ 2 end)  GM.MessageBeaconShow = CreateClientConVar("zs_messagebeaconshow", "1", true, false):GetBool() cvars.AddChangeCallback("zs_messagebeaconshow", function(cvar, oldvalue, newvalue)  GAMEMODE.MessageBeaconShow = tonumber(newvalue) == 1 end)  GM.WeaponHUDMode = CreateClientConVar("zs_weaponhudmode", "0", true, false):GetInt() cvars.AddChangeCallback("zs_weaponhudmode", function(cvar, oldvalue, newvalue)  GAMEMODE.WeaponHUDMode = tonumber(newvalue) or 0 end)  GM.DroppedItemRendering = CreateClientConVar("zs_droppeditemrendertype", "0", true, false):GetInt() cvars.AddChangeCallback("zs_droppeditemrendertype", function(cvar, oldvalue, newvalue)  GAMEMODE.DroppedItemRendering = tonumber(newvalue) or 0 end)  GM.DroppedItemBeams = CreateClientConVar("zs_droppeditembeams", "1", true, false):GetBool() cvars.AddChangeCallback("zs_droppeditembeams", function(cvar, oldvalue, newvalue)  GAMEMODE.DroppedItemBeams = tonumber(newvalue) == 1 end)  GM.DisableBloodImpact = CreateClientConVar("zs_disablebloodimpacts", "0", true, false):GetBool() cvars.AddChangeCallback("zs_disablebloodimpacts", function(cvar, oldvalue, newvalue)  GAMEMODE.DisableBloodImpact = tonumber(newvalue) == 1 end)  GM.ZSFont = CreateClientConVar("zs_font", "0", true, false):GetInt() cvars.AddChangeCallback("zs_font", function(cvar, oldvalue, newvalue)  if not GAMEMODE.EmptyCachedFontHeights then return end     GAMEMODE.ZSFont = tonumber(newvalue) or 0   ModifyInterface(true) end)  GM.HealthTargetDisplay = CreateClientConVar("zs_healthtargetdisplay", "0", true, false):GetInt() cvars.AddChangeCallback("zs_healthtargetdisplay", function(cvar, oldvalue, newvalue)  GAMEMODE.HealthTargetDisplay = tonumber(newvalue) or 0 end)  GM.DrawDetailedSigilHealth = CreateClientConVar("zs_drawdetailsigilhealth", "1", true, false):GetBool() cvars.AddChangeCallback("zs_drawdetailsigilhealth", function(cvar, oldvalue, newvalue)  GAMEMODE.DrawDetailedSigilHealth = tonumber(newvalue) == 1 end)  GM.DrawPainFlash = CreateClientConVar("zs_drawpainflash", "1", true, false):GetBool() cvars.AddChangeCallback("zs_drawpainflash", function(cvar, oldvalue, newvalue)  GAMEMODE.DrawPainFlash = tonumber(newvalue) == 1 end)  GM.DisplayXPHUD = CreateClientConVar("zs_drawxp", "1", true, false):GetBool() cvars.AddChangeCallback("zs_drawxp", function(cvar, oldvalue, newvalue)  GAMEMODE.DisplayXPHUD = tonumber(newvalue) == 1  gamemode.Call("EvaluateFilmMode") end)  GM.FontEffects = CreateClientConVar("zs_fonteffects", "0", true, false):GetBool() cvars.AddChangeCallback("zs_fonteffects", function(cvar, oldvalue, newvalue)  GAMEMODE.FontEffects = tonumber(newvalue) == 1 end)  GM.SimpleForceFields = CreateClientConVar("zs_simplefields", "0", true, false):GetBool() cvars.AddChangeCallback("zs_simplefields", function(cvar, oldvalue, newvalue)  GAMEMODE.SimpleForceFields = tonumber(newvalue) == 1 end)  GM.HidePacks = CreateClientConVar("zs_hidepacks", "0", true, false):GetBool() cvars.AddChangeCallback("zs_hidepacks", function(cvar, oldvalue, newvalue)  GAMEMODE.HidePacks = tonumber(newvalue) == 1 end)  GM.AlwaysDrawFriend = CreateClientConVar("zs_showfriends", "0", true, false):GetBool() cvars.AddChangeCallback("zs_showfriends", function(cvar, oldvalue, newvalue)  GAMEMODE.AlwaysDrawFriend = tonumber(newvalue) == 1 end)  CreateConVar( "cl_playercolor", "0.24 0.34 0.41", { FCVAR_ARCHIVE, FCVAR_USERINFO, FCVAR_DONTRECORD }, "The value is a Vector - so between 0-1 - not between 0-255" ) CreateConVar( "cl_weaponcolor", "0.30 1.80 2.10", { FCVAR_ARCHIVE, FCVAR_USERINFO, FCVAR_DONTRECORD }, "The value is a Vector - so between 0-1 - not between 0-255" ) CreateConVar( "cl_playerskin", "0", { FCVAR_ARCHIVE, FCVAR_USERINFO, FCVAR_DONTRECORD }, "The skin to use, if the model has any" ) CreateConVar( "cl_playerbodygroups", "0", { FCVAR_ARCHIVE, FCVAR_USERINFO, FCVAR_DONTRECORD }, "The bodygroups to use, if the model has any" )  GM.BeatSetHuman = CreateClientConVar("zs_beatset_human", "default", true, false):GetString() cvars.AddChangeCallback("zs_beatset_human", function(cvar, oldvalue, newvalue)  newvalue = tostring(newvalue)  if newvalue == "default" then  GAMEMODE.BeatSetHuman = GAMEMODE.BeatSetHumanDefault  else  GAMEMODE.BeatSetHuman = newvalue  end end) if GM.BeatSetHuman == "default" then  GM.BeatSetHuman = GM.BeatSetHumanDefault end  GM.BeatSetZombie = CreateClientConVar("zs_beatset_zombie", "default", true, false):GetString() cvars.AddChangeCallback("zs_beatset_zombie", function(cvar, oldvalue, newvalue)  newvalue = tostring(newvalue)  if newvalue == "default" then  GAMEMODE.BeatSetZombie = GAMEMODE.BeatSetZombieDefault  else  GAMEMODE.BeatSetZombie = newvalue  end end) if GM.BeatSetZombie == "default" then  GM.BeatSetZombie = GM.BeatSetZombieDefault end  GM.RagdollFade = CreateClientConVar("zs_ragdollfade", "0", true, false):GetBool() cvars.AddChangeCallback("zs_ragdollfade", function(cvar, oldvalue, newvalue)  GAMEMODE.RagdollFade = tonumber(newvalue) == 1 end) GM.RagdollFadeTime = math.Clamp(CreateClientConVar("zs_ragdollfadetime", 1, true, false):GetFloat(), 0, 5) cvars.AddChangeCallback("zs_ragdollfadetime", function(cvar, oldvalue, newvalue)     GAMEMODE.RagdollFadeTime = math.Clamp(tonumber(newvalue) or 1, 0, 5) end) GM.RagdollFadeBosses = CreateClientConVar("zs_ragdollfadebosses", "0", true, false):GetBool() cvars.AddChangeCallback("zs_ragdollfadebosses", function(cvar, oldvalue, newvalue)  GAMEMODE.RagdollFadeBosses = tonumber(newvalue) == 1 end) GM.RagdollFadeHeadcrabs = CreateClientConVar("zs_ragdollfadeheadcrabs", "1", true, false):GetBool() cvars.AddChangeCallback("zs_ragdollfadeheadcrabs", function(cvar, oldvalue, newvalue)  GAMEMODE.RagdollFadeHeadcrabs = tonumber(newvalue) == 1 end) GM.RagdollFadeMin = math.Clamp(CreateClientConVar("zs_ragdollfademin", 0, true, false):GetFloat(), 0, 75) cvars.AddChangeCallback("zs_ragdollfademin", function(cvar, oldvalue, newvalue)     GAMEMODE.RagdollFadeMin = math.Clamp(tonumber(newvalue) or 0, 0, 75) end) GM.RagdollFadeDist = math.max(0, CreateClientConVar("zs_ragdollfadedist", 150, true, false):GetFloat()) cvars.AddChangeCallback("zs_ragdollfadedist", function(cvar, oldvalue, newvalue)     GAMEMODE.RagdollFadeDist = math.max(0, tonumber(newvalue) or 150) end) 