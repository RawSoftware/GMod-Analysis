  local math_min = math.min local curtime = CurTime  local TEAM_HUMAN = TEAM_HUMAN  local GM_MaxLegDamage = GM.MaxLegDamage  local M_Entity = FindMetaTable("Entity") local M_Player = FindMetaTable("Player") local M_CMoveData = FindMetaTable("CMoveData")  local E_GetTable = M_Entity.GetTable local E_GetDTFloat = M_Entity.GetDTFloat local E_GetDTBool = M_Entity.GetDTBool local E_GetStatus = SERVER and M_Entity.GetStatus or M_Player.GetStatus  local P_Team = M_Player.Team local P_CallZombieFunction1 = M_Player.CallZombieFunction1 local P_GetLegDamage = M_Player.GetLegDamage local P_GetBarricadeGhosting = M_Player.GetBarricadeGhosting local P_GetActiveWeapon = M_Player.GetActiveWeapon local M_SetVelocity = M_CMoveData.SetVelocity local M_GetVelocity = M_CMoveData.GetVelocity local M_SetMaxSpeed = M_CMoveData.SetMaxSpeed local M_GetMaxSpeed = M_CMoveData.GetMaxSpeed local M_SetMaxClientSpeed = M_CMoveData.SetMaxClientSpeed local M_GetMaxClientSpeed = M_CMoveData.GetMaxClientSpeed local M_GetForwardSpeed = M_CMoveData.GetForwardSpeed local M_GetSideSpeed = M_CMoveData.GetSideSpeed  function GM:SetupMove(pl, move, cmd) end  local fw, sd, pt, vel, mul local status = "buff_slipstream" function GM:Move(pl, move)     pt = E_GetTable(pl)      if P_Team(pl) == TEAM_HUMAN then         if P_GetBarricadeGhosting(pl) then             if E_GetDTFloat(pl, 19) < curtime() and not E_GetStatus(pl, status) then                 local wave_active_mul = not self:GetWaveActive() and pl:IsSkillActive(SKILL_BREAKOUT) and 2 or 1                 local rapid_transit = pl:IsSkillActive(SKILL_RAPIDTRANSIT) and 0.5 or 1                 local phase_speed = (36 * (pt.BarricadePhaseSpeedMul or 1)) * wave_active_mul * rapid_transit                  M_SetMaxClientSpeed(move, math_min(M_GetMaxClientSpeed(move), phase_speed))             end         elseif not pt.NoBWSpeedPenalty then             fw = M_GetForwardSpeed(move)             if fw < 0 then                 sd = M_GetSideSpeed(move)                 if sd < 0 then sd = -sd end                  if sd > fw then                     M_SetMaxClientSpeed(move, M_GetMaxClientSpeed(move) * (P_GetActiveWeapon(pl).IsMelee and 0.75 or 0.5))                 end             end         end     else         if pt.SpawnProtection then             M_SetMaxSpeed(move, M_GetMaxSpeed(move) * 1.28)             M_SetMaxClientSpeed(move, M_GetMaxClientSpeed(move) * 1.28)         end         if pt.TarSpeed and pt.TarSpeed > CurTime() then             M_SetMaxSpeed(move, M_GetMaxSpeed(move) * 1.20)             M_SetMaxClientSpeed(move, M_GetMaxClientSpeed(move) * 1.12)         end          if P_CallZombieFunction1(pl, "Move", move) then             pt.BotSpeed = M_GetMaxSpeed(move)             return         else             pt.BotSpeed = M_GetMaxSpeed(move)         end     end      legdmg = P_GetLegDamage(pl)     if legdmg > 0 then         M_SetMaxClientSpeed(move, M_GetMaxClientSpeed(move) * (1 - math_min(1, legdmg / GM_MaxLegDamage)))     end      if pt.PostMoveChecks and hook.Run("PostMove", pl, move) then         return true     end end  function GM:FinishMove(pl, move)     pt = E_GetTable(pl)            if pt.LandSlow then         pt.LandSlow = false          vel = M_GetVelocity(move)         mul = 1 - 0.25 * (pt.FallDamageSlowDownMul or 1)         vel.x = vel.x * mul         vel.y = vel.y * mul         M_SetVelocity(move, vel)     end end 