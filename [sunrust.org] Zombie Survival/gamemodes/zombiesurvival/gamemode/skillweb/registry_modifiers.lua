GM.SkillModifierFunctions = {} GM.SkillModifierMetadata  = {}  SKILLMOD_HEALTH = 1 SKILLMOD_SPEED = 2 SKILLMOD_WORTH = 3 SKILLMOD_FALLDAMAGE_THRESHOLD_MUL = 4 SKILLMOD_FALLDAMAGE_RECOVERY_MUL = 5 SKILLMOD_FALLDAMAGE_SLOWDOWN_MUL = 6 SKILLMOD_FOODRECOVERY_MUL = 7 SKILLMOD_FOODEATTIME_MUL = 8 SKILLMOD_JUMPPOWER_MUL = 9 SKILLMOD_RELOADSPEED_MUL = 11 SKILLMOD_DEPLOYSPEED_MUL = 12 SKILLMOD_UNARMED_DAMAGE_MUL = 13 SKILLMOD_UNARMED_SWING_DELAY_MUL = 14 SKILLMOD_MELEE_DAMAGE_MUL = 15 SKILLMOD_HAMMER_SWING_DELAY_MUL = 16 SKILLMOD_CONTROLLABLE_SPEED_MUL = 17 SKILLMOD_CONTROLLABLE_HANDLING_MUL = 18 SKILLMOD_CONTROLLABLE_HEALTH_MUL = 19 SKILLMOD_MANHACK_DAMAGE_MUL = 20 SKILLMOD_BARRICADE_PHASE_SPEED_MUL = 21 SKILLMOD_MEDKIT_COOLDOWN_MUL = 22 SKILLMOD_MEDKIT_EFFECTIVENESS_MUL = 23 SKILLMOD_REPAIRRATE_MUL = 24 SKILLMOD_TURRET_HEALTH_MUL = 25 SKILLMOD_TURRET_SCANSPEED_MUL = 26 SKILLMOD_TURRET_SCANANGLE_MUL = 27 SKILLMOD_BLOODARMOR = 28 SKILLMOD_MELEE_KNOCKBACK_MUL = 29 SKILLMOD_SELF_DAMAGE_MUL = 30 SKILLMOD_AIMSPREAD_MUL = 31 SKILLMOD_POINTS = 32 SKILLMOD_POINT_MULTIPLIER = 33 SKILLMOD_FALLDAMAGE_DAMAGE_MUL = 34 SKILLMOD_MANHACK_HEALTH_MUL = 35 SKILLMOD_DEPLOYABLE_HEALTH_MUL = 36 SKILLMOD_DEPLOYABLE_PACKTIME_MUL = 37 SKILLMOD_DRONE_SPEED_MUL = 38 SKILLMOD_DRONE_CARRYMASS_MUL = 39 SKILLMOD_MEDGUN_FIRE_DELAY_MUL = 40 SKILLMOD_RESUPPLY_DELAY_MUL = 41 SKILLMOD_FIELD_RANGE_MUL = 42 SKILLMOD_FIELD_DELAY_MUL = 43 SKILLMOD_DRONE_GUN_RANGE_MUL = 44 SKILLMOD_HEALING_RECEIVED = 45 SKILLMOD_RELOADSPEED_PISTOL_MUL = 46 SKILLMOD_RELOADSPEED_SMG_MUL = 47 SKILLMOD_RELOADSPEED_ASSAULT_MUL = 48 SKILLMOD_RELOADSPEED_SHELL_MUL = 49 SKILLMOD_RELOADSPEED_RIFLE_MUL = 50 SKILLMOD_RELOADSPEED_XBOW_MUL = 51 SKILLMOD_RELOADSPEED_PULSE_MUL = 52 SKILLMOD_RELOADSPEED_EXP_MUL = 53 SKILLMOD_MELEE_ATTACKER_DMG_REFLECT = 54 SKILLMOD_PULSE_WEAPON_SLOW_MUL = 55 SKILLMOD_MELEE_DAMAGE_TAKEN_MUL = 56 SKILLMOD_POISON_DAMAGE_TAKEN_MUL = 57 SKILLMOD_BLEED_DAMAGE_TAKEN_MUL = 58 SKILLMOD_MELEE_SWING_DELAY_MUL = 59 SKILLMOD_MELEE_DAMAGE_TO_BLOODARMOR_MUL = 60 SKILLMOD_MELEE_MOVEMENTSPEED_ON_KILL = 61 SKILLMOD_MELEE_POWERATTACK_MUL = 62 SKILLMOD_KNOCKDOWN_RECOVERY_MUL = 63 SKILLMOD_MELEE_RANGE_MUL = 64 SKILLMOD_SLOW_EFF_TAKEN_MUL = 65 SKILLMOD_EXP_DAMAGE_TAKEN_MUL = 66 SKILLMOD_FIRE_DAMAGE_TAKEN_MUL = 67 SKILLMOD_PROP_CARRY_CAPACITY_MUL = 68 SKILLMOD_PROP_THROW_STRENGTH_MUL = 69 SKILLMOD_PHYSICS_DAMAGE_TAKEN_MUL = 70 SKILLMOD_VISION_ALTER_DURATION_MUL = 71 SKILLMOD_DIMVISION_EFF_MUL = 72 SKILLMOD_PROP_CARRY_SLOW_MUL = 73 SKILLMOD_BLEED_SPEED_MUL = 74 SKILLMOD_MELEE_LEG_DAMAGE_ADD = 75 SKILLMOD_SIGIL_TELEPORT_MUL = 76 SKILLMOD_MELEE_ATTACKER_DMG_REFLECT_PERCENT = 77 SKILLMOD_POISON_SPEED_MUL = 78 SKILLMOD_PROJECTILE_DAMAGE_TAKEN_MUL = 79 SKILLMOD_EXP_DAMAGE_RADIUS = 80 SKILLMOD_MEDGUN_RELOAD_SPEED_MUL = 81 SKILLMOD_WEAPON_WEIGHT_SLOW_MUL = 82 SKILLMOD_FRIGHT_DURATION_MUL = 83 SKILLMOD_IRONSIGHT_EFF_MUL = 84 SKILLMOD_BLOODARMOR_DMG_REDUCTION = 85 SKILLMOD_BLOODARMOR_MUL = 86 SKILLMOD_BLOODARMOR_GAIN_MUL = 87 SKILLMOD_LOW_HEALTH_SLOW_MUL = 88 SKILLMOD_PROJ_SPEED = 89 SKILLMOD_SCRAP_START = 90 SKILLMOD_ENDWAVE_POINTS = 91 SKILLMOD_ARSENAL_DISCOUNT = 92 SKILLMOD_CLOUD_RADIUS = 93 SKILLMOD_CLOUD_TIME = 94 SKILLMOD_PROJECTILE_DAMAGE_MUL = 95 SKILLMOD_EXP_DAMAGE_MUL = 96 SKILLMOD_TURRET_RANGE_MUL = 97 SKILLMOD_AIM_SHAKE_MUL = 98 SKILLMOD_MEDDART_EFFECTIVENESS_MUL = 99 SKILLMOD_COLD_WEAPON_SLOW_MUL = 100 SKILLMOD_MELEE_RANGE_FLAT = 101 SKILLMOD_BLOCK_STAMINA_USAGE = 102 SKILLMOD_STAMINA_REGEN = 103 SKILLMOD_BASH_FORCE_MUL = 104 SKILLMOD_SCRAP_COST_DISCOUNT = 105 SKILLMOD_BLOCK_PASS_BLOOD_ARMOR = 106 SKILLMOD_DEBUFF_DURATION_MUL = 107 SKILLMOD_FROST_DURATION_MUL = 108 SKILLMOD_TURRET_DAMAGE_MUL = 109 SKILLMOD_AIM_SPREAD_SCALED_MUL = 110 SKILLMOD_RELOAD_SPEED_SCALED_MUL = 111 SKILLMOD_CLEANSE_RECOVERY = 112 SKILLMOD_CLEANSE_GAIN = 113 SKILLMOD_TRINKET_REGEN_DELAY = 114 SKILLMOD_MELEE_SHARP_SCALING_DAMAGE = 115 SKILLMOD_FULMINARIC_ARC = 116 SKILLMOD_RESONANCE_THRESHOLD = 117 SKILLMOD_PULSE_AMMO_PER_HAMMER_HIT = 118 SKILLMOD_FOOD_PROCESSING_MUL = 119 SKILLMOD_FIRE_DAMAGE_MUL = 120 SKILLMOD_FIRE_SPREAD_RADIUS = 121 SKILLMOD_ICE_SHATTER_CHANCE = 122 SKILLMOD_BLOCKBASH_DAMAGE = 123 SKILLMOD_STATUS_BOOST_ON_BLOCK_DURATION = 124 SKILLMOD_SELF_DAMAGE_TAKEN_WITH_MELEE = 125 SKILLMOD_AUTO_RELOAD_MUL = 126 SKILLMOD_AUTO_RELOAD_ALL_MUL = 127 SKILLMOD_ROUNDS_MOD_ICE = 128 SKILLMOD_ROUNDS_MOD_PULSE = 129 SKILLMOD_ROUNDS_MOD_FLAME = 130 SKILLMOD_ROUNDS_MOD_SOFT = 131 SKILLMOD_ROUNDS_MOD_ACID = 132 SKILLMOD_MAG_SIZE_FOUR_EIGHT_MUL = 133 SKILLMOD_MAG_SIZE_EIGHT_MUL = 134 SKILLMOD_RESUPPLY_CHANCE_TRINKET = 135 SKILLMOD_DEBUFF_SPREAD_RADIUS = 136 SKILLMOD_LOCUS_COEFFICIENT = 137 SKILLMOD_MAX_ROUNDS_T1 = 138 SKILLMOD_MAX_ROUNDS_T2 = 139 SKILLMOD_ROUND_EFF_MUL = 140 SKILLMOD_ATTACH_BOUNTY = 141 SKILLMOD_ATTACH_BURN = 142 SKILLMOD_ATTACH_ACID = 143 SKILLMOD_ATTACH_ICE = 144 SKILLMOD_ATTACH_PULSE = 145 SKILLMOD_AIM_ASSIST = 146 SKILLMOD_MAXIMUM_HP_TO_HEAL = 147 SKILLMOD_DAMAGE_MUL_ON_LOW_LIFE = 148 SKILLMOD_RESUPPLY_AMOUNT_MUL = 149 SKILLMOD_ALCHEMY_RESUPPLIES = 150 SKILLMOD_WEAPON_DAMAGE_MUL = 151 SKILLMOD_PHASE_PROGRESS_LOSS_MUL = 152 SKILLMOD_CLEANSES_FROM_FOOD = 153 SKILLMOD_CROUCH_LOCK_TIME = 154 SKILLMOD_SECONDARY_CHANCE = 155 SKILLMOD_BULLET_MOD_BORE = 156 SKILLMOD_BLADE_CHARGE_EFF = 157 SKILLMOD_SOFTEN_ON_BLOCK_DURATION = 158 SKILLMOD_MELEE_STAMINA_MUL = 159 SKILLMOD_DODGE_STAMINA_MUL = 160 SKILLMOD_DODGE_DURATION_MUL = 161 SKILLMOD_MELEE_ATTACK_SPEED = 162 SKILLMOD_REAPER_STACK_CHANCE_ON_KILL = 163 SKILLMOD_FERVOR_STACK_CHANCE_ON_KILL = 164 SKILLMOD_RENEGADE_STACK_CHANCE_ON_KILL = 165 SKILLMOD_MAXIMUM_REAPER_STACKS = 166 SKILLMOD_MAXIMUM_FERVOR_STACKS = 167 SKILLMOD_MAXIMUM_RENEGADE_STACKS = 168 SKILLMOD_NOVA_DAMAGE = 169 SKILLMOD_ATTACH_SAP = 170 SKILLMOD_MED_BUFF_EFFECTIVENESS = 171 SKILLMOD_MED_BUFF_DURATION = 172 SKILLMOD_ROUND_EFF_MUL_SPECTRUM = 173 SKILLMOD_UNARMED_FLAT_DAMAGE = 174 SKILLMOD_ACID_DAMAGE_MUL = 175 SKILLMOD_ACID_SPREAD_RADIUS = 176  GM.SkillDisplayTypes = {     Percent = function(amount)         local ispos = amount > 0 and "+" or ""          return ispos .. (amount * 100) .. "% "     end,     Absolute = function(amount)         local ispos = amount > 0 and "+" or ""          return ispos .. amount .. " "     end,     Singleton = function(amount)         return amount .. " "     end,     SingletonPercent = function(amount)         return ((amount + 1) * 100) .. "% "     end,     SingletonCoeffPercent = function(amount)         return (amount * 100) .. "% "     end }  local display_type_percent      = GM.SkillDisplayTypes.Percent local display_type_absolute     = GM.SkillDisplayTypes.Absolute local display_type_singleton    = GM.SkillDisplayTypes.Singleton local display_type_single_per   = GM.SkillDisplayTypes.SingletonPercent local display_type_single_pcer  = GM.SkillDisplayTypes.SingletonCoeffPercent  function GM:MkGenericMod(modifiername)     return function(pl, amount)         local clamped_value = math.Clamp(amount + 1.0, 0.0, 1000.0)         if not pl.SkillModValues then             pl.SkillModValues = {}         end          pl[modifiername]                = clamped_value         pl.SkillModValues[modifiername] = clamped_value     end end  function GM:SetSkillModifierMetadata(modid, func, name, display_type)     self.SkillModifierFunctions[modid]  = func     self.SkillModifierMetadata[modid]   = {         Name        = name,         DisplayType = display_type or display_type_percent     } end  GM:SetSkillModifierMetadata(SKILLMOD_SPEED, function(pl, amount)     pl.SkillSpeedAdd = amount end, "move speed", display_type_absolute)  GM:SetSkillModifierMetadata(SKILLMOD_MEDKIT_EFFECTIVENESS_MUL, GM:MkGenericMod("MedicHealMul"), "medical tool effectiveness") GM:SetSkillModifierMetadata(SKILLMOD_MEDKIT_COOLDOWN_MUL, GM:MkGenericMod("MedicCooldownMul"), "medical kit recovery time")  GM:SetSkillModifierMetadata(SKILLMOD_WORTH, function(pl, amount)     pl.ExtraStartingWorth = amount end)  GM:SetSkillModifierMetadata(SKILLMOD_FALLDAMAGE_THRESHOLD_MUL, GM:MkGenericMod("FallDamageThresholdMul"), "fall damage threshold") GM:SetSkillModifierMetadata(SKILLMOD_FALLDAMAGE_SLOWDOWN_MUL, GM:MkGenericMod("FallDamageSlowDownMul"), "fall damage slow down")  GM:SetSkillModifierMetadata(SKILLMOD_FOODEATTIME_MUL, function(pl, amount)     pl.FoodEatTimeMul = math.Clamp(amount + 1.0, 0, 1000.0) end, "time to eat food")  GM:SetSkillModifierMetadata(SKILLMOD_JUMPPOWER_MUL, function(pl, amount)     pl.JumpPowerMul = math.Clamp(amount + 1.0, 0.0, 10.0)      if SERVER then         pl:ResetJumpPower()     end end, "jump power")  GM:SetSkillModifierMetadata(SKILLMOD_DEPLOYSPEED_MUL, function(pl, amount)     pl.DeploySpeedMultiplier = math.Clamp(amount + 1.0, 0.05, 100.0)      for _, wep in pairs(pl:GetWeapons()) do         GAMEMODE:DoChangeDeploySpeed(wep)     end end, "weapon draw speed")  GM:SetSkillModifierMetadata(SKILLMOD_BLOODARMOR, function(pl, amount)     local oldarmor = pl:GetBloodArmor()     local oldcap = pl:GetBloodArmorMax() or 20     local new = 20 + math.Clamp(amount, -20, 1000)      if SERVER then         pl:SetBloodArmorMax(new)          if oldarmor > oldcap then             local overcap = oldarmor - oldcap             pl:SetBloodArmor(pl:GetBloodArmorMax() + overcap)         else             pl:SetBloodArmor(pl:GetBloodArmor() / oldcap * new)         end     end end, "maximum blood armor", display_type_absolute)  GM:SetSkillModifierMetadata(SKILLMOD_RELOADSPEED_MUL, function(pl, amount)     pl.ReloadSpeedMultiplier = math.Clamp(amount + 1.0, 0.05, 100.0) end, "reload speed")  GM:SetSkillModifierMetadata(SKILLMOD_RELOAD_SPEED_SCALED_MUL, function(pl, amount)     pl.ReloadSpeedScaledMul = math.Clamp(amount + 1.0, 0.05, 100.0) end, "additional maximum reload speed based on tier")  GM:SetSkillModifierMetadata(SKILLMOD_MELEE_DAMAGE_MUL, GM:MkGenericMod("MeleeDamageMultiplier"), "melee damage dealt") GM:SetSkillModifierMetadata(SKILLMOD_SELF_DAMAGE_MUL, GM:MkGenericMod("SelfDamageMul"), "self damage taken")  GM:SetSkillModifierMetadata(SKILLMOD_MELEE_KNOCKBACK_MUL, function(pl, amount)     pl.MeleeKnockbackMultiplier = math.Clamp(amount + 1.0, 0.0, 10000.0) end, "melee knockback")  GM:SetSkillModifierMetadata(SKILLMOD_UNARMED_DAMAGE_MUL, GM:MkGenericMod("UnarmedDamageMul"), "fist weapon damage dealt") GM:SetSkillModifierMetadata(SKILLMOD_UNARMED_SWING_DELAY_MUL, GM:MkGenericMod("UnarmedDelayMul"), "fist weapon attack delay")  GM:SetSkillModifierMetadata(SKILLMOD_BARRICADE_PHASE_SPEED_MUL, function(pl, amount)     pl.BarricadePhaseSpeedMul = math.Clamp(amount + 1.0, 0.05, 1000.0) end, "barricade phasing speed")  GM:SetSkillModifierMetadata(SKILLMOD_HAMMER_SWING_DELAY_MUL, function(pl, amount)     pl.HammerSwingDelayMul = math.Clamp(amount + 1.0, 0.01, 1.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_REPAIRRATE_MUL, function(pl, amount)     pl.RepairRateMul = math.Clamp(amount + 1.0, 0, 1000.0) end, "repair rate")  GM:SetSkillModifierMetadata(SKILLMOD_AIMSPREAD_MUL, function(pl, amount)     pl.AimSpreadMul = math.Clamp(amount + 1.0, 0, 1000.0) end, "weapon spread")  GM:SetSkillModifierMetadata(SKILLMOD_AIM_SPREAD_SCALED_MUL, function(pl, amount)     pl.AimSpreadTieredMul = math.Clamp(amount + 1.0, 0, 1000.0) end, "aim spread based on tier")  GM:SetSkillModifierMetadata(SKILLMOD_MEDGUN_FIRE_DELAY_MUL, function(pl, amount)     pl.MedgunFireDelayMul = math.Clamp(amount + 1.0, 0.0, 100.0) end, "medical dart weapon fire delay")  GM:SetSkillModifierMetadata(SKILLMOD_MEDGUN_RELOAD_SPEED_MUL, function(pl, amount)     pl.MedgunReloadSpeedMul = math.Clamp(amount + 1.0, 0.0, 100.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_DRONE_GUN_RANGE_MUL, function(pl, amount)     pl.DroneGunRangeMul = math.Clamp(amount + 1.0, 0.0, 100.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_HEALING_RECEIVED, function(pl, amount)     pl.HealingReceived = math.Clamp(amount + 1.0, 0.0, 100.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_RELOADSPEED_PISTOL_MUL, function(pl, amount)     pl.ReloadSpeedMultiplierPISTOL = math.Clamp(amount + 1.0, 0.0, 100.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_RELOADSPEED_SMG_MUL, function(pl, amount)     pl.ReloadSpeedMultiplierSMG1 = math.Clamp(amount + 1.0, 0.0, 100.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_RELOADSPEED_ASSAULT_MUL, function(pl, amount)     pl.ReloadSpeedMultiplierAR2 = math.Clamp(amount + 1.0, 0.0, 100.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_RELOADSPEED_SHELL_MUL, function(pl, amount)     pl.ReloadSpeedMultiplierBUCKSHOT = math.Clamp(amount + 1.0, 0.0, 100.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_RELOADSPEED_RIFLE_MUL, function(pl, amount)     pl.ReloadSpeedMultiplier357 = math.Clamp(amount + 1.0, 0.0, 100.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_RELOADSPEED_XBOW_MUL, function(pl, amount)     pl.ReloadSpeedMultiplierXBOWBOLT = math.Clamp(amount + 1.0, 0.0, 100.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_RELOADSPEED_PULSE_MUL, function(pl, amount)     pl.ReloadSpeedMultiplierPULSE = math.Clamp(amount + 1.0, 0.0, 100.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_RELOADSPEED_EXP_MUL, function(pl, amount)     pl.ReloadSpeedMultiplierIMPACTMINE = math.Clamp(amount + 1.0, 0.0, 100.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_MELEE_ATTACKER_DMG_REFLECT, function(pl, amount)     pl.BarbedArmor = math.Clamp(amount, 0.0, 1000.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_PULSE_WEAPON_SLOW_MUL, GM:MkGenericMod("PulseWeaponSlowMul"), "pulse slow power") GM:SetSkillModifierMetadata(SKILLMOD_MELEE_DAMAGE_TAKEN_MUL, GM:MkGenericMod("MeleeDamageTakenMul"), "melee damage taken") GM:SetSkillModifierMetadata(SKILLMOD_POISON_DAMAGE_TAKEN_MUL, GM:MkGenericMod("PoisonDamageTakenMul"), "poison damage taken") GM:SetSkillModifierMetadata(SKILLMOD_BLEED_DAMAGE_TAKEN_MUL, GM:MkGenericMod("BleedDamageTakenMul"), "bleed damage taken")  GM:SetSkillModifierMetadata(SKILLMOD_MELEE_SWING_DELAY_MUL, function(pl, amount)     pl.MeleeSwingDelayMul = math.Clamp(amount + 1.0, 0, 1000.0) end, "melee impact delay")  GM:SetSkillModifierMetadata(SKILLMOD_MELEE_DAMAGE_TO_BLOODARMOR_MUL, function(pl, amount)     pl.MeleeDamageToBloodArmorMul = math.Clamp(amount, 0, 1000.0) end, "melee damage converted to blood armor")  GM:SetSkillModifierMetadata(SKILLMOD_MELEE_MOVEMENTSPEED_ON_KILL, function(pl, amount)     pl.MeleeMovementSpeedOnKill = math.Clamp(amount, -15, 1000.0) end, "bonus movement speed on melee kill", display_type_absolute)  GM:SetSkillModifierMetadata(SKILLMOD_MELEE_POWERATTACK_MUL, function(pl, amount)     pl.MeleePowerAttackMul = math.Clamp(amount + 1.0, 0, 1000.0) end, "potential extra melee damage based on consecutive attacks")  GM:SetSkillModifierMetadata(SKILLMOD_MELEE_SHARP_SCALING_DAMAGE, function(pl, amount)     pl.MeleeScalingDamageMul = math.Clamp(amount, 0, 1000.0) end, "maximum extra damage for melee weapons based on tier")  GM:SetSkillModifierMetadata(SKILLMOD_KNOCKDOWN_RECOVERY_MUL, function(pl, amount)     pl.KnockdownRecoveryMul = math.Clamp(amount + 1.0, 0, 1000.0) end, "duration of knockdowns on you")  GM:SetSkillModifierMetadata(SKILLMOD_MELEE_RANGE_MUL, function(pl, amount)     pl.MeleeRangeMul = math.Clamp(amount + 1.0, 0, 1000.0) end, "melee range")  GM:SetSkillModifierMetadata(SKILLMOD_SLOW_EFF_TAKEN_MUL, function(pl, amount)     pl.SlowEffTakenMul = math.Clamp(amount + 1.0, 0, 1000.0) end, "effectiveness of slows on you")  GM:SetSkillModifierMetadata(SKILLMOD_EXP_DAMAGE_TAKEN_MUL, GM:MkGenericMod("ExplosiveDamageTakenMul"), "explosive damage taken") GM:SetSkillModifierMetadata(SKILLMOD_FIRE_DAMAGE_TAKEN_MUL, GM:MkGenericMod("FireDamageTakenMul"), "fire damage taken") GM:SetSkillModifierMetadata(SKILLMOD_PROP_CARRY_CAPACITY_MUL, GM:MkGenericMod("PropCarryCapacityMul")) GM:SetSkillModifierMetadata(SKILLMOD_PROP_THROW_STRENGTH_MUL, GM:MkGenericMod("ObjectThrowStrengthMul")) GM:SetSkillModifierMetadata(SKILLMOD_PHYSICS_DAMAGE_TAKEN_MUL, GM:MkGenericMod("PhysicsDamageTakenMul"), "physics damage taken") GM:SetSkillModifierMetadata(SKILLMOD_VISION_ALTER_DURATION_MUL, GM:MkGenericMod("VisionAlterDurationMul")) GM:SetSkillModifierMetadata(SKILLMOD_DIMVISION_EFF_MUL, GM:MkGenericMod("DimVisionEffMul")) GM:SetSkillModifierMetadata(SKILLMOD_PROP_CARRY_SLOW_MUL, GM:MkGenericMod("PropCarrySlowMul"), "slowdown from carrying props")  GM:SetSkillModifierMetadata(SKILLMOD_BLEED_SPEED_MUL, function(pl, amount)     pl.BleedSpeedMul = math.Clamp(amount + 1.0, 0.1, 1000.0) end, "speed of bleed damage taken")  GM:SetSkillModifierMetadata(SKILLMOD_MELEE_LEG_DAMAGE_ADD, function(pl, amount)     pl.MeleeLegDamageAdd = math.Clamp(amount, 0, 1000.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_SIGIL_TELEPORT_MUL, function(pl, amount)     pl.SigilTeleportTimeMul = math.Clamp(amount + 1.0, 0.1, 1000.0) end, "sigil teleportation time")  GM:SetSkillModifierMetadata(SKILLMOD_MELEE_ATTACKER_DMG_REFLECT_PERCENT, function(pl, amount)     pl.BarbedArmorPercent = math.Clamp(amount, 0, 1000.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_POISON_SPEED_MUL, function(pl, amount)     pl.PoisonSpeedMul = math.Clamp(amount + 1.0, 0.1, 1000.0) end, "poison damage over time speed")  GM:SetSkillModifierMetadata(SKILLMOD_MELEE_RANGE_FLAT, function(pl, amount)     pl.MeleeRangeFlat = amount end, "melee range", display_type_absolute)  GM:SetSkillModifierMetadata(SKILLMOD_PROJECTILE_DAMAGE_TAKEN_MUL, GM:MkGenericMod("ProjDamageTakenMul"), "projectile damage taken") GM:SetSkillModifierMetadata(SKILLMOD_EXP_DAMAGE_RADIUS, GM:MkGenericMod("ExpDamageRadiusMul"), "explosive damage radius") GM:SetSkillModifierMetadata(SKILLMOD_WEAPON_WEIGHT_SLOW_MUL, GM:MkGenericMod("WeaponWeightSlowMul"), "slow down from carrying heavy weapons") GM:SetSkillModifierMetadata(SKILLMOD_FRIGHT_DURATION_MUL, GM:MkGenericMod("FrightDurationMul")) GM:SetSkillModifierMetadata(SKILLMOD_IRONSIGHT_EFF_MUL, GM:MkGenericMod("IronsightEffMul")) GM:SetSkillModifierMetadata(SKILLMOD_MEDDART_EFFECTIVENESS_MUL, GM:MkGenericMod("MedDartEffMul")) GM:SetSkillModifierMetadata(SKILLMOD_COLD_WEAPON_SLOW_MUL, GM:MkGenericMod("ColdWeaponSlowMul"), "cold slow power") GM:SetSkillModifierMetadata(SKILLMOD_DEBUFF_DURATION_MUL, GM:MkGenericMod("DebuffDurationMul"), "duration of damage reduction, damage weakness and acid") GM:SetSkillModifierMetadata(SKILLMOD_FROST_DURATION_MUL, GM:MkGenericMod("FrostDurationMul"))  GM:SetSkillModifierMetadata(SKILLMOD_BLOODARMOR_DMG_REDUCTION, function(pl, amount)     pl.BloodArmorDamageReductionAdd = amount end)  GM:SetSkillModifierMetadata(SKILLMOD_BLOODARMOR_MUL, function(pl, amount)     local mul = math.Clamp(amount + 1.0, 0.0, 1000.0)      pl.MaxBloodArmorMul = mul      local oldarmor = pl:GetBloodArmor()     local oldcap = pl:GetBloodArmorMax() or 20     local new = pl:GetBloodArmorMax() * mul      if SERVER then         pl:SetBloodArmorMax(new)          if oldarmor > oldcap then             local overcap = oldarmor - oldcap             pl:SetBloodArmor(pl:GetBloodArmorMax() + overcap)         else             pl:SetBloodArmor(pl:GetBloodArmor() / oldcap * new)         end     end end)  GM:SetSkillModifierMetadata(SKILLMOD_BLOODARMOR_GAIN_MUL, GM:MkGenericMod("BloodarmorGainMul"), "blood armor generated") GM:SetSkillModifierMetadata(SKILLMOD_LOW_HEALTH_SLOW_MUL, GM:MkGenericMod("LowHealthSlowMul"), "speed loss from being low on health") GM:SetSkillModifierMetadata(SKILLMOD_PROJ_SPEED, GM:MkGenericMod("ProjectileSpeedMul"), "projectile speed")  GM:SetSkillModifierMetadata(SKILLMOD_ENDWAVE_POINTS, function(pl,amount)     pl.EndWavePointsExtra = math.Clamp(amount, 0.0, 1000.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_STAMINA_REGEN, GM:MkGenericMod("StaminaRegeneration"), "stamina regeneration")  GM:SetSkillModifierMetadata(SKILLMOD_ARSENAL_DISCOUNT, GM:MkGenericMod("ArsenalDiscount")) GM:SetSkillModifierMetadata(SKILLMOD_SCRAP_COST_DISCOUNT, GM:MkGenericMod("ScrapDiscount")) GM:SetSkillModifierMetadata(SKILLMOD_CLOUD_RADIUS, GM:MkGenericMod("CloudRadius"), "cloud, buff bomb and flask radius") GM:SetSkillModifierMetadata(SKILLMOD_CLOUD_TIME, GM:MkGenericMod("CloudTime"), "cloud, buff bomb and flask duration") GM:SetSkillModifierMetadata(SKILLMOD_EXP_DAMAGE_MUL, GM:MkGenericMod("ExplosiveDamageMul"), "explosive damage dealt") GM:SetSkillModifierMetadata(SKILLMOD_PROJECTILE_DAMAGE_MUL, GM:MkGenericMod("ProjectileDamageMul"), "projectile damage dealt") GM:SetSkillModifierMetadata(SKILLMOD_DAMAGE_MUL_ON_LOW_LIFE, GM:MkGenericMod("DamageOnLowLifeMul"), "melee damage dealt when below 33% HP") GM:SetSkillModifierMetadata(SKILLMOD_MELEE_ATTACK_SPEED, GM:MkGenericMod("MeleeAttackSpeedMul"), "melee attack duration") GM:SetSkillModifierMetadata(SKILLMOD_TURRET_RANGE_MUL, GM:MkGenericMod("TurretRangeMul")) GM:SetSkillModifierMetadata(SKILLMOD_AIM_SHAKE_MUL, GM:MkGenericMod("AimShakeMul"), "aim shake") GM:SetSkillModifierMetadata(SKILLMOD_BLOCK_STAMINA_USAGE, GM:MkGenericMod("BlockStaminaUsageMul"), "stamina used while blocking") GM:SetSkillModifierMetadata(SKILLMOD_MELEE_STAMINA_MUL, GM:MkGenericMod("MeleeStaminaMul"), "stamina used while swinging a melee weapon") GM:SetSkillModifierMetadata(SKILLMOD_DODGE_STAMINA_MUL, GM:MkGenericMod("DodgeStaminaMul"), "stamina used while dodging") GM:SetSkillModifierMetadata(SKILLMOD_DODGE_DURATION_MUL, GM:MkGenericMod("DodgeDurationMul"), "time in dodge") GM:SetSkillModifierMetadata(SKILLMOD_BASH_FORCE_MUL, GM:MkGenericMod("BashForceMul")) GM:SetSkillModifierMetadata(SKILLMOD_BLOCK_PASS_BLOOD_ARMOR, function(pl,amount)     pl.BlockPassBloodArmorMul = math.Clamp(amount, 0.0, 1.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_HEALTH, function(pl, amount)     if SERVER then         local current = pl:GetMaxHealth()         local new = 100 + math.Clamp(amount, -99, 1000)         pl:SetMaxHealth(new)         pl:SetHealth(math.max(1, pl:Health() / current * new))     end end, "maximum health", display_type_absolute)  GM:SetSkillModifierMetadata(SKILLMOD_POINTS, function(pl, amount)  if SERVER and not pl.AdjustedStartPointsSkill then  pl:SetPoints(pl:GetPoints() + amount)  pl.AdjustedStartPointsSkill = true  end      pl.SkillExtraPoints = amount end)  GM:SetSkillModifierMetadata(SKILLMOD_SCRAP_START, function(pl, amount)  if SERVER and not pl.AdjustedStartScrapSkill then  pl:GiveAmmo(amount, "scrap")  pl.AdjustedStartScrapSkill = true  end      pl.SkillExtraScrap = amount end)  GM:SetSkillModifierMetadata(SKILLMOD_FOODRECOVERY_MUL, GM:MkGenericMod("FoodRecoveryMul"), "healing from food") GM:SetSkillModifierMetadata(SKILLMOD_FALLDAMAGE_DAMAGE_MUL, GM:MkGenericMod("FallDamageDamageMul"), "falling damage taken") GM:SetSkillModifierMetadata(SKILLMOD_FALLDAMAGE_RECOVERY_MUL, GM:MkGenericMod("FallDamageRecoveryMul")) GM:SetSkillModifierMetadata(SKILLMOD_POINT_MULTIPLIER, GM:MkGenericMod("PointIncomeMul")) GM:SetSkillModifierMetadata(SKILLMOD_MED_BUFF_EFFECTIVENESS, GM:MkGenericMod("MedBuffEffectMul"), "medical buff effectiveness") GM:SetSkillModifierMetadata(SKILLMOD_MED_BUFF_DURATION, GM:MkGenericMod("MedBuffDurationMul"), "medical buff duration") GM:SetSkillModifierMetadata(SKILLMOD_MAXIMUM_HP_TO_HEAL, function(pl, amount)     pl.MaximumHPToHealMul = math.Clamp(amount, 0, 1) end, "of maximum HP cannot be healed", display_type_single_pcer)  GM:SetSkillModifierMetadata(SKILLMOD_MAG_SIZE_EIGHT_MUL, GM:MkGenericMod("MagSizeEightMul"), "increased clip size of weapons with 8 or more clip size") GM:SetSkillModifierMetadata(SKILLMOD_MAG_SIZE_FOUR_EIGHT_MUL, GM:MkGenericMod("MagSizeFourEightMul"), "increased clip size of weapons with 4 to 7 clip size")  GM:SetSkillModifierMetadata(SKILLMOD_CONTROLLABLE_SPEED_MUL, function(pl, amount)  pl.ControllableSpeedMul = math.Clamp(amount + 1.0, 0.01, 1000.0) end, "controllable speed")  GM:SetSkillModifierMetadata(SKILLMOD_CONTROLLABLE_HANDLING_MUL, function(pl, amount)  pl.ControllableHandlingMul = math.Clamp(amount + 1.0, 0.01, 1000.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_CONTROLLABLE_HEALTH_MUL, function(pl, amount)  pl.ControllableHealthMul = math.Clamp(amount + 1.0, 0.01, 10.0) end, "controllable health")  GM:SetSkillModifierMetadata(SKILLMOD_MANHACK_HEALTH_MUL, function(pl, amount)  pl.ManhackHealthMul = math.Clamp(amount + 1.0, 0.01, 10.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_MANHACK_DAMAGE_MUL, function(pl, amount)  pl.ManhackDamageMul = math.Clamp(amount + 1.0, 0.0, 10.0) end, "manhack blade damage")  GM:SetSkillModifierMetadata(SKILLMOD_DRONE_SPEED_MUL, function(pl, amount)  pl.DroneSpeedMul = math.Clamp(amount + 1.0, 0.01, 1000.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_DRONE_CARRYMASS_MUL, function(pl, amount)  pl.DroneCarryMassMul = math.Clamp(amount + 1.0, 0.01, 1000.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_TURRET_HEALTH_MUL, function(pl, amount)  pl.TurretHealthMul = math.Clamp(amount + 1.0, 0.01, 10.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_TURRET_SCANSPEED_MUL, function(pl, amount)  pl.TurretScanSpeedMul = math.Clamp(amount + 1.0, 0, 10.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_TURRET_SCANANGLE_MUL, function(pl, amount)  pl.TurretScanAngleMul = math.Clamp(amount + 1.0, 0, 2.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_TURRET_DAMAGE_MUL, GM:MkGenericMod("TurretDamageMul"))  GM:SetSkillModifierMetadata(SKILLMOD_DEPLOYABLE_HEALTH_MUL, function(pl, amount)  pl.DeployableHealthMul = math.Clamp(amount + 1.0, 0.01, 10.0) end)  GM:SetSkillModifierMetadata(SKILLMOD_DEPLOYABLE_PACKTIME_MUL, function(pl, amount)  pl.DeployablePackTimeMul = math.Clamp(amount + 1.0, 0.01, 10.0) end, "deployable packing time")  GM:SetSkillModifierMetadata(SKILLMOD_RESUPPLY_DELAY_MUL, function(pl, amount)  pl.ResupplyDelayMul = math.Clamp(amount + 1.0, 0.01, 10.0) end, "resupply delay")  GM:SetSkillModifierMetadata(SKILLMOD_RESUPPLY_AMOUNT_MUL, function(pl, amount)  pl.ResupplyAmountMul = math.Clamp(amount + 1.0, 0.01, 10.0) end, "resupply amount (rounded up)")  GM:SetSkillModifierMetadata(SKILLMOD_FIELD_RANGE_MUL, function(pl, amount)  pl.FieldRangeMul = math.Clamp(amount + 1.0, 0.01, 10.0) end, "zapper and repair field range")  GM:SetSkillModifierMetadata(SKILLMOD_FIELD_DELAY_MUL, function(pl, amount)  pl.FieldDelayMul = math.Clamp(amount + 1.0, 0.01, 10.0) end, "zapper and repair field delay")  GM:SetSkillModifierMetadata(SKILLMOD_CLEANSE_RECOVERY, function(pl, amount)  pl.CleanseRecovery = math.Clamp(amount, 0, 1000) end, "second status cleansing cooldown", display_type_singleton)  GM:SetSkillModifierMetadata(SKILLMOD_NOVA_DAMAGE, function(pl, amount)  pl.NovaDamage = math.Clamp(amount, 0, 1000) end, "nova damage", display_type_singleton)  GM:SetSkillModifierMetadata(SKILLMOD_CLEANSE_GAIN, function(pl, amount)  pl.CleanseGain = math.Clamp(amount, 0, 1000) end, "chemical ammo gained from cleansing statuses", display_type_singleton)  GM:SetSkillModifierMetadata(SKILLMOD_TRINKET_REGEN_DELAY, function(pl, amount)  pl.TrinketHealthRegenDelay = math.Clamp(amount, 0, 1000) end, "second delay between regenerating 1 health", display_type_singleton)  GM:SetSkillModifierMetadata(SKILLMOD_RESONANCE_THRESHOLD, function(pl, amount)  pl.ResonanceThreshold = math.Clamp(amount, 0, 1000) end, "pulse slow required to trigger resonance", display_type_singleton)  GM:SetSkillModifierMetadata(SKILLMOD_FULMINARIC_ARC, function(pl, amount)  pl.FulminaricArc = math.Clamp(amount, 0, 1000) end, "damage arc after dealing enough pulse slow to zombies", display_type_absolute)  GM:SetSkillModifierMetadata(SKILLMOD_REAPER_STACK_CHANCE_ON_KILL, function(pl, amount)  pl.ReaperKillStackChance = math.Clamp(amount, 0, 1) end, "chance for reaper stack on kill", display_type_percent)  GM:SetSkillModifierMetadata(SKILLMOD_FERVOR_STACK_CHANCE_ON_KILL, function(pl, amount)  pl.FervorKillStackChance = math.Clamp(amount, 0, 1) end, "chance for fervor stack on kill", display_type_percent)  GM:SetSkillModifierMetadata(SKILLMOD_RENEGADE_STACK_CHANCE_ON_KILL, function(pl, amount)  pl.RenegadeKillStackChance = math.Clamp(amount, 0, 1) end, "chance for renegade stack on kill", display_type_percent)  GM:SetSkillModifierMetadata(SKILLMOD_MAXIMUM_REAPER_STACKS, function(pl, amount)  pl.MaxExtraReaperStacks = math.Clamp(amount, 0, 1000) end, "maximum reaper stacks", display_type_absolute)  GM:SetSkillModifierMetadata(SKILLMOD_MAXIMUM_FERVOR_STACKS, function(pl, amount)  pl.MaxExtraFervorStacks = math.Clamp(amount, 0, 1000) end, "maximum fervor stacks", display_type_absolute)  GM:SetSkillModifierMetadata(SKILLMOD_MAXIMUM_RENEGADE_STACKS, function(pl, amount)  pl.MaxExtraRenegadeStacks = math.Clamp(amount, 0, 1000) end, "maximum renegade stacks", display_type_absolute)  GM:SetSkillModifierMetadata(SKILLMOD_PULSE_AMMO_PER_HAMMER_HIT, function(pl, amount)  pl.PulsePerHammerHitChance = math.Clamp(amount, 0, 1) end, "chance to gain pulse ammo on prop repair with hammer", display_type_single_pcer)  GM:SetSkillModifierMetadata(SKILLMOD_FOOD_PROCESSING_MUL, function(pl, amount)  pl.FoodProcessMul = math.Clamp(amount + 1.0, 0.01, 10.0) end, "food processing effectiveness")  GM:SetSkillModifierMetadata(SKILLMOD_FIRE_DAMAGE_MUL, GM:MkGenericMod("FireDamageMul"), "fire damage dealt") GM:SetSkillModifierMetadata(SKILLMOD_ACID_DAMAGE_MUL, GM:MkGenericMod("AcidDamageMul"), "acid buildup")  GM:SetSkillModifierMetadata(SKILLMOD_FIRE_SPREAD_RADIUS, function(pl, amount)  pl.FireSpreadRadius = math.Clamp(amount, 0, 1000) end, "fire spread radius", display_type_singleton)  GM:SetSkillModifierMetadata(SKILLMOD_ACID_SPREAD_RADIUS, function(pl, amount)  pl.AcidSpreadRadius = math.Clamp(amount, 0, 1000) end, "acid spread radius", display_type_singleton)  GM:SetSkillModifierMetadata(SKILLMOD_DEBUFF_SPREAD_RADIUS, function(pl, amount)  pl.DebuffSpreadRadius = math.Clamp(amount, 0, 1000) end, "debuff spread radius", display_type_singleton)  GM:SetSkillModifierMetadata(SKILLMOD_ICE_SHATTER_CHANCE, function(pl, amount)  pl.IceShatterChance = amount end, "ice shatter chance multiplier", display_type_single_pcer)  GM:SetSkillModifierMetadata(SKILLMOD_BLOCKBASH_DAMAGE, function(pl, amount)  pl.BlockBashDamage = math.Clamp(amount, 0, 1000) end, "damage on bash with shield", display_type_singleton)  GM:SetSkillModifierMetadata(SKILLMOD_STATUS_BOOST_ON_BLOCK_DURATION, function(pl, amount)  pl.DamageBonusBlock = math.Clamp(amount, 0, 1000) end, "seconds of agility boost on blocked zombies on non-shields", display_type_singleton)  GM:SetSkillModifierMetadata(SKILLMOD_SOFTEN_ON_BLOCK_DURATION, function(pl, amount)  pl.SoftenBonusBlock = math.Clamp(amount, 0, 1000) end, "seconds of soften applied on blocked zombies with shields", display_type_singleton)  GM:SetSkillModifierMetadata(SKILLMOD_AUTO_RELOAD_MUL, function(pl, amount)  pl.AutoReloadSingleTime = math.Clamp(amount, 0, 1000) end, "seconds until tier 5 or lower weapon switched away from is reloaded", display_type_singleton)  GM:SetSkillModifierMetadata(SKILLMOD_AUTO_RELOAD_ALL_MUL, function(pl, amount)  pl.AutoReloadAllTime = math.Clamp(amount, 0, 1000) end, "seconds until all tier 5 or lower weapons not held are reloaded", display_type_singleton)  GM:SetSkillModifierMetadata(SKILLMOD_SELF_DAMAGE_TAKEN_WITH_MELEE, GM:MkGenericMod("SelfDamageWithMelee"), "self damage taken while using a melee weapon")  GM:SetSkillModifierMetadata(SKILLMOD_ROUNDS_MOD_ICE, GM:MkGenericMod("IceRoundsMul"), "effectiveness of ice rounds", display_type_single_per) GM:SetSkillModifierMetadata(SKILLMOD_ROUNDS_MOD_PULSE, GM:MkGenericMod("PulseRoundsMul"), "effectiveness of pulse rounds", display_type_single_per) GM:SetSkillModifierMetadata(SKILLMOD_ROUNDS_MOD_FLAME, GM:MkGenericMod("FlameRoundsMul"), "effectiveness of flame rounds", display_type_single_per) GM:SetSkillModifierMetadata(SKILLMOD_ROUNDS_MOD_SOFT, GM:MkGenericMod("SoftRoundsMul"), "effectiveness of softening rounds", display_type_single_per) GM:SetSkillModifierMetadata(SKILLMOD_ROUNDS_MOD_ACID, GM:MkGenericMod("AcidRoundsMul"), "effectiveness of acid rounds", display_type_single_per)  GM:SetSkillModifierMetadata(SKILLMOD_BULLET_MOD_BORE, function(pl, amount)  pl.BulletModBore = amount end, "damage multiplier on borer bullets that pierce", display_type_single_pcer)  GM:SetSkillModifierMetadata(SKILLMOD_BLADE_CHARGE_EFF, function(pl, amount)  pl.BladeChargeEff = amount end, "damage multiplier on blade charger blades", display_type_single_pcer)  GM:SetSkillModifierMetadata(SKILLMOD_ATTACH_BOUNTY, GM:MkGenericMod("BountyAttachMul"), "effectiveness of bounty attachment", display_type_single_per) GM:SetSkillModifierMetadata(SKILLMOD_ATTACH_BURN, GM:MkGenericMod("FlameAttachMul"), "effectiveness of burning attachment", display_type_single_per) GM:SetSkillModifierMetadata(SKILLMOD_ATTACH_ICE, GM:MkGenericMod("IceAttachMul"), "effectiveness of frost attachment", display_type_single_per) GM:SetSkillModifierMetadata(SKILLMOD_ATTACH_ACID, GM:MkGenericMod("AcidAttachMul"), "effectiveness of acid attachment", display_type_single_per) GM:SetSkillModifierMetadata(SKILLMOD_ATTACH_PULSE, GM:MkGenericMod("PulseAttachMul"), "effectiveness of electro attachment", display_type_single_per) GM:SetSkillModifierMetadata(SKILLMOD_ATTACH_SAP, GM:MkGenericMod("SapAttachMul"), "effectiveness of sap attachment", display_type_single_per)  GM:SetSkillModifierMetadata(SKILLMOD_ROUND_EFF_MUL, GM:MkGenericMod("RoundEffMul"), "effectiveness of rounds and attachment trinkets", display_type_single_per) GM:SetSkillModifierMetadata(SKILLMOD_ROUND_EFF_MUL_SPECTRUM, GM:MkGenericMod("RoundEffMulSpectrum"), "power multiplier of rounds and attachment trinkets", display_type_single_per)  GM:SetSkillModifierMetadata(SKILLMOD_LOCUS_COEFFICIENT, function(pl, amount)  pl.ElementalLocusCoefficient = math.Clamp(amount, 0, 1) end, "reduced tier based attachment and rounds trinket effectiveness penalties", display_type_single_pcer)  GM:SetSkillModifierMetadata(SKILLMOD_RESUPPLY_CHANCE_TRINKET, function(pl, amount)  pl.TrinketChance = math.Clamp(amount, 0, 1) end, "chance to gain a trinket from resupplying", display_type_single_pcer)  GM:SetSkillModifierMetadata(SKILLMOD_SECONDARY_CHANCE, function(pl, amount)  pl.SecondaryEffectChance = math.Clamp(amount, 0, 1) end, "chance for rounds to work on secondary effects", display_type_single_pcer)  GM:SetSkillModifierMetadata(SKILLMOD_MAX_ROUNDS_T1, function(pl, amount)  pl.MaxRoundsTierOne = math.Clamp(amount, 0, 1000) end, "maximum number of round/attach trinkets for tier one weapons", display_type_absolute)  GM:SetSkillModifierMetadata(SKILLMOD_MAX_ROUNDS_T2, function(pl, amount)  pl.MaxRoundsTierTwo = math.Clamp(amount, 0, 1000) end, "maximum number of round/attach trinkets for tier two weapons", display_type_absolute)  GM:SetSkillModifierMetadata(SKILLMOD_AIM_ASSIST, function(pl, amount)  pl.AimAssistRange = math.Clamp(amount, 0, 10000) end, "maximum radius of zombie health display", display_type_singleton)  GM:SetSkillModifierMetadata(SKILLMOD_ALCHEMY_RESUPPLIES, function(pl, amount)  pl.AlchemyResuppliesNeeded = math.Clamp(amount, 0, 1000) end, "resupplies needed to gain an alchemy flask", display_type_singleton)  GM:SetSkillModifierMetadata(SKILLMOD_CLEANSES_FROM_FOOD, function(pl, amount)  pl.CleansesFromFood = math.Clamp(amount, 0, 1000) end, "cleanse stacks gained from eating food", display_type_singleton)  GM:SetSkillModifierMetadata(SKILLMOD_CROUCH_LOCK_TIME, function(pl, amount)  pl.CrouchLockTime = math.Clamp(amount, 0.6, -0.6) end, "minimum crouch jump time", display_type_singleton)  GM:SetSkillModifierMetadata(SKILLMOD_WEAPON_DAMAGE_MUL, GM:MkGenericMod("WeaponDamageMul"), "weapon damage dealt") GM:SetSkillModifierMetadata(SKILLMOD_PHASE_PROGRESS_LOSS_MUL, GM:MkGenericMod("PhaseProgressLossMul"), "phase progress loss mul")  GM:SetSkillModifierMetadata(SKILLMOD_UNARMED_FLAT_DAMAGE, function(pl, amount)  pl.UnarmedFlatDamage = amount end, "unarmed strike damage", display_type_absolute)