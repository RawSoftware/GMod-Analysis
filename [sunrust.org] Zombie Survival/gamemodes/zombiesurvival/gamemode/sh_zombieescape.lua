if string.sub(string.lower(game.GetMap()), 1, 3) ~= "ze_" then return end  GM.ZombieEscape = true GM.DisabledSkills = true  GM.WaveZeroLength = 120 GM.EndGameTime = 15   GM.DynamicSpawnDistVis = 1300 GM.DynamicSpawnDist = 768 GM.ZE_FreezeTime = 20 GM.ZETimeLimit = 60 * 50  hook.Add("Initialize", "SetupDefaultZEClass", function()     GAMEMODE.DefaultZombieClass = GAMEMODE.ZombieClasses["Super Zombie"].Index end)  DEFAULT_JUMP_POWER = 195  DT_PLAYER_BOOL_MATERIAL_READY = 9 DT_PLAYER_FLOAT_MATERIAL_TIMER = 7  local prefix_ze = "[ZE] " local color_ze = Color(147, 255, 25) function MsgZE(str)  if not str then return end  str = tostring(str)   MsgC(color_ze, prefix_ze, str, "\n") end  local math_min = math.min local math_ceil = math.ceil  GM.ZELegDamageSpeed = math_ceil(100 * CreateConVar("zs_zelegdamagespeed", "0.3", FCVAR_REPLICATED + FCVAR_ARCHIVE + FCVAR_NOTIFY, "Speed Reduce Amount damaged by a bullet"):GetFloat()) * 0.01 cvars.AddChangeCallback("zs_zelegdamagespeed", function(cvar, oldvalue, newvalue)  GAMEMODE.ZELegDamageSpeed = math_ceil(100 * (tonumber(newvalue) or 1)) * 0.01 end)  GM.ZELegDamageSpeedv2 = math_ceil(100 * CreateConVar("zs_zelegdamagespeedv2", "25", FCVAR_REPLICATED + FCVAR_ARCHIVE + FCVAR_NOTIFY, "Accelerate Speed Amount after a leg damage is gone."):GetFloat()) * 0.01 cvars.AddChangeCallback("zs_zelegdamagespeedv2", function(cvar, oldvalue, newvalue)  GAMEMODE.ZELegDamageSpeedv2 = math_ceil(100 * (tonumber(newvalue) or 1)) * 0.01 end)  function GM:Move(pl, move)  if pl:Team() == TEAM_UNDEAD then  local tab = self.ZombieClasses[pl.Class or self.DefaultZombieClass]  if tab.Move and tab:Move(pl, move) then return end  end   local legdamage = pl:GetLegDamage()   if pl:Team() == TEAM_UNDEAD then  if pl:IsOnFire() then  local scale = 1 - math_min(self.ZELegDamageSpeed, 5 * self.ZELegDamageSpeedv2)  move:SetMaxSpeed(move:GetMaxSpeed() * scale)  move:SetMaxClientSpeed(move:GetMaxClientSpeed() * scale)  end   if legdamage > 0 then  local scale = 1 - math_min(self.ZELegDamageSpeed, legdamage * self.ZELegDamageSpeedv2)  move:SetMaxSpeed(move:GetMaxSpeed() * scale)  move:SetMaxClientSpeed(move:GetMaxClientSpeed() * scale)  end  end end  function GM:GetZombieDamageScale(pos, ignore)  return self.ZombieDamageMultiplier end  function GM:GetMaxRounds()  return self.RoundLimit or 0 end  function GM:GetCurrentRound()  return self.CurrentRound or 1 end  hook.Add("OnPlayerHitGround", "ZE.OnPlayerHitGround", function(ply, bInWater, bOnFloater, flFallSpeed)  return true end)     local removeWepClasses = {  ["weapon_glock"] = true,  ["weapon_usp"] = true,  ["weapon_p228"] = true,  ["weapon_deagle"] = true,  ["weapon_elite"] = true,  ["weapon_fiveseven"] = true,  ["weapon_m3"] = true,  ["weapon_xm1014"] = true,  ["weapon_galil"] = true,  ["weapon_ak47"] = true,  ["weapon_scout"] = true,  ["weapon_sg552"] = true,  ["weapon_awp"] = true,  ["weapon_g3sg1"] = true,  ["weapon_famas"] = true,  ["weapon_m4a1"] = true,  ["weapon_aug"] = true,  ["weapon_sg550"] = true,  ["weapon_mac10"] = true,  ["weapon_tmp"] = true,  ["weapon_mp5navy"] = true,  ["weapon_ump45"] = true,  ["weapon_p90"] = true,  ["weapon_m249"] = true,  ["info_ladder"] = true }  local ZombieWepClasses = {  ["weapon_knife"] = true }  local ENT = {}  ENT.Type = "anim" ENT.RenderGroup = RENDERGROUP_NONE  function ENT:Initialize()  self:SetNoDraw(true)  self:SetNotSolid(true) end  if SERVER then  function ENT:Think()  self:Remove()  end end  hook.Add("Initialize", "RegisterDummyEntities", function()  scripted_ents.Register(ENT, "ammo_50ae")  scripted_ents.Register(ENT, "ammo_556mm_box")  scripted_ents.Register(ENT, "player_weaponstrip")   for entityh, val in pairs(removeWepClasses) do  scripted_ents.Register(ENT, entityh)  weapons.Register({Base = "weapon_zs_elite"}, entityh)  end   for entityz, val in pairs(ZombieWepClasses) do  scripted_ents.Register(ENT, entityz)  weapons.Register({Base = "weapon_zs_cswep"}, entityz)  end      for _, weapt in pairs(GAMEMODE.Weapons) do  if weapt.class then  local wep = weapons.GetStored(weapt.class)   if wep then  wep.Primary.Damage = wep.Primary.Damage * 4                  if wep.WalkSpeed then                     wep.WalkSpeed = wep.WalkSpeed + 25                 end  end  end  end end)     GM.Weapons = {} function GM:ZEAddItem(name, class, type, cost)  local tab = {name = name, class = class, type = type, cost = cost or 0}  self.Weapons[#self.Weapons + 1] = tab   return tab end  function GM:AddZEWeaponMenu(name, class, type, cost)  return self:ZEAddItem(name, class, type, cost) end    GM:AddZEWeaponMenu("AK47", "weapon_zs_akbar", 1, 0) GM:AddZEWeaponMenu("TMP", "weapon_zs_silencer", 1, 0) GM:AddZEWeaponMenu("P90", "weapon_zs_bulletstorm", 1, 0) GM:AddZEWeaponMenu("AUG", "weapon_zs_inferno", 1, 0) GM:AddZEWeaponMenu("M4", "weapon_zs_m4", 1, 0) GM:AddZEWeaponMenu("MAC-10", "weapon_zs_uzi", 1, 0) GM:AddZEWeaponMenu("M3", "weapon_zs_sweepershotgun", 1, 0) GM:AddZEWeaponMenu("Desert Eagle", "weapon_zs_deagle", 1, 0)    GM:AddZEWeaponMenu("Eternal", "weapon_zs_doublebarrel", 2, 30) GM:AddZEWeaponMenu("Azrael", "weapon_zs_azrael", 2, 30) GM:AddZEWeaponMenu("SCAR-L", "weapon_zs_scar", 2, 45) GM:AddZEWeaponMenu("Adonis", "weapon_zs_pulserifle", 2, 45) GM:AddZEWeaponMenu("Deus", "weapon_zs_deus", 2, 60) GM:AddZEWeaponMenu("Gluon", "weapon_zs_gluon", 2, 60) GM:AddZEWeaponMenu("Bulwark", "weapon_zs_bulwark", 2, 60) GM:AddZEWeaponMenu("Juggernaut", "weapon_zs_juggernaut", 2, 60)    WEAPON_PRIMARY = 1 WEAPON_SECONDARY = 2 WEAPON_ADDON = 3  function GM:GetWeaponsByType(type)  local tbl = {}  for _, weap in pairs(self.Weapons) do  if weap.type == type then  tbl[#tbl + 1] = weap  end  end  return tbl end  function GM:GetWeaponByClass(str)  for _, weap in pairs(self.Weapons) do  if weap.class == str then  return weap  end  end end  function GM:ShouldRemoveWepClass(cl)  return removeWepClasses[cl] end  local meta = FindMetaTable("Player") function meta:GetPlayerMaterialName()     return self:GetNWString("ZE_Materia") end