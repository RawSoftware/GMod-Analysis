GM.ZombieEscapeWeaponsPrimary = {  "weapon_zs_zeakbar",  "weapon_zs_zesweeper",  "weapon_zs_zesmg",  "weapon_zs_zeinferno",  "weapon_zs_zestubber",  "weapon_zs_zebulletstorm",  "weapon_zs_zesilencer",  "weapon_zs_zequicksilver",  "weapon_zs_zeamigo",  "weapon_zs_zem4" }  GM.ZombieEscapeWeaponsSecondary = {  "weapon_zs_zedeagle",  "weapon_zs_zebattleaxe",  "weapon_zs_zeeraser",  "weapon_zs_zeglock",  "weapon_zs_zetempest" }      GM.CartFile  = "zscarts.txt" GM.FavoritesFile  = "zsfavorites.txt" GM.FriendsFile  = "zsfriends.txt" GM.SkillLoadoutsFile  = "zsskloadouts.txt"  ITEMCAT_GUNS = 1 ITEMCAT_AMMO = 2 ITEMCAT_MELEE = 3 ITEMCAT_TOOLS = 4 ITEMCAT_DEPLOYABLES = 5 ITEMCAT_TRINKETS = 6 ITEMCAT_OTHER = 7  ITEMSUBCAT_TRINKETS_DEFENSIVE = 1 ITEMSUBCAT_TRINKETS_OFFENSIVE = 2 ITEMSUBCAT_TRINKETS_MELEE = 3 ITEMSUBCAT_TRINKETS_PERFORMANCE = 4 ITEMSUBCAT_TRINKETS_SUPPORT = 5 ITEMSUBCAT_TRINKETS_SPECIAL = 6  GM.ItemCategories = {  [ITEMCAT_GUNS] = "Guns",  [ITEMCAT_AMMO] = "Ammo",  [ITEMCAT_MELEE] = "Melee",  [ITEMCAT_TOOLS] = "Tools",  [ITEMCAT_DEPLOYABLES] = "Deployables",  [ITEMCAT_TRINKETS] = "Trinkets",  [ITEMCAT_OTHER] = "Other" }  GM.ItemSubCategories = {  [ITEMSUBCAT_TRINKETS_DEFENSIVE] = "Defensive",  [ITEMSUBCAT_TRINKETS_OFFENSIVE] = "Offensive",  [ITEMSUBCAT_TRINKETS_MELEE] = "Melee",  [ITEMSUBCAT_TRINKETS_PERFORMANCE] = "Performance",  [ITEMSUBCAT_TRINKETS_SUPPORT] = "Support",  [ITEMSUBCAT_TRINKETS_SPECIAL] = "Special" }    GM.Items = {} function GM:AddItem(signature, category, price, swep, name, desc, model, callback)  local tab = {Signature = signature, Name = name or "?", Description = desc, Category = category, Price = price or 0, SWEP = swep, Callback = callback, Model = model}   tab.Worth = tab.Price     self.Items[#self.Items + 1] = tab  self.Items[signature] = tab   return tab end  function GM:AddStartingItem(signature, category, price, swep, name, desc, model, callback)  local item = self:AddItem(signature, category, price, swep, name, desc, model, callback)  item.WorthShop = true   return item end  function GM:AddPointShopItem(signature, category, price, swep, name, desc, model, callback)  local item = self:AddItem("ps_"..signature, category, price, swep, name, desc, model, callback)  item.PointShop = true   return item end    GM.AmmoCache = {} GM.AmmoCache["ar2"] = 32   GM.AmmoCache["alyxgun"] = 24   GM.AmmoCache["pistol"] = 16   GM.AmmoCache["smg1"] = 36   GM.AmmoCache["357"] = 9           GM.AmmoCache["xbowbolt"] = 8   GM.AmmoCache["buckshot"] = 12   GM.AmmoCache["ar2altfire"] = 1   GM.AmmoCache["slam"] = 1   GM.AmmoCache["rpg_round"] = 1   GM.AmmoCache["smg1_grenade"] = 1   GM.AmmoCache["sniperround"] = 1   GM.AmmoCache["sniperpenetratedround"] = 1   GM.AmmoCache["grenade"] = 1   GM.AmmoCache["thumper"] = 1   GM.AmmoCache["gravity"] = 1   GM.AmmoCache["battery"] = 25   GM.AmmoCache["gaussenergy"] = 2   GM.AmmoCache["combinecannon"] = 1   GM.AmmoCache["airboatgun"] = 1   GM.AmmoCache["striderminigun"] = 1   GM.AmmoCache["helicoptergun"] = 1   GM.AmmoCache["spotlamp"] = 1 GM.AmmoCache["manhack"] = 1 GM.AmmoCache["repairfield"] = 1 GM.AmmoCache["zapper"] = 1 GM.AmmoCache["pulse"] = 30 GM.AmmoCache["impactmine"] = 4 GM.AmmoCache["chemical"] = 20 GM.AmmoCache["flashbomb"] = 1 GM.AmmoCache["turret_buckshot"] = 1 GM.AmmoCache["turret_assault"] = 1 GM.AmmoCache["scrap"] = 3  GM.AmmoResupply = table.ToAssoc({"ar2", "pistol", "smg1", "357", "xbowbolt", "buckshot", "battery", "pulse", "impactmine", "chemical", "gaussenergy", "scrap"})         GM:AddStartingItem("pshtr", ITEMCAT_GUNS, 45, "weapon_zs_peashooter") GM:AddStartingItem("btlax", ITEMCAT_GUNS, 45, "weapon_zs_battleaxe") GM:AddStartingItem("owens", ITEMCAT_GUNS, 45, "weapon_zs_owens") GM:AddStartingItem("blstr", ITEMCAT_GUNS, 45, "weapon_zs_blaster") GM:AddStartingItem("tossr", ITEMCAT_GUNS, 45, "weapon_zs_tosser") GM:AddStartingItem("stbbr", ITEMCAT_GUNS, 45, "weapon_zs_stubber") GM:AddStartingItem("crklr", ITEMCAT_GUNS, 45, "weapon_zs_crackler") GM:AddStartingItem("sling", ITEMCAT_GUNS, 45, "weapon_zs_slinger") GM:AddStartingItem("z9000", ITEMCAT_GUNS, 45, "weapon_zs_z9000") GM:AddStartingItem("douser", ITEMCAT_GUNS, 45, "weapon_zs_douser") GM:AddStartingItem("minelayer", ITEMCAT_GUNS, 55, "weapon_zs_minelayer")  GM:AddStartingItem("2pcp", ITEMCAT_AMMO, 10, nil, "32 pistol ammo", nil, "ammo_pistol", function(pl) pl:GiveAmmo(32, "pistol", true) end) GM:AddStartingItem("3pcp", ITEMCAT_AMMO, 15, nil, "48 pistol ammo", nil, "ammo_pistol", function(pl) pl:GiveAmmo(48, "pistol", true) end) GM:AddStartingItem("2sgcp", ITEMCAT_AMMO, 10, nil, "24 shotgun ammo", nil, "ammo_shotgun", function(pl) pl:GiveAmmo(24, "buckshot", true) end) GM:AddStartingItem("3sgcp", ITEMCAT_AMMO, 15, nil, "36 shotgun ammo", nil, "ammo_shotgun", function(pl) pl:GiveAmmo(36, "buckshot", true) end) GM:AddStartingItem("2smgcp", ITEMCAT_AMMO, 10, nil, "72 SMG ammo", nil, "ammo_smg", function(pl) pl:GiveAmmo(72, "smg1", true) end) GM:AddStartingItem("3smgcp", ITEMCAT_AMMO, 15, nil, "108 SMG ammo", nil, "ammo_smg", function(pl) pl:GiveAmmo(108, "smg1", true) end) GM:AddStartingItem("2arcp", ITEMCAT_AMMO, 10, nil, "64 assault rifle ammo", nil, "ammo_assault", function(pl) pl:GiveAmmo(64, "ar2", true) end) GM:AddStartingItem("3arcp", ITEMCAT_AMMO, 15, nil, "96 assault rifle ammo", nil, "ammo_assault", function(pl) pl:GiveAmmo(96, "ar2", true) end) GM:AddStartingItem("2rcp", ITEMCAT_AMMO, 10, nil, "18 rifle ammo", nil, "ammo_rifle", function(pl) pl:GiveAmmo(18, "357", true) end) GM:AddStartingItem("3rcp", ITEMCAT_AMMO, 15, nil, "27 rifle ammo", nil, "ammo_rifle", function(pl) pl:GiveAmmo(27, "357", true) end) GM:AddStartingItem("2pls", ITEMCAT_AMMO, 10, nil, "60 pulse ammo", nil, "ammo_pulse", function(pl) pl:GiveAmmo(60, "pulse", true) end) GM:AddStartingItem("3pls", ITEMCAT_AMMO, 15, nil, "90 pulse ammo", nil, "ammo_pulse", function(pl) pl:GiveAmmo(90, "pulse", true) end) GM:AddStartingItem("xbow1", ITEMCAT_AMMO, 10, nil, "16 crossbow bolts", nil, "ammo_bolts", function(pl) pl:GiveAmmo(16, "XBowBolt", true) end) GM:AddStartingItem("xbow2", ITEMCAT_AMMO, 15, nil, "24 crossbow bolts", nil, "ammo_bolts", function(pl) pl:GiveAmmo(24, "XBowBolt", true) end) GM:AddStartingItem("4mines", ITEMCAT_AMMO, 10, nil, "8 explosives", nil, "ammo_explosive", function(pl) pl:GiveAmmo(8, "impactmine", true) end) GM:AddStartingItem("6mines", ITEMCAT_AMMO, 15, nil, "12 explosives", nil, "ammo_explosive", function(pl) pl:GiveAmmo(12, "impactmine", true) end) GM:AddStartingItem("4chems", ITEMCAT_AMMO, 10, nil, "40 chemicals", nil, "ammo_chemical", function(pl) pl:GiveAmmo(40, "chemical", true) end) GM:AddStartingItem("6chems", ITEMCAT_AMMO, 15, nil, "60 chemicals", nil, "ammo_chemical", function(pl) pl:GiveAmmo(60, "chemical", true) end) GM:AddStartingItem("8nails", ITEMCAT_AMMO, 10, nil, "8 nails", nil,  "ammo_nail",  function(pl) pl:GiveAmmo(8, "GaussEnergy", true) end) GM:AddStartingItem("12nails", ITEMCAT_AMMO, 15, nil, "12 nails", nil,  "ammo_nail",  function(pl) pl:GiveAmmo(12, "GaussEnergy", true) end) GM:AddStartingItem("60mkit", ITEMCAT_AMMO, 10, nil, "60 medical power", nil, "ammo_medpower", function(pl) pl:GiveAmmo(60, "Battery", true) end) GM:AddStartingItem("90mkit", ITEMCAT_AMMO, 15, nil, "90 medical power", nil, "ammo_medpower", function(pl) pl:GiveAmmo(90, "Battery", true) end) GM:AddStartingItem("3scrp",     ITEMCAT_AMMO, 15, nil, "3 scrap",         nil, "ammo_scrap",     function(pl) pl:GiveAmmo(3,  "scrap", true) end) GM:AddStartingItem("5scrp",     ITEMCAT_AMMO, 25, nil, "5 scrap",         nil, "ammo_scrap",     function(pl) pl:GiveAmmo(5,  "scrap", true) end)  GM:AddStartingItem("brassknuckles", ITEMCAT_MELEE, 15, "weapon_zs_brassknuckles").Model = "models/props_c17/utilityconnecter005.mdl" GM:AddStartingItem("zpaxe", ITEMCAT_MELEE, 30, "weapon_zs_axe") GM:AddStartingItem("crwbar", ITEMCAT_MELEE, 30, "weapon_zs_crowbar") GM:AddStartingItem("stnbtn", ITEMCAT_MELEE, 30, "weapon_zs_stunbaton") GM:AddStartingItem("csknf", ITEMCAT_MELEE, 15, "weapon_zs_swissarmyknife") GM:AddStartingItem("zpplnk", ITEMCAT_MELEE, 15, "weapon_zs_plank") GM:AddStartingItem("zpfryp", ITEMCAT_MELEE, 20, "weapon_zs_fryingpan") GM:AddStartingItem("zpcpot", ITEMCAT_MELEE, 20, "weapon_zs_pot") GM:AddStartingItem("ladel", ITEMCAT_MELEE, 20, "weapon_zs_ladel") GM:AddStartingItem("pipe", ITEMCAT_MELEE, 30, "weapon_zs_pipe") GM:AddStartingItem("hook", ITEMCAT_MELEE, 30, "weapon_zs_hook") GM:AddStartingItem("lamp", ITEMCAT_MELEE, 30, "weapon_zs_lamp")  local item GM:AddStartingItem("medkit", ITEMCAT_TOOLS, 45, "weapon_zs_medicalkit") GM:AddStartingItem("medgun", ITEMCAT_TOOLS, 40, "weapon_zs_medicgun") item = GM:AddStartingItem("strengthshot", ITEMCAT_TOOLS, 40, "weapon_zs_strengthshot") item.SkillRequirement = SKILL_U_STRENGTHSHOT GM:AddStartingItem("antidoteshot", ITEMCAT_TOOLS, 35, "weapon_zs_antidoteshot") GM:AddStartingItem("arscrate", ITEMCAT_DEPLOYABLES, 30, "weapon_zs_arsenalcrate") .Countables = "prop_arsenalcrate" GM:AddStartingItem("resupplybox", ITEMCAT_DEPLOYABLES, 30, "weapon_zs_resupplybox") .Countables = "prop_resupplybox" GM:AddStartingItem("remantler", ITEMCAT_DEPLOYABLES, 30, "weapon_zs_remantler") .Countables = "prop_remantler" item = GM:AddStartingItem("infturret", ITEMCAT_DEPLOYABLES, 45, "weapon_zs_gunturret", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_gunturret") pl:GiveAmmo(1, "thumper") end) item.Countables = "prop_gunturret" item.NoClassicMode = true item = GM:AddStartingItem("repairfield", ITEMCAT_DEPLOYABLES, 40, "weapon_zs_repairfield", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_repairfield") pl:GiveAmmo(1, "repairfield") pl:GiveAmmo(50, "pulse") end) item.Countables = "prop_repairfield" item.NoClassicMode = true item = GM:AddStartingItem("zapper", ITEMCAT_DEPLOYABLES, 55, "weapon_zs_zapper", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_zapper") pl:GiveAmmo(1, "zapper") pl:GiveAmmo(50, "pulse") end) item.Countables = "prop_zapper" item.NoClassicMode = true  GM:AddStartingItem("manhack", ITEMCAT_DEPLOYABLES, 40, "weapon_zs_manhack").Countables = "prop_manhack" item = GM:AddStartingItem("drone", ITEMCAT_DEPLOYABLES, 45, "weapon_zs_drone", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_drone") pl:GiveAmmo(1, "drone") pl:GiveAmmo(60, "smg1") end) item.Countables = "prop_drone" item = GM:AddStartingItem("pulsedrone", ITEMCAT_DEPLOYABLES, 45, "weapon_zs_drone_pulse", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_drone_pulse") pl:GiveAmmo(1, "pulse_cutter") pl:GiveAmmo(60, "pulse") end) item.Countables = "prop_drone_pulse" item.SkillRequirement = SKILL_U_DRONE item = GM:AddStartingItem("hauldrone", ITEMCAT_DEPLOYABLES, 15, "weapon_zs_drone_hauler", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_drone_hauler") pl:GiveAmmo(1, "drone_hauler") end) item.Countables = "prop_drone_hauler" item = GM:AddStartingItem("rollermine", ITEMCAT_DEPLOYABLES, 50, "weapon_zs_rollermine", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_rollermine") pl:GiveAmmo(1, "rollermine") end) item.Countables = "prop_rollermine" item.SkillRequirement = SKILL_U_ROLLERMINE  GM:AddStartingItem("wrench", ITEMCAT_TOOLS, 15, "weapon_zs_wrench").NoClassicMode = true GM:AddStartingItem("crphmr", ITEMCAT_TOOLS, 30, "weapon_zs_hammer").NoClassicMode = true GM:AddStartingItem("junkpack", ITEMCAT_DEPLOYABLES, 20, "weapon_zs_boardpack") GM:AddStartingItem("propanetank", ITEMCAT_TOOLS, 25, "comp_propanecan") GM:AddStartingItem("busthead", ITEMCAT_TOOLS, 30, "comp_busthead") GM:AddStartingItem("sawblade", ITEMCAT_TOOLS, 30, "comp_sawblade") GM:AddStartingItem("cpuparts", ITEMCAT_TOOLS, 30, "comp_cpuparts") GM:AddStartingItem("multitool", ITEMCAT_TOOLS, 10, "weapon_zs_multitool") GM:AddStartingItem("electrobattery", ITEMCAT_TOOLS, 40, "comp_electrobattery") GM:AddStartingItem("msgbeacon", ITEMCAT_DEPLOYABLES, 10, "weapon_zs_messagebeacon").Countables = "prop_messagebeacon" item = GM:AddStartingItem("nullifier", ITEMCAT_DEPLOYABLES, 30, "weapon_zs_nullifier", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_nullifier") pl:GiveAmmo(1, "nullifier") pl:GiveAmmo(50, "pulse") end) item.Countables = "prop_nullifier" GM:AddStartingItem("sensor", ITEMCAT_DEPLOYABLES, 15, "weapon_zs_sensor").Countables = "prop_sensor"  GM:AddStartingItem("oxtank", ITEMCAT_TRINKETS, 5, "trinket_oxygentank").SubCategory = ITEMSUBCAT_TRINKETS_PERFORMANCE GM:AddStartingItem("nightvision", ITEMCAT_TRINKETS, 15, "trinket_nightvision").SubCategory = ITEMSUBCAT_TRINKETS_SPECIAL GM:AddStartingItem("bloodpack", ITEMCAT_TRINKETS, 20, "trinket_bloodpack").SubCategory = ITEMSUBCAT_TRINKETS_DEFENSIVE GM:AddStartingItem("magnet", ITEMCAT_TRINKETS, 25, "trinket_magnet").SubCategory = ITEMSUBCAT_TRINKETS_SPECIAL GM:AddStartingItem("arsenalpack", ITEMCAT_TRINKETS, 30, "trinket_arsenalpack").SubCategory = ITEMSUBCAT_TRINKETS_SUPPORT GM:AddStartingItem("resupplypack", ITEMCAT_TRINKETS, 30, "trinket_resupplypack").SubCategory = ITEMSUBCAT_TRINKETS_SUPPORT  GM:AddStartingItem("stone", ITEMCAT_OTHER, 5, "weapon_zs_stone") GM:AddStartingItem("soda", ITEMCAT_OTHER, 5, "weapon_zs_f_soda") GM:AddStartingItem("grenade", ITEMCAT_OTHER, 20, "weapon_zs_grenade") GM:AddStartingItem("flashbomb", ITEMCAT_OTHER, 10, "weapon_zs_flashbomb") GM:AddStartingItem("betty", ITEMCAT_OTHER, 30, "weapon_zs_proxymine").NoObjective = true GM:AddStartingItem("molotov", ITEMCAT_OTHER, 30, "weapon_zs_molotov") GM:AddStartingItem("corgasgrenade", ITEMCAT_OTHER, 30, "weapon_zs_corgasgrenade") GM:AddStartingItem("crygasgrenade", ITEMCAT_OTHER, 30, "weapon_zs_crygasgrenade").SkillRequirement = SKILL_U_CRYGASGREN item = GM:AddStartingItem("detpck", ITEMCAT_OTHER, 30, "weapon_zs_detpack") item.Countables = "prop_detpack" item.NoObjective = true item = GM:AddStartingItem("medcloud", ITEMCAT_OTHER, 15, "weapon_zs_mediccloudbomb") item.SkillRequirement = SKILL_U_MEDICCLOUD item = GM:AddStartingItem("nanitecloud", ITEMCAT_OTHER, 20, "weapon_zs_nanitecloudbomb") item.SkillRequirement = SKILL_U_NANITECLOUD GM:AddStartingItem("bloodshot", ITEMCAT_OTHER, 35, "weapon_zs_bloodshotbomb") GM:AddStartingItem("surgeshot", ITEMCAT_OTHER, 35, "weapon_zs_surgeshotbomb")           GM:AddPointShopItem("pshtr", ITEMCAT_GUNS, 15, "weapon_zs_peashooter", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_peashooter") end) GM:AddPointShopItem("btlax", ITEMCAT_GUNS, 15, "weapon_zs_battleaxe", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_battleaxe") end) GM:AddPointShopItem("owens", ITEMCAT_GUNS, 15, "weapon_zs_owens", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_owens") end) GM:AddPointShopItem("blstr", ITEMCAT_GUNS, 15, "weapon_zs_blaster", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_blaster") end) GM:AddPointShopItem("tossr", ITEMCAT_GUNS, 15, "weapon_zs_tosser", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_tosser") end) GM:AddPointShopItem("stbbr", ITEMCAT_GUNS, 15, "weapon_zs_stubber", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_stubber") end) GM:AddPointShopItem("crklr", ITEMCAT_GUNS, 15, "weapon_zs_crackler", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_crackler") end) GM:AddPointShopItem("sling", ITEMCAT_GUNS, 15, "weapon_zs_slinger", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_slinger") end) GM:AddPointShopItem("z9000", ITEMCAT_GUNS, 15, "weapon_zs_z9000", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_z9000") end) GM:AddPointShopItem("douser", ITEMCAT_GUNS, 15, "weapon_zs_douser", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_douser") end) GM:AddPointShopItem("minelayer", ITEMCAT_GUNS, 20, "weapon_zs_minelayer", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_minelayer") end)   GM:AddPointShopItem("glock3", ITEMCAT_GUNS, 30, "weapon_zs_glock3") GM:AddPointShopItem("magnum", ITEMCAT_GUNS, 30, "weapon_zs_magnum") GM:AddPointShopItem("eraser", ITEMCAT_GUNS, 30, "weapon_zs_eraser") GM:AddPointShopItem("sawedoff", ITEMCAT_GUNS, 30, "weapon_zs_sawedoff") GM:AddPointShopItem("fracture", ITEMCAT_GUNS, 30, "weapon_zs_fracture") GM:AddPointShopItem("uzi", ITEMCAT_GUNS, 30, "weapon_zs_uzi") GM:AddPointShopItem("annabelle", ITEMCAT_GUNS, 30, "weapon_zs_annabelle") GM:AddPointShopItem("inquisitor", ITEMCAT_GUNS, 30, "weapon_zs_inquisitor") GM:AddPointShopItem("amigo", ITEMCAT_GUNS, 30, "weapon_zs_amigo") GM:AddPointShopItem("nemesis", ITEMCAT_GUNS, 30, "weapon_zs_nemesis") GM:AddPointShopItem("hurricane", ITEMCAT_GUNS, 30, "weapon_zs_hurricane") GM:AddPointShopItem("novablaster", ITEMCAT_GUNS, 30, "weapon_zs_novablaster") GM:AddPointShopItem("thumper",     ITEMCAT_GUNS, 30, "weapon_zs_thumper") GM:AddPointShopItem("virulence", ITEMCAT_GUNS, 30, "weapon_zs_virulence")   GM:AddPointShopItem("deagle", ITEMCAT_GUNS, 65, "weapon_zs_deagle") GM:AddPointShopItem("tempest", ITEMCAT_GUNS, 65, "weapon_zs_tempest") GM:AddPointShopItem("ender", ITEMCAT_GUNS, 65, "weapon_zs_ender") GM:AddPointShopItem("shredder", ITEMCAT_GUNS, 65, "weapon_zs_smg") GM:AddPointShopItem("silencer", ITEMCAT_GUNS, 65, "weapon_zs_silencer") GM:AddPointShopItem("hunter", ITEMCAT_GUNS, 65, "weapon_zs_hunter") GM:AddPointShopItem("opal", ITEMCAT_GUNS, 65, "weapon_zs_opal") GM:AddPointShopItem("charon", ITEMCAT_GUNS, 65, "weapon_zs_charon") GM:AddPointShopItem("akbar", ITEMCAT_GUNS, 65, "weapon_zs_akbar") GM:AddPointShopItem("galil", ITEMCAT_GUNS, 65, "weapon_zs_galil") GM:AddPointShopItem("oberon", ITEMCAT_GUNS, 65, "weapon_zs_oberon") GM:AddPointShopItem("hyena", ITEMCAT_GUNS, 65, "weapon_zs_hyena") GM:AddPointShopItem("fuse", ITEMCAT_GUNS, 65, "weapon_zs_fuse") GM:AddPointShopItem("pollutor", ITEMCAT_GUNS, 65, "weapon_zs_pollutor")   GM:AddPointShopItem("longarm", ITEMCAT_GUNS, 115, "weapon_zs_longarm") GM:AddPointShopItem("sweeper", ITEMCAT_GUNS, 115, "weapon_zs_sweepershotgun") GM:AddPointShopItem("eternal", ITEMCAT_GUNS, 115, "weapon_zs_doublebarrel") GM:AddPointShopItem("bulletstorm", ITEMCAT_GUNS, 115, "weapon_zs_bulletstorm") GM:AddPointShopItem("reaper", ITEMCAT_GUNS, 115, "weapon_zs_reaper") GM:AddPointShopItem("quicksilver", ITEMCAT_GUNS, 115, "weapon_zs_quicksilver") GM:AddPointShopItem("slugrifle", ITEMCAT_GUNS, 115, "weapon_zs_slugrifle") GM:AddPointShopItem("artemis", ITEMCAT_GUNS, 115, "weapon_zs_artemis") GM:AddPointShopItem("stalker", ITEMCAT_GUNS, 115, "weapon_zs_m4") GM:AddPointShopItem("inferno", ITEMCAT_GUNS, 115, "weapon_zs_inferno") GM:AddPointShopItem("quasar", ITEMCAT_GUNS, 115, "weapon_zs_quasar") GM:AddPointShopItem("fulmination", ITEMCAT_GUNS, 115, "weapon_zs_fulmination") GM:AddPointShopItem("barrage", ITEMCAT_GUNS, 115, "weapon_zs_barrage") GM:AddPointShopItem("azrael", ITEMCAT_GUNS, 115, "weapon_zs_azrael")   GM:AddPointShopItem("novacolt", ITEMCAT_GUNS, 170, "weapon_zs_novacolt") GM:AddPointShopItem("onyxnsilver", ITEMCAT_GUNS, 170, "weapon_zs_onyxandsilver") GM:AddPointShopItem("razor", ITEMCAT_GUNS, 170, "weapon_zs_razor") GM:AddPointShopItem("jackhammer", ITEMCAT_GUNS, 170, "weapon_zs_jackhammer") GM:AddPointShopItem("boomstick", ITEMCAT_GUNS, 170, "weapon_zs_boomstick") GM:AddPointShopItem("scar", ITEMCAT_GUNS, 170, "weapon_zs_scar") GM:AddPointShopItem("apostle", ITEMCAT_GUNS, 170, "weapon_zs_apostle") GM:AddPointShopItem("renegade", ITEMCAT_GUNS, 170, "weapon_zs_renegade") GM:AddPointShopItem("crossbow", ITEMCAT_GUNS, 170, "weapon_zs_crossbow") GM:AddPointShopItem("pulserifle", ITEMCAT_GUNS, 170, "weapon_zs_pulserifle") GM:AddPointShopItem("equinox", ITEMCAT_GUNS, 170, "weapon_zs_asmd") GM:AddPointShopItem("broadside", ITEMCAT_GUNS, 170, "weapon_zs_broadside") GM:AddPointShopItem("smelter", ITEMCAT_GUNS, 170, "weapon_zs_smelter") GM:AddPointShopItem("nebula", ITEMCAT_GUNS, 170, "weapon_zs_nebula")   GM:AddPointShopItem("enforcers", ITEMCAT_GUNS, 280, "weapon_zs_enforcers") GM:AddPointShopItem("juggernaut", ITEMCAT_GUNS, 280, "weapon_zs_juggernaut") GM:AddPointShopItem("deathdlrs", ITEMCAT_GUNS, 280, "weapon_zs_deathdealers") GM:AddPointShopItem("colossus", ITEMCAT_GUNS, 280, "weapon_zs_colossus") GM:AddPointShopItem("deus", ITEMCAT_GUNS, 280, "weapon_zs_deus") GM:AddPointShopItem("bulwark", ITEMCAT_GUNS, 280, "weapon_zs_bulwark") GM:AddPointShopItem("gluon", ITEMCAT_GUNS, 280, "weapon_zs_gluon") GM:AddPointShopItem("spinfusor", ITEMCAT_GUNS, 280, "weapon_zs_spinfusor") GM:AddPointShopItem("tau",         ITEMCAT_GUNS, 280, "weapon_zs_hephaestus") GM:AddPointShopItem("zeus", ITEMCAT_GUNS, 280, "weapon_zs_zeus") GM:AddPointShopItem("vindicator",     ITEMCAT_GUNS, 280, "weapon_zs_vindicator") GM:AddPointShopItem("radiance", ITEMCAT_GUNS, 280, "weapon_zs_radiance")  GM:AddPointShopItem("pistolammo", ITEMCAT_AMMO, 8, nil, "16 pistol ammo", nil, "ammo_pistol", function(pl) pl:GiveAmmo(16, "pistol", true) end) GM:AddPointShopItem("shotgunammo", ITEMCAT_AMMO, 8, nil, "12 shotgun ammo", nil, "ammo_shotgun", function(pl) pl:GiveAmmo(12, "buckshot", true) end) GM:AddPointShopItem("smgammo", ITEMCAT_AMMO, 8, nil, "36 SMG ammo", nil, "ammo_smg", function(pl) pl:GiveAmmo(36, "smg1", true) end) GM:AddPointShopItem("rifleammo", ITEMCAT_AMMO, 8, nil, "9 rifle ammo",     nil, "ammo_rifle", function(pl) pl:GiveAmmo(9, "357", true) end) GM:AddPointShopItem("crossbowammo", ITEMCAT_AMMO, 8, nil, "8 crossbow bolts", nil, "ammo_bolts", function(pl) pl:GiveAmmo(8, "XBowBolt", true) end) GM:AddPointShopItem("assaultrifleammo", ITEMCAT_AMMO, 8, nil, "32 assault rifle ammo", nil, "ammo_assault", function(pl) pl:GiveAmmo(32, "ar2", true) end) GM:AddPointShopItem("pulseammo", ITEMCAT_AMMO, 8, nil, "30 pulse ammo", nil, "ammo_pulse", function(pl) pl:GiveAmmo(30, "pulse", true) end) GM:AddPointShopItem("impactmine", ITEMCAT_AMMO, 8, nil, "4 explosives", nil, "ammo_explosive", function(pl) pl:GiveAmmo(4, "impactmine", true) end) GM:AddPointShopItem("chemical", ITEMCAT_AMMO, 8, nil, "20 chemicals",         nil, "ammo_chemical", function(pl) pl:GiveAmmo(20, "chemical", true) end) item = GM:AddPointShopItem("scrapammo", ITEMCAT_AMMO, 15, nil, "9 scrap", nil, "ammo_scrap", function(pl) pl:GiveAmmo(9, "scrap", true) end) item.CannotMakeFromScrap = true item = GM:AddPointShopItem("25mkit", ITEMCAT_AMMO, 15, nil, "25 medical power",     "25 extra power for medical items.",    "ammo_medpower", function(pl) pl:GiveAmmo(25, "Battery", true) end) item.CanMakeFromScrap = true item = GM:AddPointShopItem("nail", ITEMCAT_AMMO, 4, nil, "Nail", "It's just one nail.", "ammo_nail", function(pl) pl:GiveAmmo(1, "GaussEnergy", true) end) item.NoClassicMode = true item.CanMakeFromScrap = true   GM:AddPointShopItem("brassknuckles", ITEMCAT_MELEE, 8, "weapon_zs_brassknuckles").Model = "models/props_c17/utilityconnecter005.mdl" GM:AddPointShopItem("knife", ITEMCAT_MELEE, 8, "weapon_zs_swissarmyknife") GM:AddPointShopItem("zpplnk", ITEMCAT_MELEE, 8, "weapon_zs_plank") GM:AddPointShopItem("axe", ITEMCAT_MELEE, 12, "weapon_zs_axe") GM:AddPointShopItem("zpfryp", ITEMCAT_MELEE, 12, "weapon_zs_fryingpan") GM:AddPointShopItem("zpcpot", ITEMCAT_MELEE, 12, "weapon_zs_pot") GM:AddPointShopItem("ladel", ITEMCAT_MELEE, 12, "weapon_zs_ladel") GM:AddPointShopItem("crowbar", ITEMCAT_MELEE, 12, "weapon_zs_crowbar") GM:AddPointShopItem("pipe", ITEMCAT_MELEE, 12, "weapon_zs_pipe") GM:AddPointShopItem("stunbaton", ITEMCAT_MELEE, 12, "weapon_zs_stunbaton") GM:AddPointShopItem("hook", ITEMCAT_MELEE, 12, "weapon_zs_hook") GM:AddPointShopItem("lamp", ITEMCAT_MELEE, 12, "weapon_zs_lamp")   GM:AddPointShopItem("broom", ITEMCAT_MELEE, 30, "weapon_zs_pushbroom") GM:AddPointShopItem("shovel", ITEMCAT_MELEE, 30, "weapon_zs_shovel") GM:AddPointShopItem("sledgehammer", ITEMCAT_MELEE, 30, "weapon_zs_sledgehammer") GM:AddPointShopItem("harpoon", ITEMCAT_MELEE, 30, "weapon_zs_harpoon") GM:AddPointShopItem("butcherknf", ITEMCAT_MELEE, 30, "weapon_zs_butcherknife") GM:AddPointShopItem("mattock", ITEMCAT_MELEE, 30, "weapon_zs_mattock") GM:AddPointShopItem("riot", ITEMCAT_MELEE, 30, "weapon_zs_riotgear") GM:AddPointShopItem("harvester", ITEMCAT_MELEE, 30, "weapon_zs_harvester")   GM:AddPointShopItem("longsword", ITEMCAT_MELEE, 65, "weapon_zs_longsword") GM:AddPointShopItem("executioner", ITEMCAT_MELEE, 65, "weapon_zs_executioner") GM:AddPointShopItem("rebarmace", ITEMCAT_MELEE, 65, "weapon_zs_rebarmace") GM:AddPointShopItem("spoon", ITEMCAT_MELEE, 65, "weapon_zs_spoon") GM:AddPointShopItem("powerfists", ITEMCAT_MELEE, 65, "weapon_zs_powerfists") GM:AddPointShopItem("boneshiv", ITEMCAT_MELEE, 65, "weapon_zs_boneshiv") GM:AddPointShopItem("prod", ITEMCAT_MELEE, 65, "weapon_zs_prod")   GM:AddPointShopItem("graveshvl", ITEMCAT_MELEE, 115, "weapon_zs_graveshovel") GM:AddPointShopItem("kongol", ITEMCAT_MELEE, 115, "weapon_zs_kongolaxe") GM:AddPointShopItem("scythe", ITEMCAT_MELEE, 115, "weapon_zs_scythe") GM:AddPointShopItem("meattenderizer", ITEMCAT_MELEE, 115, "weapon_zs_meattenderizer") GM:AddPointShopItem("arran", ITEMCAT_MELEE, 115, "weapon_zs_arran") GM:AddPointShopItem("striker", ITEMCAT_MELEE, 115, "weapon_zs_striker") GM:AddPointShopItem("heavyassault", ITEMCAT_MELEE, 115, "weapon_zs_heavyassaultgear")   GM:AddPointShopItem("frotchet", ITEMCAT_MELEE, 170, "weapon_zs_frotchet") GM:AddPointShopItem("moonlight", ITEMCAT_MELEE, 170, "weapon_zs_moonlight_greatsword") GM:AddPointShopItem("zweihander", ITEMCAT_MELEE, 170, "weapon_zs_zweihander") GM:AddPointShopItem("ghammer", ITEMCAT_MELEE, 170, "weapon_zs_ghammer") GM:AddPointShopItem("diviner", ITEMCAT_MELEE, 170, "weapon_zs_diviner")   GM:AddPointShopItem("mjolnir", ITEMCAT_MELEE, 280, "weapon_zs_mjolnir") GM:AddPointShopItem("undeadslayer", ITEMCAT_MELEE, 280, "weapon_zs_undeadslayer") GM:AddPointShopItem("disfavor", ITEMCAT_MELEE, 280, "weapon_zs_disfavor") GM:AddPointShopItem("sanitysword", ITEMCAT_MELEE, 280, "weapon_zs_sanitysword")  GM:AddPointShopItem("crphmr", ITEMCAT_TOOLS, 25, "weapon_zs_hammer", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_hammer") pl:GiveAmmo(5, "GaussEnergy") end) GM:AddPointShopItem("barbedwire", ITEMCAT_TOOLS, 40, "weapon_zs_barbedwire", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_barbedwire") pl:GiveAmmo(5, "GaussEnergy") end) GM:AddPointShopItem("smithhammer", ITEMCAT_TOOLS, 65, "weapon_zs_smithinghammer", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_smithinghammer") pl:GiveAmmo(5, "GaussEnergy") end) GM:AddPointShopItem("welder", ITEMCAT_TOOLS, 110, "weapon_zs_welder") GM:AddPointShopItem("wrench", ITEMCAT_TOOLS, 15, "weapon_zs_wrench").NoClassicMode = true GM:AddPointShopItem("multitool", ITEMCAT_TOOLS, 10, "weapon_zs_multitool").NoClassicMode = true GM:AddPointShopItem("arsenalcrate", ITEMCAT_DEPLOYABLES, 30, "weapon_zs_arsenalcrate").Countables = "prop_arsenalcrate" GM:AddPointShopItem("resupplybox", ITEMCAT_DEPLOYABLES, 30, "weapon_zs_resupplybox").Countables = "prop_resupplybox" GM:AddPointShopItem("remantler", ITEMCAT_DEPLOYABLES, 30, "weapon_zs_remantler").Countables = "prop_remantler" GM:AddPointShopItem("fridge", ITEMCAT_DEPLOYABLES, 40, "weapon_zs_fridge").Countables = "prop_fridge" GM:AddPointShopItem("msgbeacon", ITEMCAT_DEPLOYABLES, 10, "weapon_zs_messagebeacon").Countables = "prop_messagebeacon" GM:AddPointShopItem("sensor", ITEMCAT_DEPLOYABLES, 20, "weapon_zs_sensor").Countables = "prop_sensor"   item = GM:AddPointShopItem("infturret", ITEMCAT_DEPLOYABLES, 40, "weapon_zs_gunturret", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_gunturret") pl:GiveAmmo(1, "thumper") end) item.NoClassicMode = true item.Countables = "prop_gunturret" item = GM:AddPointShopItem("assaultturret", ITEMCAT_DEPLOYABLES, 115, "weapon_zs_gunturret_assault", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_gunturret_assault") pl:GiveAmmo(1, "turret_assault") end) item.NoClassicMode = true item.Countables = "prop_gunturret_assault" item = GM:AddPointShopItem("rocketturret", ITEMCAT_DEPLOYABLES, 175, "weapon_zs_gunturret_rocket", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_gunturret_rocket") pl:GiveAmmo(1, "turret_rocket") end) item.Countables = "prop_gunturret_rocket" item.NoClassicMode = true item.SkillRequirement = SKILL_U_ROCKETTURRET GM:AddPointShopItem("manhack", ITEMCAT_DEPLOYABLES, 30, "weapon_zs_manhack").Countables = "prop_manhack" item = GM:AddPointShopItem("drone", ITEMCAT_DEPLOYABLES, 40, "weapon_zs_drone") item.Countables = "prop_drone" item = GM:AddPointShopItem("pulsedrone", ITEMCAT_DEPLOYABLES, 40, "weapon_zs_drone_pulse") item.Countables = "prop_drone_pulse" item.SkillRequirement = SKILL_U_DRONE item = GM:AddPointShopItem("hauldrone", ITEMCAT_DEPLOYABLES, 10, "weapon_zs_drone_hauler") item.Countables = "prop_drone_hauler" item = GM:AddPointShopItem("rollermine", ITEMCAT_DEPLOYABLES, 35, "weapon_zs_rollermine") item.Countables = "prop_rollermine" item.SkillRequirement = SKILL_U_ROLLERMINE  item = GM:AddPointShopItem("repairfield", ITEMCAT_DEPLOYABLES, 30, "weapon_zs_repairfield", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_repairfield") pl:GiveAmmo(1, "repairfield") pl:GiveAmmo(30, "pulse") end) item.Countables = "prop_repairfield" item.NoClassicMode = true item = GM:AddPointShopItem("zapper", ITEMCAT_DEPLOYABLES, 30, "weapon_zs_zapper", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_zapper") pl:GiveAmmo(1, "zapper") pl:GiveAmmo(30, "pulse") end) item.Countables = "prop_zapper" item.NoClassicMode = true item = GM:AddPointShopItem("zapper_arc", ITEMCAT_DEPLOYABLES, 115, "weapon_zs_zapper_arc", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_zapper_arc") pl:GiveAmmo(1, "zapper_arc") pl:GiveAmmo(30, "pulse") end) item.Countables = "prop_zapper_arc" item.NoClassicMode = true item.SkillRequirement = SKILL_U_ZAPPER_ARC item = GM:AddPointShopItem("ffemitter", ITEMCAT_DEPLOYABLES, 70, "weapon_zs_ffemitter", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_ffemitter") pl:GiveAmmo(1, "slam") pl:GiveAmmo(30, "pulse") end) item.Countables = "prop_ffemitter" item = GM:AddPointShopItem("nullifier", ITEMCAT_DEPLOYABLES, 25, "weapon_zs_nullifier", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_nullifier") pl:GiveAmmo(1, "nullifier") pl:GiveAmmo(30, "pulse") end) item.Countables = "prop_nullifier" GM:AddPointShopItem("propanetank", ITEMCAT_TOOLS, 15, "comp_propanecan") GM:AddPointShopItem("busthead", ITEMCAT_TOOLS, 25, "comp_busthead") GM:AddPointShopItem("sawblade", ITEMCAT_TOOLS, 30, "comp_sawblade") GM:AddPointShopItem("cpuparts", ITEMCAT_TOOLS, 30, "comp_cpuparts") GM:AddPointShopItem("electrobattery", ITEMCAT_TOOLS, 35, "comp_electrobattery") GM:AddPointShopItem("barricadekit", ITEMCAT_DEPLOYABLES, 110, "weapon_zs_barricadekit", nil, nil, nil, function(pl) pl:GiveEmptyWeapon("weapon_zs_barricadekit") pl:GiveAmmo(2, "sniperround") end) GM:AddPointShopItem("medkit", ITEMCAT_TOOLS, 25, "weapon_zs_medicalkit") GM:AddPointShopItem("medgun", ITEMCAT_TOOLS, 25, "weapon_zs_medicgun") item = GM:AddPointShopItem("strengthshot", ITEMCAT_TOOLS, 20, "weapon_zs_strengthshot") item.SkillRequirement = SKILL_U_STRENGTHSHOT GM:AddPointShopItem("antidote", ITEMCAT_TOOLS, 20, "weapon_zs_antidoteshot") GM:AddPointShopItem("medrifle", ITEMCAT_TOOLS, 30, "weapon_zs_medicrifle") GM:AddPointShopItem("templar", ITEMCAT_TOOLS, 65, "weapon_zs_medicshotgun") GM:AddPointShopItem("healray", ITEMCAT_TOOLS, 140, "weapon_zs_healingray")    GM:AddPointShopItem("oxtank", ITEMCAT_TRINKETS, 10, "trinket_oxygentank").SubCategory = ITEMSUBCAT_TRINKETS_PERFORMANCE GM:AddPointShopItem("magnet", ITEMCAT_TRINKETS, 10, "trinket_magnet").SubCategory = ITEMSUBCAT_TRINKETS_PERFORMANCE GM:AddPointShopItem("nightvision", ITEMCAT_TRINKETS, 15, "trinket_nightvision").SubCategory = ITEMSUBCAT_TRINKETS_PERFORMANCE GM:AddPointShopItem("bloodpack", ITEMCAT_TRINKETS, 15, "trinket_bloodpack").SubCategory = ITEMSUBCAT_TRINKETS_DEFENSIVE GM:AddPointShopItem("reactiveflasher", ITEMCAT_TRINKETS, 15, "trinket_reactiveflasher").SubCategory = ITEMSUBCAT_TRINKETS_DEFENSIVE GM:AddPointShopItem("iceburst", ITEMCAT_TRINKETS, 15, "trinket_iceburst").SubCategory = ITEMSUBCAT_TRINKETS_DEFENSIVE GM:AddPointShopItem("necrosense", ITEMCAT_TRINKETS, 50, "trinket_necrosense").SubCategory = ITEMSUBCAT_TRINKETS_DEFENSIVE GM:AddPointShopItem("arsenalpack", ITEMCAT_TRINKETS, 50, "trinket_arsenalpack").SubCategory = ITEMSUBCAT_TRINKETS_SUPPORT GM:AddPointShopItem("resupplypack", ITEMCAT_TRINKETS, 50, "trinket_resupplypack").SubCategory = ITEMSUBCAT_TRINKETS_SUPPORT  GM:AddPointShopItem("flashbomb", ITEMCAT_OTHER, 25, "weapon_zs_flashbomb") GM:AddPointShopItem("molotov", ITEMCAT_OTHER, 45, "weapon_zs_molotov") GM:AddPointShopItem("grenade", ITEMCAT_OTHER, 40, "weapon_zs_grenade") GM:AddPointShopItem("betty", ITEMCAT_OTHER, 40, "weapon_zs_proxymine") GM:AddPointShopItem("detpck", ITEMCAT_OTHER, 40, "weapon_zs_detpack") item = GM:AddPointShopItem("crygasgrenade", ITEMCAT_OTHER, 55, "weapon_zs_crygasgrenade") item.SkillRequirement = SKILL_U_CRYGASGREN GM:AddPointShopItem("corgasgrenade", ITEMCAT_OTHER, 55, "weapon_zs_corgasgrenade") GM:AddPointShopItem("sigfragment", ITEMCAT_OTHER, 35, "weapon_zs_sigilfragment") GM:AddPointShopItem("bloodshot", ITEMCAT_OTHER, 50, "weapon_zs_bloodshotbomb") GM:AddPointShopItem("surgeshot", ITEMCAT_OTHER, 50, "weapon_zs_surgeshotbomb") item = GM:AddPointShopItem("adrenaline", ITEMCAT_OTHER, 25, "weapon_zs_adrenaline") item.SwitchTo = true item = GM:AddPointShopItem("phaseorb", ITEMCAT_OTHER, 25, "weapon_zs_phaseorb") item.NoClassicMode = true item.NoObjective = true item.SkillRequirement = SKILL_U_CORRUPTEDFRAGMENT item = GM:AddPointShopItem("medcloud", ITEMCAT_OTHER, 40, "weapon_zs_mediccloudbomb") item.SkillRequirement = SKILL_U_MEDICCLOUD item = GM:AddPointShopItem("nanitecloud", ITEMCAT_OTHER, 40, "weapon_zs_nanitecloudbomb") item.SkillRequirement = SKILL_U_NANITECLOUD     local function genericcallback(pl, magnitude) return pl:Name(), magnitude end GM.HonorableMentions = {} GM.HonorableMentions[HM_MOSTZOMBIESKILLED] = {Name = "Gunslinger", String = "by %s with guns, with %d killed zombies.", Callback = genericcallback, Color = COLOR_CYAN} GM.HonorableMentions[HM_MOSTMELEEKILLS] = {Name = "Warrior", String = "by %s with melee, with %d killed zombies.", Callback = genericcallback, Color = COLOR_CYAN} GM.HonorableMentions[HM_MOSTDAMAGETOUNDEAD] = {Name = "Most damage to undead", String = "goes to %s, with a total of %d damage dealt to the undead.", Callback = genericcallback, Color = COLOR_CYAN} GM.HonorableMentions[HM_MOSTHEADSHOTS] = {Name = "Most headshot kills", String = "goes to %s, with a total of %s headshot kills.", Callback = genericcallback, Color = COLOR_CYAN} GM.HonorableMentions[HM_CADER] = {Name = "Barricader", String = "goes to %s for having their cades absorb %s damage.", Callback = genericcallback, Color = COLOR_CYAN} GM.HonorableMentions[HM_MOSTHELPFUL] = {Name = "Most helpful", String = "goes to %s for assisting in the disposal of %d zombies.", Callback = genericcallback, Color = COLOR_CYAN} GM.HonorableMentions[HM_LASTHUMAN] = {Name = "Last Human", String = "goes to %s for being the last person alive.", Callback = genericcallback, Color = COLOR_CYAN} GM.HonorableMentions[HM_BOUNTYHUNTER] = {Name = "Bounty Hunter", String = "goes to %s for obtaining %d bounty trinkets.", Callback = genericcallback, Color = COLOR_CYAN} GM.HonorableMentions[HM_GOODDOCTOR] = {Name = "Good Doctor", String = "goes to %s for healing their team for %d points of health.", Callback = genericcallback, Color = COLOR_CYAN} GM.HonorableMentions[HM_HANDYMAN] = {Name = "Handy Man", String = "goes to %s for getting %d barricade assistance points.", Callback = genericcallback, Color = COLOR_CYAN} GM.HonorableMentions[HM_MOSTBRAINSEATEN] = {Name = "Most brains eaten", String = "by %s, with %d brains eaten.", Callback = genericcallback, Color = COLOR_LIMEGREEN} GM.HonorableMentions[HM_MOSTDAMAGETOHUMANS] = {Name = "Most damage to humans", String = "goes to %s, with a total of %d damage given to living players.", Callback = genericcallback, Color = COLOR_LIMEGREEN} GM.HonorableMentions[HM_LASTBITE] = {Name = "Last Bite", String = "goes to %s for ending the round.", Callback = genericcallback, Color = COLOR_LIMEGREEN} GM.HonorableMentions[HM_USEFULTOOPPOSITE] = {Name = "Most useful to opposite team", String = "goes to %s for giving up a whopping %d kills!", Callback = genericcallback, Color = COLOR_RED} GM.HonorableMentions[HM_STUPID] = {Name = "Stupid", String = "is what %s is for getting killed %d feet away from a zombie spawn.", Callback = genericcallback, Color = COLOR_RED} GM.HonorableMentions[HM_SALESMAN] = {Name = "Salesman", String = "is what %s is for having %d points worth of items taken from their arsenal crate.", Callback = genericcallback, Color = COLOR_CYAN} GM.HonorableMentions[HM_WAREHOUSE] = {Name = "Warehouse", String = "describes %s well since they had their resupply boxes used %d times.", Callback = genericcallback, Color = COLOR_CYAN} GM.HonorableMentions[HM_DEFENCEDMG] = {Name = "Defender", String = "goes to %s for protecting humans from %d damage with defence boosts.", Callback = genericcallback, Color = COLOR_CYAN} GM.HonorableMentions[HM_BLOCKDMG] = {Name = "Palisade", String = "goes to %s for blocking humans from %d damage with melee weapons/shields.", Callback = genericcallback, Color = COLOR_CYAN} GM.HonorableMentions[HM_STRENGTHDMG] = {Name = "Alchemist", String = "is what %s is for boosting players with an additional %d damage.", Callback = genericcallback, Color = COLOR_CYAN} GM.HonorableMentions[HM_BARRICADEDESTROYER] = {Name = "Barricade Destroyer", String = "goes to %s for doing %d damage to barricades.", Callback = genericcallback, Color = COLOR_LIMEGREEN} GM.HonorableMentions[HM_NESTDESTROYER] = {Name = "Nest Destroyer", String = "goes to %s for destroying %d nests.", Callback = genericcallback, Color = COLOR_LIMEGREEN} GM.HonorableMentions[HM_NESTMASTER] = {Name = "Nest Master", String = "goes to %s for having %d zombies spawn through their nest.", Callback = genericcallback, Color = COLOR_LIMEGREEN}  GM.PersonalStats = {} GM.PersonalStats[PERSONAL_STAT_XP_EARNED]            = {Name = "XP Earned", Color = COLOR_RPURPLE, Callback = function(pl) return pl.XPThisRound end} GM.PersonalStats[PERSONAL_STAT_POINTS_EARNED]        = {Name = "Points Earned", Color = COLOR_RPURPLE, Callback = function(pl) return pl.RoundPoints end} GM.PersonalStats[PERSONAL_STAT_DAMAGE_TO_UNDEAD]     = {Name = "Damage to Undead", Color = COLOR_CYAN, Callback = function(pl) return GAMEMODE.PlayerDamageDealt[pl] and GAMEMODE.PlayerDamageDealt[pl][TEAM_HUMAN] or 0 end} GM.PersonalStats[PERSONAL_STAT_GUN_KILLS]            = {Name = "Gun Kills", Color = COLOR_CYAN, Callback = function(pl) return pl.ZombiesKilledGun end} GM.PersonalStats[PERSONAL_STAT_MELEE_KILLS]          = {Name = "Melee Kills", Color = COLOR_CYAN, Callback = function(pl) return pl.ZombiesKilledMelee end} GM.PersonalStats[PERSONAL_STAT_HEADSHOT_KILLS]       = {Name = "Headshot Kills", Color = COLOR_CYAN, Callback = function(pl) return pl.Headshots end} GM.PersonalStats[PERSONAL_STAT_ASSISTS]              = {Name = "Assists", Color = COLOR_CYAN, Callback = function(pl) return pl.ZombiesKilledAssists end} GM.PersonalStats[PERSONAL_STAT_HEALING]              = {Name = "Healing", Color = COLOR_GREEN, Callback = function(pl) return pl.HealedThisRound end} GM.PersonalStats[PERSONAL_STAT_REPAIRS]              = {Name = "Repairs", Color = COLOR_GREEN, Callback = function(pl) return pl.RepairedThisRound end} GM.PersonalStats[PERSONAL_STAT_BARRICADE_ABSORB]     = {Name = "Barricade Damage Absorbed", Color = COLOR_GREEN, Callback = function(pl) return pl.DamageAbsorbedByCades end} GM.PersonalStats[PERSONAL_STAT_DAMAGE_PREVENTED]     = {Name = "Damage Prevented", Color = COLOR_GREEN, Callback = function(pl) return pl.DefenceDamage end} GM.PersonalStats[PERSONAL_STAT_DAMAGE_BOOSTED]       = {Name = "Damage Boosted", Color = COLOR_GREEN, Callback = function(pl) return pl.StrengthBoostDamage end} GM.PersonalStats[PERSONAL_STAT_DAMAGE_TO_HUMANS]     = {Name = "Damage to Humans", Color = COLOR_RED, Callback = function(pl) return GAMEMODE.PlayerDamageDealt[pl] and GAMEMODE.PlayerDamageDealt[pl][TEAM_ZOMBIE] or 0 end} GM.PersonalStats[PERSONAL_STAT_BARRICADE_DAMAGE]     = {Name = "Damage to Barricades", Color = COLOR_RED, Callback = function(pl) return pl.BarricadeDamage end} GM.PersonalStats[PERSONAL_STAT_BRAINS]               = {Name = "Brains", Color = COLOR_RED, Callback = function(pl) return pl.BrainsEaten end} GM.PersonalStats[PERSONAL_STAT_FIRE_DAMAGE_DEALT]    = {Name = "Fire Damage Dealt", Color = COLOR_CYAN, Callback = function(pl) return GAMEMODE:GetPersonalLightStat(pl, PERSONAL_STAT_FIRE_DAMAGE_DEALT) end} GM.PersonalStats[PERSONAL_STAT_ACID_DAMAGE_DEALT]    = {Name = "Acid Damage Dealt", Color = COLOR_CYAN, Callback = function(pl) return GAMEMODE:GetPersonalLightStat(pl, PERSONAL_STAT_ACID_DAMAGE_DEALT) end} GM.PersonalStats[PERSONAL_STAT_ICE_DAMAGE_DEALT]     = {Name = "Ice Damage Dealt", Color = COLOR_CYAN, Callback = function(pl) return GAMEMODE:GetPersonalLightStat(pl, PERSONAL_STAT_ICE_DAMAGE_DEALT) end} GM.PersonalStats[PERSONAL_STAT_PULSE_DAMAGE_DEALT]   = {Name = "Pulse Damage Dealt", Color = COLOR_CYAN, Callback = function(pl) return GAMEMODE:GetPersonalLightStat(pl, PERSONAL_STAT_PULSE_DAMAGE_DEALT) end}    GM.RestrictedModels = {  "models/player/zombie_classic.mdl",  "models/player/zombie_classic_hbfix.mdl",  "models/player/zombine.mdl",  "models/player/zombie_soldier.mdl",  "models/player/zombie_fast.mdl",  "models/player/soldier_stripped.mdl",  "models/player/corpse1.mdl",  "models/player/charple.mdl",  "models/player/skeleton.mdl",  "models/player/zelpa/stalker.mdl",  "models/player/fatty/fatty.mdl",  "models/player/zombie_lacerator2.mdl" }    GM.RandomPlayerModels = {} for name, mdl in pairs(player_manager.AllValidModels()) do  if not table.HasValue(GM.RestrictedModels, string.lower(mdl)) then  table.insert(GM.RandomPlayerModels, name)  end end  GM.DeployableInfo = {} function GM:AddDeployableInfo(class, name, wepclass)  local tab = {Class = class, Name = name or "?", WepClass = wepclass}   self.DeployableInfo[#self.DeployableInfo + 1] = tab  self.DeployableInfo[class] = tab   return tab end GM:AddDeployableInfo("prop_arsenalcrate",  "Arsenal Crate",  "weapon_zs_arsenalcrate") GM:AddDeployableInfo("prop_resupplybox",  "Resupply Box",  "weapon_zs_resupplybox") GM:AddDeployableInfo("prop_remantler",  "Weapon Remantler",  "weapon_zs_remantler") GM:AddDeployableInfo("prop_messagebeacon",  "Message Beacon",  "weapon_zs_messagebeacon") GM:AddDeployableInfo("prop_sensor",  "Sensor",   "weapon_zs_sensor") GM:AddDeployableInfo("prop_gunturret",  "Gun Turret",   "weapon_zs_gunturret") GM:AddDeployableInfo("prop_gunturret_assault",  "Assault Turret",   "weapon_zs_gunturret_assault") GM:AddDeployableInfo("prop_gunturret_buckshot", "Blast Turret",   "weapon_zs_gunturret_buckshot") GM:AddDeployableInfo("prop_gunturret_rocket", "Rocket Turret",   "weapon_zs_gunturret_rocket") GM:AddDeployableInfo("prop_repairfield", "Repair Field Emitter", "weapon_zs_repairfield") GM:AddDeployableInfo("prop_zapper", "Zapper", "weapon_zs_zapper") GM:AddDeployableInfo("prop_nullifier", "Nullifier", "weapon_zs_nullifier") GM:AddDeployableInfo("prop_zapper_arc", "Arc Zapper", "weapon_zs_zapper_arc") GM:AddDeployableInfo("prop_ffemitter", "Force Field Emitter", "weapon_zs_ffemitter") GM:AddDeployableInfo("prop_manhack", "Manhack", "weapon_zs_manhack") GM:AddDeployableInfo("prop_manhack_saw", "Sawblade Manhack", "weapon_zs_manhack_saw") GM:AddDeployableInfo("prop_drone", "Drone", "weapon_zs_drone") GM:AddDeployableInfo("prop_drone_pulse", "Pulse Drone", "weapon_zs_drone_pulse") GM:AddDeployableInfo("prop_drone_hauler", "Hauler Drone", "weapon_zs_drone_hauler") GM:AddDeployableInfo("prop_rollermine", "Rollermine", "weapon_zs_rollermine") GM:AddDeployableInfo("prop_tv", "TV", "weapon_zs_tv") GM:AddDeployableInfo("prop_fridge", "Fridge", "weapon_zs_fridge")  GM.MaxSigils = 3  GM.DefaultRedeem = CreateConVar("zs_redeem", "4", FCVAR_REPLICATED + FCVAR_ARCHIVE + FCVAR_NOTIFY, "The amount of kills a zombie needs to do in order to redeem. Set to 0 to disable."):GetInt() cvars.AddChangeCallback("zs_redeem", function(cvar, oldvalue, newvalue)  GAMEMODE.DefaultRedeem = math.max(0, tonumber(newvalue) or 0) end)  GM.WaveOneZombies = 0.14           GM.ZombieSpeedMultiplier = math.Round(CreateConVar("zs_zombiespeedmultiplier", "1", FCVAR_REPLICATED + FCVAR_ARCHIVE + FCVAR_NOTIFY, "Zombie running speed will be scaled by this value."):GetFloat(), 2) cvars.AddChangeCallback("zs_zombiespeedmultiplier", function(cvar, oldvalue, newvalue)  GAMEMODE.ZombieSpeedMultiplier = math.ceil(100 * (tonumber(newvalue) or 1)) * 0.01 end)  GM.ZombieEarlyEasySpeedMultiplier = math.Round(CreateConVar("zs_zombieearlyspeedmultiplier", "1", FCVAR_REPLICATED + FCVAR_ARCHIVE + FCVAR_NOTIFY, "Ups the speed of humanoid zombies on early waves on easy maps."):GetFloat(), 2) cvars.AddChangeCallback("zs_zombieearlyspeedmultiplier", function(cvar, oldvalue, newvalue)  GAMEMODE.ZombieEarlyEasySpeedMultiplier = math.ceil(100 * (tonumber(newvalue) or 1)) * 0.01 end)    GM.ZombieDamageMultiplier = math.Round(CreateConVar("zs_zombiedamagemultiplier", "1", FCVAR_REPLICATED + FCVAR_ARCHIVE + FCVAR_NOTIFY, "Scales the amount of damage that zombies take. Use higher values for easy zombies, lower for harder."):GetFloat(), 2) cvars.AddChangeCallback("zs_zombiedamagemultiplier", function(cvar, oldvalue, newvalue)  GAMEMODE.ZombieDamageMultiplier = math.ceil(100 * (tonumber(newvalue) or 1)) * 0.01 end)  GM.TimeLimit = CreateConVar("zs_timelimit", "15", FCVAR_ARCHIVE + FCVAR_NOTIFY, "Time in minutes before the game will change maps. It will not change maps if a round is currently in progress but after the current round ends. -1 means never switch maps. 0 means always switch maps."):GetInt() * 60 cvars.AddChangeCallback("zs_timelimit", function(cvar, oldvalue, newvalue)  GAMEMODE.TimeLimit = tonumber(newvalue) or 15  if GAMEMODE.TimeLimit ~= -1 then  GAMEMODE.TimeLimit = GAMEMODE.TimeLimit * 60  end end)  GM.RoundLimit = CreateConVar("zs_roundlimit", "3", FCVAR_ARCHIVE + FCVAR_NOTIFY, "How many times the game can be played on the same map. -1 means infinite or only use time limit. 0 means once."):GetInt() cvars.AddChangeCallback("zs_roundlimit", function(cvar, oldvalue, newvalue)  GAMEMODE.RoundLimit = tonumber(newvalue) or 3 end)       GM.WaveOneLength = 200    GM.TimeAddedPerWave = 23    GM.NoNewHumansWave = 2    GM.NoSuicideWave = 1    GM.WaveZeroLength = 210    GM.WaveIntermissionLength = 60    GM.EndGameTime = 45    GM.SurvivalClips = 4      GM.ResupplyBoxCooldown = 60 GM.FridgeCooldown = 280    GM.LastHumanSound = Sound("zombiesurvival/sr_lasthuman.ogg")    GM.AllLoseSound = Sound("zombiesurvival/sr_music_lose.ogg")    GM.HumanWinSound = Sound("zombiesurvival/sr_music_win.ogg")    GM.HumanEscapeSound = Sound("zombiesurvival/sr_music_escape_trim_2.ogg")    GM.HumanWinSoloSound = Sound("zombiesurvival/sr_music_win_alt.ogg")    GM.DeathSound = Sound("zombiesurvival/human_death_stinger.ogg")      GM.PointSaving = 0      GM.LockItemTiers = false    GM.PointSavingLimit = 0    GM.WaveIntermissionLengthClassic = 20 GM.WaveOneLengthClassic = 120 GM.TimeAddedPerWaveClassic = 10    GM.MaxPoisonDamage = 50 GM.MaxBleedDamage = 50    GM.EndWavePointsBonus = 6    GM.EndWavePointsBonusPerWave = 2 