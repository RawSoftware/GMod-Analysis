CLASS.Name = "Sigil Tyrant" CLASS.TranslationName = "class_sigil_tyrant" CLASS.Description = "Out of all sigil creatures, this one seems to be more sentient, than the others. It does look like it wants something back. Could it be the sigils?" CLASS.Help = ""  CLASS.KnockbackScale = 0  CLASS.Health = 12000 CLASS.Speed = 180  CLASS.Unlocked = true CLASS.Hidden = true  CLASS.CanTaunt = true  CLASS.GreatEvil = true  CLASS.ModelScale = 1.4  CLASS.FearPerInstance = 1  CLASS.Points = (CLASS.Health/GM.HumanoidZombiePointRatio)/1.5  CLASS.SWEP = "weapon_zs_sigiltyrant"  CLASS.Model = Model("models/player/zombie_classic_hbfix.mdl")  CLASS.VoicePitch = 0.65       local math_random = math.random local math_min = math.min local CurTime = CurTime  local ACT_HL2MP_SWIM_MELEE = ACT_HL2MP_SWIM_MELEE local ACT_HL2MP_IDLE_CROUCH_MELEE = ACT_HL2MP_IDLE_CROUCH_MELEE local ACT_HL2MP_WALK_CROUCH_MELEE = ACT_HL2MP_WALK_CROUCH_MELEE local ACT_HL2MP_IDLE_MELEE = ACT_HL2MP_IDLE_MELEE local ACT_HL2MP_RUN_ZOMBIE = ACT_HL2MP_RUN_ZOMBIE local ACT_HL2MP_RUN_MELEE = ACT_HL2MP_RUN_MELEE  local StepRightSounds = {  "physics/metal/metal_canister_impact_soft1.wav",  "physics/metal/metal_canister_impact_soft2.wav",  "physics/metal/metal_canister_impact_soft3.wav", } local StepLeftSounds = {  "physics/glass/glass_sheet_step1.wav",  "physics/glass/glass_sheet_step2.wav",  "physics/glass/glass_sheet_step3.wav",  "physics/glass/glass_sheet_step4.wav", } function CLASS:PlayerFootstep(pl, vFootPos, iFoot, strSoundName, fVolume, pFilter)  if iFoot == 0 then  pl:EmitSound(StepLeftSounds[math_random(#StepLeftSounds)], 70)  else  pl:EmitSound(StepRightSounds[math_random(#StepRightSounds)], 70)  end   return true end  function CLASS:CalcMainActivity(pl, velocity)  if pl:WaterLevel() >= 3 then  return ACT_HL2MP_SWIM_MELEE2, -1  end   if pl:Crouching() then  if velocity:Length2DSqr() <= 1 then  return ACT_HL2MP_IDLE_CROUCH_MELEE2, -1  end   return ACT_HL2MP_WALK_CROUCH_MELEE2, -1  end   return ACT_HL2MP_WALK_MELEE2, -1 end  function CLASS:UpdateAnimation(pl, velocity, maxseqgroundspeed)  local len2d = velocity:Length2D()  if len2d > 0.5 then  pl:SetPlaybackRate(math_min(len2d * 0.7 / maxseqgroundspeed, 3))  else  pl:SetPlaybackRate(1)  end   return true end  function CLASS:DoAnimationEvent(pl, event, data)     if event == PLAYERANIMEVENT_ATTACK_PRIMARY then         pl:AnimRestartGesture(GESTURE_SLOT_ATTACK_AND_RELOAD, ACT_HL2MP_GESTURE_RANGE_ATTACK_MELEE2, true)         return ACT_INVALID     elseif event == PLAYERANIMEVENT_ATTACK_SECONDARY then         pl:AnimRestartGesture(GESTURE_SLOT_GRENADE, ACT_GMOD_GESTURE_ITEM_THROW, true)         return ACT_INVALID     elseif event == PLAYERANIMEVENT_ATTACK_GRENADE then         pl:AnimRestartGesture(GESTURE_SLOT_GRENADE, ACT_SIGNAL_FORWARD , true)         return ACT_INVALID     end end  local painsounds = {Sound("npc/metropolice/knockout2.wav"), Sound("npc/metropolice/pain1.wav"), Sound("npc/metropolice/pain2.wav"), Sound("npc/metropolice/pain3.wav"), Sound("npc/metropolice/pain4.wav")} function CLASS:PlayPainSound(pl)  pl:EmitSound(table.Random(painsounds), 75, math_random(45, 60), 0.9)   pl.NextPainSound = CurTime() + 1   return true end  function CLASS:PlayDeathSound(pl)  for i=1, 2 do  pl:EmitSound("npc/stalker/go_alert2a.wav", 75, math.random(40, 55), 1, CHAN_AUTO + i)  end   return true end  if SERVER then  function CLASS:OnSpawned(pl)  pl:CreateAmbience("sigiltyrantambience")  end   function CLASS:OnKilled(pl, attacker, inflictor, suicide, headshot, dmginfo)  local pos = pl:WorldSpaceCenter()   local effectdata = EffectData()  effectdata:SetOrigin(pos)  effectdata:SetNormal(pl:GetUp())  effectdata:SetEntity(pl)  util.Effect("explosion_sanity", effectdata, nil, true)   return true  end   function CLASS:ProcessDamage(pl, dmginfo)  if not pl.NextBlue or pl.NextBlue < CurTime() then  local effectdata = EffectData()  effectdata:SetOrigin(pl:WorldSpaceCenter())  effectdata:SetNormal(pl:GetUp())  effectdata:SetEntity(pl)  util.Effect("blueblood", effectdata, nil, true)   pl.NextBlue = CurTime() + 0.1  end          local attacker = dmginfo:GetAttacker()  local dist_sqr = attacker:WorldSpaceCenter():DistToSqr(pl:WorldSpaceCenter())   dmginfo:SetDamage(dmginfo:GetDamage() * (dist_sqr >= 200000 and 0.1 or 1))  end     end  if not CLIENT then return end     local angle_zero = angle_zero local LocalToWorld = LocalToWorld  function CLASS:PrePlayerDraw(pl)  render.SetBlend(0) end  function CLASS:PostPlayerDraw(pl)  render.SetBlend(1) end 