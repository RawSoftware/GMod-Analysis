CLASS.Name = "The Lost" CLASS.TranslationName = "class_butcher" CLASS.Description = "description_butcher" CLASS.Help = "controls_butcher"  CLASS.KnockbackScale = 0  CLASS.Health = 2300 CLASS.Speed = 120 CLASS.Unlocked = true CLASS.Hidden = true  CLASS.CanTaunt = true  CLASS.Special = true  CLASS.FearPerInstance = 0.5  CLASS.Points = CLASS.Health/GM.HumanoidZombiePointRatio CLASS.Cat = ZCLASSCAT_ASSAULT  CLASS.SWEP = "weapon_zs_sin"  CLASS.Model = Model("models/player/monk.mdl")  CLASS.VoicePitch = 0.65  CLASS.PainSounds = {"npc/zombie/zombie_pain1.wav", "npc/zombie/zombie_pain2.wav", "npc/zombie/zombie_pain3.wav", "npc/zombie/zombie_pain4.wav", "npc/zombie/zombie_pain5.wav", "npc/zombie/zombie_pain6.wav"} CLASS.DeathSounds = {"npc/zombie/zombie_die1.wav", "npc/zombie/zombie_die2.wav", "npc/zombie/zombie_die3.wav"}  local math_random = math.random local math_min = math.min local CurTime = CurTime  local ACT_HL2MP_SWIM_MELEE = ACT_HL2MP_SWIM_MELEE local ACT_HL2MP_IDLE_CROUCH_MELEE = ACT_HL2MP_IDLE_CROUCH_MELEE local ACT_HL2MP_WALK_CROUCH_MELEE = ACT_HL2MP_WALK_CROUCH_MELEE local ACT_HL2MP_IDLE_MELEE = ACT_HL2MP_IDLE_MELEE local ACT_HL2MP_RUN_ZOMBIE = ACT_HL2MP_RUN_ZOMBIE local ACT_HL2MP_RUN_MELEE = ACT_HL2MP_RUN_MELEE  local StepLeftSounds = {  "npc/fast_zombie/foot1.wav",  "npc/fast_zombie/foot2.wav" } local StepRightSounds = {  "npc/fast_zombie/foot3.wav",  "npc/fast_zombie/foot4.wav" } function CLASS:PlayerFootstep(pl, vFootPos, iFoot, strSoundName, fVolume, pFilter)  if iFoot == 0 then  pl:EmitSound(StepLeftSounds[math_random(#StepLeftSounds)], 70)  else  pl:EmitSound(StepRightSounds[math_random(#StepRightSounds)], 70)  end   pl.LastLaugh = (pl.LastLaugh or 15) + 1  if pl.LastLaugh >= 15 then  pl:EmitSound("vo/ravenholm/madlaugh0"..math_random(4)..".wav", 85, 65, 1, CHAN_WEAPON + 5)  pl.LastLaugh = 0  end   return true end  function CLASS:PlayPainSound(pl)  pl:EmitSound("vo/ravenholm/monk_pain0"..math_random(9)..".wav", 85, math.Rand(54, 57))  pl.NextPainSound = CurTime() + 0.5   return true end  function CLASS:PlayDeathSound(pl)  pl:EmitSound("vo/ravenholm/monk_death07.wav", 85, math.Rand(62, 63))   return true end  function CLASS:CalcMainActivity(pl, velocity)  if pl:WaterLevel() >= 3 then  return ACT_HL2MP_SWIM_MELEE, -1  end   if pl:Crouching() then  if velocity:Length2DSqr() <= 1 then  return ACT_HL2MP_IDLE_CROUCH_MELEE, -1  end   return ACT_HL2MP_WALK_CROUCH_MELEE, -1  end   if velocity:Length2DSqr() <= 1 then  return ACT_MP_STAND_IDLE, -1  end   return ACT_MP_WALK, -1 end  function CLASS:UpdateAnimation(pl, velocity, maxseqgroundspeed)  local len2d = velocity:Length2D()  if len2d > 0.5 then  pl:SetPlaybackRate(math_min(len2d / maxseqgroundspeed, 3))  else  pl:SetPlaybackRate(1)  end   return true end  function CLASS:DoAnimationEvent(pl, event, data)  if event == PLAYERANIMEVENT_ATTACK_PRIMARY then     return ACT_INVALID  elseif event == PLAYERANIMEVENT_RELOAD then  pl:AnimRestartGesture(GESTURE_SLOT_ATTACK_AND_RELOAD, ACT_GMOD_GESTURE_TAUNT_ZOMBIE, true)  return ACT_INVALID  end end  if not CLIENT then return end  CLASS.Icon = "zombiesurvival/killicons/butcher"  local angle_zero = angle_zero local LocalToWorld = LocalToWorld  local matFlesh = Material("Models/charple/charple4_sheet.vtf") function CLASS:PrePlayerDraw(pl)  render.SetColorModulation(0.4, 0.3, 0.3)  render.ModelMaterialOverride(matFlesh) end  local colGlow = Color(255, 30, 30) local matGlow = Material("effects/yellowflare") local vecEyeLeft = Vector(5, -3.5, -1) local vecEyeRight = Vector(5, -3.5, 1)  function CLASS:PostPlayerDraw(pl)  render.SetColorModulation(1, 1, 1)  render.ModelMaterialOverride()   if pl == MySelf and not pl:ShouldDrawLocalPlayer() or pl.SpawnProtection then return end   local pos, ang = pl:GetBonePositionMatrixed(6)  if pos then  render.SetMaterial(matGlow)  render.DrawSprite(LocalToWorld(vecEyeLeft, angle_zero, pos, ang), 6, 6, colGlow)  render.DrawSprite(LocalToWorld(vecEyeRight, angle_zero, pos, ang), 6, 6, colGlow)  end end 