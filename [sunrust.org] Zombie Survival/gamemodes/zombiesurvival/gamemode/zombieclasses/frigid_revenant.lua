CLASS.Base = "shadow_walker"  CLASS.Name = "Frigid Revenant" CLASS.TranslationName = "class_frigid_revenant" CLASS.Description = "description_frigid_revenant" CLASS.Help = "controls_frigid_revenant"  CLASS.SWEP = "weapon_zs_frigidrevenant"  CLASS.Wave = 4 / 6  CLASS.Health = 325 CLASS.HealthPerWave = 50 CLASS.Speed = 155  CLASS.KnockbackScale = 0.25  CLASS.Points = CLASS.Health/GM.HumanoidZombiePointRatio CLASS.Cat = ZCLASSCAT_SUPPORT  CLASS.Variant = nil  CLASS.ResistFrost = true  CLASS.Skeletal = true  if SERVER then  local function CreateFlesh(pl, damage, damagepos, damagedir)  damage = math.min(damage, 100)   pl:EmitSound("physics/body/body_medium_break"..math.random(2, 4)..".wav", 74, 125 - damage * 0.50)   damagepos = pl:LocalToWorld(damagepos)   for i=1, math.max(1, math.floor(damage / 33)) do  local ent = ents.Create("projectile_frigid_revenant")  if ent:IsValid() then  local heading = (damagedir + VectorRand() * 0.3):GetNormalized()  ent:SetPos(damagepos + heading)  ent:SetOwner(pl)  ent:Spawn()   local phys = ent:GetPhysicsObject()  if phys:IsValid() then  phys:Wake()  phys:SetVelocityInstantaneous(math.min(200, 50 + damage ^ math.Rand(1.15, 1.25)) * heading)  end  end  end  end   function CLASS:OnKilled(pl, attacker, inflictor, suicide, headshot, dmginfo, assister)  local pos = pl:WorldToLocal(dmginfo:GetDamagePosition())  local norm = dmginfo:GetDamageForce():GetNormalized() * -1  timer.Simple(0, function()  if pl:IsValid() then  CreateFlesh(pl, 100, pos, norm)  end  end)  end end  if not CLIENT then return end  CLASS.Icon = "zombiesurvival/killicons/skeletal_walker" CLASS.IconColor = Color(50, 90, 135)  local render_SetBlend = render.SetBlend local render_SetColorModulation = render.SetColorModulation local render_SetMaterial = render.SetMaterial local render_DrawSprite = render.DrawSprite local render_ModelMaterialOverride = render.ModelMaterialOverride local angle_zero = angle_zero local LocalToWorld = LocalToWorld  local colGlow = Color(200, 175, 255) local matGlow = Material("sprites/glow04_noz") local matBlack = CreateMaterial("shadowlurkersheet", "UnlitGeneric", {["$basetexture"] = "Tools/toolsblack", ["$model"] = 1}) local vecEyeLeft = Vector(5, -3.5, -1) local vecEyeRight = Vector(5, -3.5, 1)  function CLASS:PrePlayerDraw(pl)  render_SetBlend(0.85)  render_SetColorModulation(0.6, 0.3, 0.8) end  function CLASS:PostPlayerDraw(pl)  render_SetBlend(1)  render_SetColorModulation(1, 1, 1) end  function CLASS:PrePlayerDrawOverrideModel(pl)  render_ModelMaterialOverride(matBlack) end  function CLASS:PostPlayerDrawOverrideModel(pl)  render_ModelMaterialOverride(nil)   if pl == MySelf and not pl:ShouldDrawLocalPlayer() or pl.SpawnProtection or not pl:Alive() then return end   local pos, ang = pl:GetBonePositionMatrixed(6)  if pos then  render_SetMaterial(matGlow)  render_DrawSprite(LocalToWorld(vecEyeLeft, angle_zero, pos, ang), 10, 0.5, colGlow)  render_DrawSprite(LocalToWorld(vecEyeLeft, angle_zero, pos, ang), 4, 4, colGlow)  render_DrawSprite(LocalToWorld(vecEyeRight, angle_zero, pos, ang), 10, 0.5, colGlow)  render_DrawSprite(LocalToWorld(vecEyeRight, angle_zero, pos, ang), 4, 4, colGlow)  end end 