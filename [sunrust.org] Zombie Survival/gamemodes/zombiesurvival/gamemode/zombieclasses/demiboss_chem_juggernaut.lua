CLASS.Name = "Chem Juggernaut" CLASS.TranslationName = "class_chemjuggernaut" CLASS.Description = "description_chemjuggernaut" CLASS.Help = "controls_chemjuggernaut"  CLASS.Demiboss = true  CLASS.Model = Model("models/player/zombie_lacerator2.mdl") CLASS.OverrideModel = Model("models/Zombie/Poison.mdl")  CLASS.CanTaunt = true  CLASS.SWEP = "weapon_zs_chemjuggernaut"  CLASS.KnockbackScale = 0.5  CLASS.FearPerInstance = 0.4  CLASS.Wave = 0  CLASS.Health = 975 CLASS.Speed = 195  CLASS.Cat = ZCLASSCAT_DESTRUC CLASS.Points = CLASS.Health/GM.HumanoidZombiePointRatio  CLASS.VoicePitch = 0.7  CLASS.BloodColor = BLOOD_COLOR_GREEN  CLASS.NoHideMainModel = true  local math_random = math.random local math_min = math.min local math_max = math.max local math_ceil = math.ceil local DMG_BULLET = DMG_BULLET local ACT_HL2MP_IDLE_ZOMBIE = ACT_HL2MP_IDLE_ZOMBIE local ACT_HL2MP_SWIM_PISTOL = ACT_HL2MP_SWIM_PISTOL local ACT_HL2MP_IDLE_CROUCH_ZOMBIE = ACT_HL2MP_IDLE_CROUCH_ZOMBIE local ACT_HL2MP_RUN_ZOMBIE = ACT_HL2MP_RUN_ZOMBIE local ACT_HL2MP_WALK_CROUCH_ZOMBIE_01 = ACT_HL2MP_WALK_CROUCH_ZOMBIE_01  function CLASS:PlayerFootstep(pl, vFootPos, iFoot, strSoundName, fVolume, pFilter)  if iFoot == 0 then  pl:EmitSound("npc/zombie_poison/pz_left_foot1.wav", 70, math_random(95, 105))  else  pl:EmitSound("npc/zombie_poison/pz_right_foot1.wav", 70, math_random(95, 105))  end end  function CLASS:PlayPainSound(pl)  pl:EmitSound("npc/combine_soldier/pain"..math.random(3)..".wav", 70, math_random(45, 50))  pl.NextPainSound = CurTime() + 0.5  return true end  function CLASS:PlayDeathSound(pl)  pl:EmitSound("npc/zombie_poison/pz_die2.wav", 70, math.random(60,65))  return true end  function CLASS:CalcMainActivity(pl, velocity)  if pl:WaterLevel() >= 3 then  return ACT_HL2MP_SWIM_PISTOL, -1  end   if velocity:Length2DSqr() <= 1 then  if pl:Crouching() and pl:OnGround() then  return ACT_HL2MP_IDLE_CROUCH_ZOMBIE, -1  end   return ACT_HL2MP_IDLE_ZOMBIE, -1  end   if pl:Crouching() and pl:OnGround() then  return ACT_HL2MP_WALK_CROUCH_ZOMBIE_01 - 1 + math_ceil((CurTime() / 4 + pl:EntIndex()) % 3), -1  end   return ACT_HL2MP_RUN_ZOMBIE, -1 end  function CLASS:UpdateAnimation(pl, velocity, maxseqgroundspeed)  local len = velocity:Length()  if len > 1 then  pl:SetPlaybackRate(math_min(len / maxseqgroundspeed * 0.45, 3))  else  pl:SetPlaybackRate(1)  end   return true end  function CLASS:DoAnimationEvent(pl, event, data)  if event == PLAYERANIMEVENT_ATTACK_PRIMARY then  pl:DoZombieAttackAnim(data)  return ACT_INVALID  elseif event == PLAYERANIMEVENT_RELOAD then  pl:AnimRestartGesture(GESTURE_SLOT_ATTACK_AND_RELOAD, ACT_GMOD_GESTURE_TAUNT_ZOMBIE, true)  return ACT_INVALID  end end  if SERVER then function CLASS:OnSpawned(pl)  pl:CreateAmbience("bursterambience") end end  if not CLIENT then return end  CLASS.Icon = "zombiesurvival/killicons/chemzombie" CLASS.IconColor = Color(50, 145, 50)  local render_SetBlend = render.SetBlend local render_SetColorModulation = render.SetColorModulation local render_ModelMaterialOverride = render.ModelMaterialOverride local render_MaterialOverrideByIndex = render.MaterialOverrideByIndex  local matSkin = CreateMaterial("chemnautsheet", "VertexLitGeneric", {["$basetexture"] = "Models/headcrab_classic/headcrabsheet", ["$model"] = 1}) local matSkin1 = Material("zombiesurvival/zombie/combinesoldiersheet_chem") local matSkin2 = Material("zombiesurvival/zombie/fast_zombie_sheet_chem_5") local vecEyeLeft = Vector(5, -3.5, -1) local vecEyeRight = Vector(5, -3.5, 1)  function CLASS:PrePlayerDraw(pl)  render_MaterialOverrideByIndex(0, matSkin2)  render_MaterialOverrideByIndex(1, matSkin1)  render_SetColorModulation(0.45, 0.65, 0.45) end  function CLASS:PostPlayerDraw(pl)  render_MaterialOverrideByIndex(0)  render_MaterialOverrideByIndex(1)  render_SetColorModulation(1, 1, 1) end  function CLASS:PrePlayerDrawOverrideModel(pl)  render_ModelMaterialOverride(matSkin)  render.SetColorModulation(0.45, 0.85, 0.45) end  function CLASS:PostPlayerDrawOverrideModel(pl)  render_ModelMaterialOverride(nil)  render_SetColorModulation(1, 1, 1) end 