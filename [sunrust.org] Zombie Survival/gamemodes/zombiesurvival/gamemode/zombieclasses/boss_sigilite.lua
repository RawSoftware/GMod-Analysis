CLASS.Name = "Sigilite" CLASS.TranslationName = "class_sigilite" CLASS.Description = "description_sigilite" CLASS.Help = "controls_sigilite"  CLASS.Boss = true  CLASS.Health = 2050 CLASS.Speed = 180  CLASS.Model = Model("models/player/breen.mdl")  CLASS.KnockbackScale = 0  CLASS.FearPerInstance = 1  CLASS.Points = CLASS.Health/GM.HumanoidZombiePointRatio CLASS.Cat = ZCLASSCAT_DESTRUC CLASS.NoPlayerColor = true  CLASS.BloodColor = -1  CLASS.SWEP = "weapon_zs_sigilite"  local math_min = math.min local ACT_HL2MP_SWIM_ZOMBIE = ACT_HL2MP_SWIM_ZOMBIE local ACT_HL2MP_IDLE_CROUCH_ZOMBIE = ACT_HL2MP_IDLE_CROUCH_ZOMBIE local ACT_HL2MP_IDLE_ZOMBIE = ACT_HL2MP_IDLE_ZOMBIE local ACT_HL2MP_RUN_ZOMBIE = ACT_HL2MP_RUN_ZOMBIE  function CLASS:AltUse(pl) end  function CLASS:UpdateAnimation(pl, velocity, maxseqgroundspeed)  pl:SetPlaybackRate(0.5)  return true end  function CLASS:PlayerFootstep(pl, vFootPos, iFoot, strSoundName, fVolume, pFilter)  return true end  function CLASS:PlayerStepSoundTime(pl, iType, bWalking)  return 1000 end  function CLASS:CalcMainActivity(pl, velocity)  if pl:WaterLevel() >= 3 then  return ACT_HL2MP_RUN_ZOMBIE, -1  end   if pl:Crouching() and pl:OnGround() then  return ACT_HL2MP_IDLE_CROUCH_ZOMBIE, -1  end   if velocity:Length2DSqr() <= 1 then  return ACT_HL2MP_IDLE_ZOMBIE, -1  end   return ACT_HL2MP_RUN_ZOMBIE, -1 end  function CLASS:DoAnimationEvent(pl, event, data)  if event == PLAYERANIMEVENT_ATTACK_PRIMARY then  pl:DoZombieAttackAnim(data)  return ACT_INVALID  elseif event == PLAYERANIMEVENT_RELOAD then  pl:AnimRestartGesture(GESTURE_SLOT_ATTACK_AND_RELOAD, ACT_GMOD_GESTURE_TAUNT_ZOMBIE, true)  return ACT_INVALID  end end  local painsounds = {"npc/dog/dog_alarmed3.wav", "npc/dog/dog_angry1.wav", "npc/dog/dog_growl2.wav"} function CLASS:PlayPainSound(pl)  local rs = table.Random(painsounds)  pl:EmitSound(rs, 75, 95)  pl:EmitSound(rs, 75, 100)  pl.NextPainSound = CurTime() + 1.5   return true end  function CLASS:PlayDeathSound(pl)  pl:EmitSound("npc/dog/dog_scared1.wav", 75, 85)  pl:EmitSound("npc/dog/dog_scared1.wav", 75, 90)  return true end  if SERVER then  function CLASS:OnKilled(pl, attacker, inflictor, suicide, headshot, dmginfo)  local pos = pl:WorldSpaceCenter()   local effectdata = EffectData()  effectdata:SetOrigin(pos)  effectdata:SetNormal(pl:GetUp())  effectdata:SetEntity(pl)  util.Effect("explosion_sigilitedeath", effectdata, nil, true)   return true  end   function CLASS:OnSpawned(pl)  pl:CreateAmbience("sigiliteambience")  end   function CLASS:AltUse(pl)  if pl.SigiliteProj and pl.SigiliteProj:IsValid() then  if CurTime() >= pl.SigiliteProj.Created + 0.75  then pl.SigiliteProj:TeleportCheck() end  elseif not pl.NextProjectionTele or CurTime() >= pl.NextProjectionTele then             if math.abs(pl:GetVelocity().z) == 0 then                 local proj = ents.Create("prop_sigilite_projection")                 if proj:IsValid() then                     pl.NextProjectionTele = CurTime() + 5                     pl.LastRangedAttack = CurTime()                     proj:SetPos(pl:GetPos() + Vector(0, 0, not pl:Crouching() and 36 or 0))                     proj:SetOwner(pl)                     proj:Spawn()                 end             end  elseif not pl.NextEmitSigiliteCDSound or CurTime() >= pl.NextEmitSigiliteCDSound then  pl.NextEmitSigiliteCDSound = CurTime() + 2  pl:SendLua("MySelf:EmitSound(\"npc/dog/dog_playfull1.wav\", 70, 90)")  pl:SendLua("MySelf:EmitSound(\"npc/dog/dog_playfull1.wav\", 70, 95)")  end  end end  if not CLIENT then return end  CLASS.Icon = "zombiesurvival/killicons/sigilite2"  function CLASS:PrePlayerDraw(pl)  render.SetBlend(0) end  function CLASS:PostPlayerDraw(pl)  render.SetBlend(1) end 