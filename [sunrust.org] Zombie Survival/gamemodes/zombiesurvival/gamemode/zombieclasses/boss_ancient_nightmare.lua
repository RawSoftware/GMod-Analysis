CLASS.Base = "boss_nightmare"  CLASS.Name = "Ancient Nightmare" CLASS.TranslationName = "class_ancient_nightmare" CLASS.Description = "description_ancient_nightmare" CLASS.Help = "controls_ancient_nightmare"  CLASS.Boss = true  CLASS.Health = 2250 CLASS.HealthPerWave = 75 CLASS.Speed = 155  CLASS.Points = CLASS.Health/GM.HumanoidZombiePointRatio CLASS.Cat = ZCLASSCAT_DESTRUC  CLASS.SWEP = "weapon_zs_anightmare"  CLASS.Model = Model("models/player/zombie_classic_hbfix.mdl") CLASS.OverrideModel = false  CLASS.Skeletal = true  local math_random = math.random local math_Rand = math.Rand  function CLASS:PlayerFootstep(pl, vFootPos, iFoot, strSoundName, fVolume, pFilter)  if math_random(2) == 1 then  pl:EmitSound("npc/barnacle/neck_snap1.wav", 65, math_random(115, 130), 0.27)  else  pl:EmitSound("npc/barnacle/neck_snap2.wav", 65, math_random(115, 130), 0.27)  end   return true end  if not CLIENT then return end  CLASS.Icon = "zombiesurvival/killicons/ancient_nightmare2"  local function CreateBoneOffsets(pl)  pl.m_NightmareBoneOffsetsNext = CurTime() + math_Rand(0.02, 0.1)   local offsets = {}  local angs = {}  for i=1, pl:GetBoneCount() - 1 do  if math_random(3) == 3 then  offsets[i] = VectorRand():GetNormalized() * math.Rand(0.5, 3)  end  if math_random(5) == 5 then  angs[i] = Angle(math_Rand(-5, 5), math_Rand(-15, 15), math_Rand(-5, 5))  end  end  pl.m_NightmareBoneOffsets = offsets  pl.m_NightmareBoneAngles = angs end  function CLASS:BuildBonePositions(pl)  if not pl.m_NightmareBoneOffsets or CurTime() >= pl.m_NightmareBoneOffsetsNext then  CreateBoneOffsets(pl)  end   local offsets = pl.m_NightmareBoneOffsets  local angs = pl.m_NightmareBoneAngles  for i=1, pl:GetBoneCount() - 1 do  if offsets[i] then  pl:ManipulateBonePosition(i, offsets[i])  end  if angs[i] then  pl:ManipulateBoneAngles(i, angs[i])  end  end end  function CLASS:PrePlayerDraw(pl)  render.SetBlend(0) end  function CLASS:PostPlayerDraw(pl)  render.SetBlend(1) end