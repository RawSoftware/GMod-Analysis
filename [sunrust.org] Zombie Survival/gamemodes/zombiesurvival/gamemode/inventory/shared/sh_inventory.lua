INVCAT_TRINKETS = 1 INVCAT_COMPONENTS = 2  GM.ZSInventoryItemData = {} GM.ZSInventoryCategories = {     [INVCAT_TRINKETS] = "Trinkets",     [INVCAT_COMPONENTS] = "Components" } GM.ZSInventoryPrefix = {     [INVCAT_TRINKETS] = "trin",     [INVCAT_COMPONENTS] = "comp" }  GM.Assemblies = {} GM.Breakdowns = {}  function GM:GetInventoryItemType(item)     for typ, aff in pairs(self.ZSInventoryPrefix) do         if string.sub(item, 1, 4) == aff then             return typ         end     end      return -1 end  local index = 1 function GM:AddInventoryItemData(intname, name, description, weles, tier, stocks)     local datatab = {PrintName = name, DroppedEles = weles, Tier = tier, Description = description, Stocks = stocks, Index = index}     self.ZSInventoryItemData[intname] = datatab     self.ZSInventoryItemData[index] = datatab      index = index + 1      return datatab end   function GM:AddWeaponBreakdownRecipe(weapon, result)     local datatab = {Result = result, Index = index}     self.Breakdowns[weapon] = datatab     for i = 0, 3 do         self.Breakdowns[self:GetWeaponClassOfQuality(weapon, i)] = datatab         self.Breakdowns[self:GetWeaponClassOfQuality(weapon, i, 1)] = datatab     end      self.Breakdowns[#self.Breakdowns + 1] = datatab end  GM:AddWeaponBreakdownRecipe("weapon_zs_novablaster", "comp_contaecore") GM:AddWeaponBreakdownRecipe("weapon_zs_swissarmyknife", "comp_shortblade")    GM.Assemblies["weapon_zs_bust"]  = {"comp_busthead",  "weapon_zs_plank"} GM.Assemblies["weapon_zs_manhack_saw"]  = {"comp_sawblade",  "weapon_zs_manhack"} GM.Assemblies["weapon_zs_megamasher"]  = {"comp_propanecan",  "weapon_zs_sledgehammer"} GM.Assemblies["weapon_zs_electrohammer"]  = {"comp_electrobattery", "weapon_zs_hammer"} GM.Assemblies["weapon_zs_tithonus"]  = {"comp_contaecore", "weapon_zs_oberon"} GM.Assemblies["weapon_zs_molotov"]  = {"comp_propanecan", "weapon_zs_glassbottle"} GM.Assemblies["weapon_zs_blareduct"]  = {"trinket_reload_vest", "weapon_zs_pipe"} GM.Assemblies["weapon_zs_cinderrod"]  = {"comp_propanecan", "weapon_zs_blareduct"} GM.Assemblies["weapon_zs_innervator"]  = {"comp_electrobattery", "weapon_zs_jackhammer"} GM.Assemblies["weapon_zs_stabber"]  = {"comp_shortblade", "weapon_zs_annabelle"} GM.Assemblies["trinket_electromagnet"] = {"comp_electrobattery", "trinket_magnet"} GM.Assemblies["trinket_proj_rocket"] = {"comp_cpuparts",         "trinket_proj_weight"}  local bounty_comp = GM:AddInventoryItemData("comp_bounty",     "Bounty Reward", "A defiled reward from slaughtering those that would slaughter you.", "models/Gibs/HGIBS.mdl") bounty_comp.ConsoleCommand = "zs_unveil" bounty_comp.Cursed = true  GM:AddInventoryItemData("comp_busthead", "Bust Head", "A bust head that could be fitted on to something handle shaped.", "models/props_combine/breenbust.mdl") GM:AddInventoryItemData("comp_sawblade", "Saw Blade", "A sharp saw blade ready to be fitted onto fast moving objects.", "models/props_junk/sawblade001a.mdl") GM:AddInventoryItemData("comp_propanecan", "Propane Canister", "A propane canister. With the correct setup, has the potential to ignite things.", "models/props_junk/propane_tank001a.mdl") GM:AddInventoryItemData("comp_electrobattery", "Electrobattery", "An electrobattery. Could be used to improve repairing motions.", "models/items/car_battery01.mdl") GM:AddInventoryItemData("comp_contaecore", "Contained Energy Core", "A contained energy core, that has an internal charging mechanism.", "models/Items/combine_rifle_cartridge01.mdl") GM:AddInventoryItemData("comp_metalpole", "Metal Pole", "Long metal pole that could be used to attack things from a distance.", "models/props_c17/signpole001.mdl") GM:AddInventoryItemData("comp_salleather", "Salvaged Leather", "Pieces of leather that are hard enough to make a nasty impact.", "models/props_junk/shoe001.mdl") GM:AddInventoryItemData("comp_gyroscope", "Gyroscope", "A metal gyroscope used to calculate orientation.", "models/maxofs2d/hover_rings.mdl") GM:AddInventoryItemData("comp_reciever", "Reciever", "A radio reciever. Could be used for automation and communication purposes.", "models/props_lab/reciever01b.mdl") GM:AddInventoryItemData("comp_cpuparts", "CPU Parts", "Parts from a central processor.", "models/props_lab/harddrive01.mdl") GM:AddInventoryItemData("comp_shortblade", "Short Blade", "A short metal blade for cutting and stabbing.", "models/weapons/w_knife_t.mdl") GM:AddInventoryItemData("comp_multibarrel", "Multi-Bored Barrel", "An unusual gun barrel which allows multiple bullets to pass through.", "models/props_lab/pipesystem03a.mdl") GM:AddInventoryItemData("comp_holoscope", "Holographic Scope", "A holographic weapon sight with magnification.", {     ["base"] = { type = "Model", model = "models/props_c17/utilityconnecter005.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(3.273, 1.728, -0.843), angle = Angle(74.583, 180, 0), size = Vector(2.207, 0.105, 0.316), color = Color(50, 50, 66, 255), surpresslightning = false, material = "models/props_pipes/pipeset_metal02", skin = 0, bodygroup = {} },     ["base+"] = { type = "Model", model = "models/props_combine/tprotato1.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "base", pos = Vector(0.492, -1.03, 0), angle = Angle(0, -78.715, 90), size = Vector(0.03, 0.02, 0.032), color = Color(50, 50, 66, 255), surpresslightning = false, material = "models/props_pipes/pipeset_metal02", skin = 0, bodygroup = {} } })    local trinket, trinketwep local hpweles = {     ["ammo"] = { type = "Model", model = "models/healthvial.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(4.5, 2.5, 3), angle = Angle(15.194, 80.649, 180), size = Vector(0.6, 0.6, 1.2), color = Color(145, 132, 0, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} } } local mweles = {     ["band++"] = { type = "Model", model = "models/props_junk/harpoon002a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "band", pos = Vector(2.599, 1, 1), angle = Angle(0, -25, 0), size = Vector(0.019, 0.15, 0.15), color = Color(55, 52, 51, 255), surpresslightning = false, material = "models/props_pipes/pipemetal001a", skin = 0, bodygroup = {} },     ["band+"] = { type = "Model", model = "models/props_junk/harpoon002a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "band", pos = Vector(-2.401, -1, 0.5), angle = Angle(0, 155.455, 0), size = Vector(0.019, 0.15, 0.15), color = Color(55, 52, 51, 255), surpresslightning = false, material = "models/props_pipes/pipemetal001a", skin = 0, bodygroup = {} },     ["band"] = { type = "Model", model = "models/props_phx/construct/metal_plate_curve360.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(4.5, 2, -0.5), angle = Angle(111.039, -92.338, 97.013), size = Vector(0.045, 0.045, 0.025), color = Color(55, 52, 51, 255), surpresslightning = false, material = "models/props_pipes/pipemetal001a", skin = 0, bodygroup = {} } } local pweles = {     ["perf"] = { type = "Model", model = "models/props_combine/combine_lock01.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(4, 0.5, -2), angle = Angle(5, 90, 0), size = Vector(0.25, 0.15, 0.3), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} } } local oweles = {     ["perf"] = { type = "Model", model = "models/props_combine/combine_generator01.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(2.799, 2, -1.5), angle = Angle(5, 180, 0), size = Vector(0.05, 0.039, 0.07), color = Color(196, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} } } local deweles = {     ["perf"] = { type = "Model", model = "models/props_lab/blastdoor001b.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(5, 2, -5.715), angle = Angle(0, 180, 0), size = Vector(0.1, 0.039, 0.09), color = Color(168, 155, 0, 255), surpresslightning = false, material = "models/props_pipes/pipeset_metal", skin = 0, bodygroup = {} } } local supweles = {     ["perf"] = { type = "Model", model = "models/props_lab/reciever01c.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(5, 1.5, -2), angle = Angle(5, 180, 92.337), size = Vector(0.2, 0.699, 0.6), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} } }  trinket, trinketwep = GM:AddTrinket("Blood Transfusion Pack", "bloodpack", false, ITEMSUBCAT_TRINKETS_DEFENSIVE, hpweles, 2, "Generates 20 blood armor if health falls bellow 50%\nConsumes itself on activation.", nil, 15) trinketwep.PermitDismantle = true    GM:AddTrinket("Oxygen Tank", "oxygentank", false, ITEMSUBCAT_TRINKETS_PERFORMANCE, {     ["base"] = { type = "Model", model = "models/props_c17/canister01a.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(4, 3, -1), angle = Angle(180, 0, 0), size = Vector(0.5, 0.5, 0.5), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} } }, nil, "10x breathing time underwater.")   trinket, trinketwep = GM:AddTrinket("Night Vision Goggles", "nightvision", true, ITEMSUBCAT_TRINKETS_PERFORMANCE, pweles, 2, "-50% effect of dim vision and ability to see in the dark\n-40% effect of vision affecting effects\n-45% fright duration") GM:AddSkillModifier(trinket, SKILLMOD_DIMVISION_EFF_MUL, -0.5) GM:AddSkillModifier(trinket, SKILLMOD_FRIGHT_DURATION_MUL, -0.45) GM:AddSkillModifier(trinket, SKILLMOD_VISION_ALTER_DURATION_MUL, -0.4) GM:AddSkillFunction(trinket, function(pl, active)     if CLIENT and pl == MySelf and GAMEMODE.m_NightVision and not active then         surface.PlaySound("items/nvg_off.wav")         GAMEMODE.m_NightVision = false     end end) trinketwep.PermitDismantle = true  local eicew = {     ["base"] = { type = "Model", model = "models/gibs/glass_shard04.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(3.556, 2.519, -1.468), angle = Angle(0, -5.844, -75.974), size = Vector(0.5, 0.5, 0.5), color = Color(0, 137, 255, 255), surpresslightning = true, material = "models/shiny", skin = 0, bodygroup = {} } }  GM:AddTrinket("Ice Shield", "iceburst", false, ITEMSUBCAT_TRINKETS_DEFENSIVE, eicew, nil, "Releases an ice burst when taking a melee hit, slowing zombies down\nRecharges every 40 seconds")  GM:AddSkillFunction(GM:AddTrinket("Necro Confusion Device", "necrosense", false, ITEMSUBCAT_TRINKETS_DEFENSIVE, deweles, 4, "You appear to zombies at low health"), function(pl, active) pl:SetDTBool(DT_PLAYER_BOOL_NECRO, active) end)  trinket, trinketwep = GM:AddTrinket("Reactive Flasher", "reactiveflasher", false, ITEMSUBCAT_TRINKETS_DEFENSIVE, deweles, 2, "Blinds and disorients melee attacker for 2 seconds\nRecharges every 75 seconds") trinketwep.PermitDismantle = true    trinket, trinketwep = GM:AddTrinket("Arsenal Pack", "arsenalpack", false, ITEMSUBCAT_TRINKETS_SUPPORT, {     ["base"] = { type = "Model", model = "models/Items/item_item_crate.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(4, 2, -1), angle = Angle(0, -90, 180), size = Vector(0.35, 0.35, 0.35), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} } }, 4, "Allows nearby humans to purchase from the arsenal menu.", "arsenalpack", 3) trinketwep.PermitDismantle = true  trinket, trinketwep = GM:AddTrinket("Resupply Pack", "resupplypack", true, ITEMSUBCAT_TRINKETS_SUPPORT, {     ["base"] = { type = "Model", model = "models/Items/ammocrate_ar2.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(4, 2, -1), angle = Angle(0, -90, 180), size = Vector(0.35, 0.35, 0.35), color = Color(255, 255, 255, 255), surpresslightning = false, material = "", skin = 0, bodygroup = {} } }, 4, "Allows humans to resupply from you\nPress LMB with the pack in your hand to resupply yourself.", "resupplypack", 3) trinketwep.PermitDismantle = true  GM:AddTrinket("Magnet", "magnet", true, ITEMSUBCAT_TRINKETS_SUPPORT, supweles, nil, "Slowly pulls ammo and weapons towards you\nMust be equipped to take effect", "magnet") GM:AddTrinket("Electromagnet", "electromagnet", true, ITEMSUBCAT_TRINKETS_SUPPORT, supweles, nil, "Pulls ammo and weapons towards you quickly\nMust be equipped to take effect", "magnet_electro")     for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Armband",     Suffix  = "armband",     Category  = ITEMSUBCAT_TRINKETS_MELEE,     WorldElements  = oweles,     ScrapScaling    = {4, 6, 11, 20},     ForbidDismantle = true, })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_MELEE_SWING_DELAY_MUL, -0.05 * quality, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_MELEE_DAMAGE_TAKEN_MUL, -0.02 * quality - 0.04, quality)      if quality == 4 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_BLOODARMOR_GAIN_MUL, 0.25, quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Culinary Book",     Suffix  = "condiments",     Category  = ITEMSUBCAT_TRINKETS_SUPPORT,     WorldElements  = oweles,     ScrapScaling    = {4, 6, 11, 20},     ForbidDismantle = true, })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_FOODRECOVERY_MUL, 0.1 * quality, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_FOOD_PROCESSING_MUL, 0.1 * quality, quality)      if quality == 4 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_CLEANSES_FROM_FOOD, 1, quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Escape Manual",     Suffix  = "emanual",     Category  = ITEMSUBCAT_TRINKETS_PERFORMANCE,     WorldElements  = oweles,     ScrapScaling    = {4, 6, 11, 20},     ForbidDismantle = true, })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_BARRICADE_PHASE_SPEED_MUL, 0.2 * quality, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_LOW_HEALTH_SLOW_MUL, -0.1 * quality, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_PHASE_PROGRESS_LOSS_MUL, -0.1 * quality, quality)      if quality == 4 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_SPEED, 7, quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Weaponry Guide",     Suffix  = "aimaid",     Category  = ITEMSUBCAT_TRINKETS_OFFENSIVE,     WorldElements  = oweles,     ScrapScaling    = {4, 6, 11, 20},     ForbidDismantle = true })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_AIM_SHAKE_MUL, -0.06 * quality, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_AIMSPREAD_MUL, -0.04 * quality, quality)      if quality == 4 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_WEAPON_DAMAGE_MUL, 0.04, quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Vitamins",     Suffix  = "vitamins",     Category  = ITEMSUBCAT_TRINKETS_DEFENSIVE,     WorldElements  = oweles,     ScrapScaling    = {4, 6, 11, 20},     ForbidDismantle = true, })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_HEALTH, 4 + 3 * quality, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_POISON_DAMAGE_TAKEN_MUL, -0.08 * quality, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_BLEED_DAMAGE_TAKEN_MUL, -0.08 * quality, quality)      if quality == 4 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_CLOUD_TIME, 0.3, quality)     end end     for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Abyssal Eye",     Suffix  = "abyssaleye",     Category  = ITEMSUBCAT_TRINKETS_OFFENSIVE,     WorldElements  = oweles,     ScrapScaling    = {5, 12, 15, 25},     PermitDismantle = true })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_REAPER_STACK_CHANCE_ON_KILL, 0.06 + 0.015 * (quality - 1), quality)      if quality == 4 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_MAXIMUM_REAPER_STACKS, 1, quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Festering Scourge",     Suffix  = "festering_scourge",     Category  = ITEMSUBCAT_TRINKETS_OFFENSIVE,     WorldElements  = oweles,     ScrapScaling    = {5, 12, 15, 25},     PermitDismantle = true })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_FERVOR_STACK_CHANCE_ON_KILL, 0.06 + 0.015 * (quality - 1), quality)      if quality == 4 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_MAXIMUM_FERVOR_STACKS, 1, quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Circle of Sin",     Suffix  = "circle_of_sin",     Category  = ITEMSUBCAT_TRINKETS_OFFENSIVE,     WorldElements  = oweles,     ScrapScaling    = {5, 12, 15, 25},     PermitDismantle = true })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_RENEGADE_STACK_CHANCE_ON_KILL, 0.06 + 0.015 * (quality - 1), quality)      if quality == 4 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_MAXIMUM_RENEGADE_STACKS, 1, quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Alternova",     Suffix  = "alternova",     Category  = ITEMSUBCAT_TRINKETS_SUPPORT,     WorldElements  = oweles,     ScrapScaling    = {10, 12, 15, 19},     PermitDismantle = true,     BaseDescription = "Soften becomes a Nova after 2.5 seconds\nApplying Soften or Sap to zombies with a Nova explodes it" })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_NOVA_DAMAGE, 40 + (quality - 1) * 7, quality) end  trinket, trinketwep = GM:AddTrinket("Blood Angel Maw", "bloodmaw", false, ITEMSUBCAT_TRINKETS_DEFENSIVE, hpweles, nil, "-95% time to eat food\n+100% recovery from food") GM:AddSkillModifier(trinket, SKILLMOD_FOODRECOVERY_MUL, 1) GM:AddSkillModifier(trinket, SKILLMOD_FOODEATTIME_MUL, -0.95) trinketwep.PermitDismantle = true  trinket, trinketwep = GM:AddTrinket("Spirit Essence", "spiritess", false, ITEMSUBCAT_TRINKETS_PERFORMANCE, {     ["black_core_2"] = { type = "Sprite", sprite = "effects/splashwake3", bone = "ValveBiped.Bip01_R_Hand", rel = "black_core", pos = Vector(0, 0.1, -0.201), size = { x = 7.697, y = 7.697 }, color = Color(255, 255, 255, 255), nocull = false, additive = true, vertexalpha = true, vertexcolor = true, ignorez = false},     ["black_core_2+"] = { type = "Sprite", sprite = "effects/splashwake1", bone = "ValveBiped.Bip01_R_Hand", rel = "black_core", pos = Vector(0, 0.1, -0.201), size = { x = 10, y = 10 }, color = Color(255, 255, 255, 255), nocull = false, additive = true, vertexalpha = true, vertexcolor = true, ignorez = false},     ["black_core"] = { type = "Model", model = "models/dav0r/hoverball.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(4, 2, 0), angle = Angle(0, 0, 0), size = Vector(0.349, 0.349, 0.349), color = Color(255, 255, 255, 255), surpresslightning = true, material = "models/shiny", skin = 0, bodygroup = {} } }, nil, "+15% jump height\n+10 speed") GM:AddSkillModifier(trinket, SKILLMOD_JUMPPOWER_MUL, 0.15) GM:AddSkillModifier(trinket, SKILLMOD_SPEED, 10) trinketwep.PermitDismantle = true  trinket, trinketwep = GM:AddTrinket("Miniature Forge", "mini_forge", false, ITEMSUBCAT_TRINKETS_OFFENSIVE, oweles, nil, "You cannot purchase weapons higher than tier 3\nUn-upgraded tier 3 or lower weapons have a 25% chance to shoot twice as many shots\nCannot be dropped, given or dismantled.") trinketwep.PermitDismantle = true trinketwep.Cursed = true  trinket, trinketwep = GM:AddTrinket("The Burning Ruby", "ruby", false, ITEMSUBCAT_TRINKETS_OFFENSIVE, hpweles, nil, "Dealing a significant amount of burning damage creates a massive explosion which ignites all zombies\nCannot be dropped, given or dismantled.") trinketwep.PermitDismantle = true trinketwep.Cursed = true  trinket, trinketwep = GM:AddTrinket("Shock Amethyst", "amethyst", false, ITEMSUBCAT_TRINKETS_OFFENSIVE, hpweles, nil, "Pulse slows can apply electroshocks over time\nElectroshocks deal +50% damage") trinketwep.PermitDismantle = true  trinket, trinketwep = GM:AddTrinket("Side Flakker", "side_flakker", false, ITEMSUBCAT_TRINKETS_OFFENSIVE, hpweles, nil, "Your weapons explode into flak every so often, scaling on the damage done\nCannot be dropped, given or dismantled.") trinketwep.PermitDismantle = true trinketwep.Cursed = true  trinket, trinketwep = GM:AddTrinket("Bleeding Bauble", "bleeding_bauble", false, ITEMSUBCAT_TRINKETS_DEFENSIVE, hpweles, nil, "Floating point numbers also heal you for 50% of the points\nYou can no longer resupply\nCannot be dropped, given or dismantled.") trinketwep.PermitDismantle = true trinketwep.Cursed = true  trinket, trinketwep = GM:AddTrinket("Symbol of Avarice", "symbol_of_avarice", false, ITEMSUBCAT_TRINKETS_PERFORMANCE, hpweles, nil, "Gain 50% bounty progress at the start of each wave") trinketwep.PermitDismantle = true  trinket, trinketwep = GM:AddTrinket("Machinist's Wheel", "machine_wheel", false, ITEMSUBCAT_TRINKETS_OFFENSIVE, hpweles, nil, "20% chance for reloading a weapon to refund the half the ammo on your next resupply") trinketwep.PermitDismantle = true  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Crimson Band",     Suffix  = "crimson_band",     Category  = ITEMSUBCAT_TRINKETS_DEFENSIVE,     WorldElements  = oweles,     ScrapScaling    = {5, 8, 12, 15} })) do     if quality >= 2 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_MAXIMUM_HP_TO_HEAL, 0.66 + 0.05 * (quality - 1), quality)     end      GM:AddTrinketModifier(trinket_skill, SKILLMOD_DAMAGE_MUL_ON_LOW_LIFE, 0.17 + 0.03 * quality, quality) end  trinket, trinketwep = GM:AddTrinket("Acid-Leech", "acid_leech", false, ITEMSUBCAT_TRINKETS_OFFENSIVE, hpweles, nil, "Acid does not need to be stacked to deal damage") trinketwep.PermitDismantle = true  trinket, trinketwep = GM:AddTrinket("Paper Filter", "paper_filter", false, ITEMSUBCAT_TRINKETS_OFFENSIVE, oweles, nil, "Throwing a flask causes 33% of all your attacks to have that flask effect for 7 seconds") trinketwep.PermitDismantle = true  trinket, trinketwep = GM:AddTrinket("Marooned Tear", "tear", false, ITEMSUBCAT_TRINKETS_DEFENSIVE, hpweles, nil, "Melee hits that would kill you leave you at 1 HP\nTrinket is consumed") trinketwep.PermitDismantle = true  local blcorew = {     ["black_core_2"] = { type = "Sprite", sprite = "effects/splashwake3", bone = "ValveBiped.Bip01_R_Hand", rel = "black_core", pos = Vector(0, 0.1, -0.201), size = { x = 7.697, y = 7.697 }, color = Color(0, 0, 0, 255), nocull = false, additive = false, vertexalpha = true, vertexcolor = true, ignorez = false},     ["black_core_2+"] = { type = "Sprite", sprite = "effects/splashwake1", bone = "ValveBiped.Bip01_R_Hand", rel = "black_core", pos = Vector(0, 0.1, -0.201), size = { x = 10, y = 10 }, color = Color(0, 0, 0, 255), nocull = false, additive = false, vertexalpha = true, vertexcolor = true, ignorez = false},     ["black_core"] = { type = "Model", model = "models/dav0r/hoverball.mdl", bone = "ValveBiped.Bip01_R_Hand", rel = "", pos = Vector(4, 2, 0), angle = Angle(0, 0, 0), size = Vector(0.349, 0.349, 0.349), color = Color(20, 20, 20, 255), surpresslightning = false, material = "models/shiny", skin = 0, bodygroup = {} } }  GM:AddTrinket("Bleak Soul", "bleaksoul", false, ITEMSUBCAT_TRINKETS_DEFENSIVE, blcorew, nil, "Blinds and knocks zombies away when attacked\nRecharges every 35 seconds")  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Aiming Visor",     Suffix  = "aiming_visor",     Category  = ITEMSUBCAT_TRINKETS_OFFENSIVE,     WorldElements  = oweles,     ScrapScaling    = {4, 10, 15, 19},     AddToArsenal    = true,     AddToWorth      = true })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_AIM_SPREAD_SCALED_MUL, -0.095 * quality, quality)      if quality >= 3 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_AIM_ASSIST, 512 + 256 * (quality - 2), quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Reload Vest",     Suffix  = "reload_vest",     Category  = ITEMSUBCAT_TRINKETS_OFFENSIVE,     WorldElements  = oweles,     ScrapScaling    = {6, 13, 19, 24},     AddToArsenal    = true,     AddToWorth      = true })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_RELOAD_SPEED_SCALED_MUL, 0.125 + (0.09 * (quality - 1)), quality)      if quality >= 3 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_AIM_SPREAD_SCALED_MUL, 0.09 * (quality - 2), quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Quick-Draw Satchel",     Suffix  = "quick_draw_satchel",     Category  = ITEMSUBCAT_TRINKETS_OFFENSIVE,     WorldElements  = oweles,     ScrapScaling    = {5, 10, 15, 20},     AddToArsenal    = true })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_DEPLOYSPEED_MUL, 0.15 * quality, quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Blueprints",     Suffix  = "blueprints",     Category  = ITEMSUBCAT_TRINKETS_SUPPORT,     WorldElements  = supweles,     ScrapScaling    = {5, 10, 15, 20},     AddToArsenal    = true,     AddToWorth      = true,     CustomPrefixes  = {"Standard", "Advanced", "Masterwork", "Synergistic"} })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_REPAIRRATE_MUL, 0.07 + 0.08 * quality, quality)      if quality == 4 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_PULSE_AMMO_PER_HAMMER_HIT, 0.5, quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Armor",     Suffix  = "armor",     Category  = ITEMSUBCAT_TRINKETS_DEFENSIVE,     WorldElements  = oweles,     ScrapScaling    = {7, 11, 15, 19},     AddToArsenal    = true,     AddToWorth      = true,     CustomPrefixes  = {"Leather", "Studded", "Kevlar", "Steel-Weave"} })) do     local reduction = -0.08 * quality      GM:AddTrinketModifier(trinket_skill, SKILLMOD_MELEE_DAMAGE_TAKEN_MUL, reduction, quality)      if quality >= 3 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_PROJECTILE_DAMAGE_TAKEN_MUL, reduction/2, quality)         GM:AddTrinketModifier(trinket_skill, SKILLMOD_SPEED, math.ceil((reduction + 0.12) * 150), quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Health Package",     Suffix  = "health_package",     Category  = ITEMSUBCAT_TRINKETS_DEFENSIVE,     WorldElements  = hpweles,     ScrapScaling    = {8, 13, 18, 21},     AddToArsenal    = true,     AddToWorth      = true })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_HEALTH, 10 + (7 * (quality - 1)), quality)      if quality >= 3 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_TRINKET_REGEN_DELAY, 12 - (quality - 3) * 2, quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Blood Bank",     Suffix  = "blood_bank",     Category  = ITEMSUBCAT_TRINKETS_DEFENSIVE,     WorldElements  = hpweles,     ScrapScaling    = {7, 13, 17, 22},     AddToArsenal    = true,     AddToWorth      = true,     CustomPrefixes  = {"Basic", "Hemo", "Sanguine", "Adreno"} })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_BLOODARMOR, 12 + (9 * (quality - 1)), quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_MELEE_DAMAGE_TO_BLOODARMOR_MUL, 0.07 + (0.01 * (quality - 1)), quality)      if quality >= 3 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_POISON_DAMAGE_TAKEN_MUL, 0.15 * (quality - 2), quality)     end      if quality == 4 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_MELEE_MOVEMENTSPEED_ON_KILL, 40, quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Cleanser",     Suffix  = "bio_cleanser",     Category  = ITEMSUBCAT_TRINKETS_DEFENSIVE,     WorldElements  = hpweles,     ScrapScaling    = {7, 11, 14, 17},     AddToArsenal    = true,     CustomPrefixes  = {"Antipoison", "Bio", "Detox", "Mutagenic"} })) do     local quality_bonus = quality == 4 and 0.12 or 0      GM:AddTrinketModifier(trinket_skill, SKILLMOD_POISON_DAMAGE_TAKEN_MUL, -0.1 - (quality * 0.05) - quality_bonus, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_POISON_SPEED_MUL, quality * -0.1, quality)      if quality >= 2 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_CLEANSE_RECOVERY, 25 - quality * 3, quality)     end      if quality >= 3 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_MELEE_DAMAGE_TAKEN_MUL, 0.17 * (quality - 2), quality)     end      if quality >= 4 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_CLEANSE_GAIN, 8, quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Force Booster",     Suffix  = "force_booster",     Category  = ITEMSUBCAT_TRINKETS_MELEE,     WorldElements  = mweles,     ScrapScaling    = {5, 11, 15, 20},     AddToArsenal    = true, })) do     local quality_mod = quality >= 4 and 1.4 or quality >= 1.3 and 1.2 or 1      GM:AddTrinketModifier(trinket_skill, SKILLMOD_MELEE_SWING_DELAY_MUL, -0.1 * quality * quality_mod, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_MELEE_KNOCKBACK_MUL, 0.07 * quality * quality_mod, quality)      if quality >= 3 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_MELEE_STAMINA_MUL, 0.05 + 0.05 * (quality - 3), quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Power Gauntlet",     Suffix  = "power_gauntlet",     Category  = ITEMSUBCAT_TRINKETS_MELEE,     WorldElements  = mweles,     ScrapScaling    = {5, 10, 14, 20},     AddToArsenal    = true, })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_MELEE_POWERATTACK_MUL, 0.07 + 0.08 * quality, quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Sharpening Stone",     Suffix  = "sharp_stone",     Category  = ITEMSUBCAT_TRINKETS_MELEE,     WorldElements  = mweles,     ScrapScaling    = {4, 10, 15, 20},     AddToArsenal    = true,     AddToWorth      = true })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_MELEE_SHARP_SCALING_DAMAGE, 0.05 + 0.05 * quality, quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Pulse Amp",     Suffix  = "pulse_amp",     Category  = ITEMSUBCAT_TRINKETS_SPECIAL,     WorldElements  = oweles,     ScrapScaling    = {5, 10, 15, 20},     AddToArsenal    = true,     CustomPrefixes  = {"Simple", "Charged", "Energised", "Unstable"} })) do     if quality <= 3 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_PULSE_WEAPON_SLOW_MUL, 0.1 * quality, quality)     else         GM:AddTrinketModifier(trinket_skill, SKILLMOD_PULSE_WEAPON_SLOW_MUL, -0.15, quality)         GM:AddTrinketModifier(trinket_skill, SKILLMOD_FULMINARIC_ARC, 72, quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Cascade Device",     Suffix  = "cascade",     Category  = ITEMSUBCAT_TRINKETS_SPECIAL,     WorldElements  = oweles,     ScrapScaling    = {7, 12, 16, 21},     AddToArsenal    = true,     CustomPrefixes  = {"Light", "Medium", "Resonance", "Hyper"} })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_PULSE_WEAPON_SLOW_MUL,         quality == 1 and -0.07 or         quality == 2 and -0.15 or         quality == 3 and -0.25 or                          -0.35, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_RESONANCE_THRESHOLD,         quality == 1 and 120 or         quality == 2 and 90 or                          60, quality)     if quality == 4 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_FULMINARIC_ARC, 54, quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Food Processor",     Suffix  = "processor",     Category  = ITEMSUBCAT_TRINKETS_SUPPORT,     WorldElements  = supweles,     ScrapScaling    = {4, 8, 12, 16},     AddToArsenal    = true,     AddToWorth      = true,     BaseDescription = "Can process food items into med ammo with RELOAD" })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_FOODEATTIME_MUL, -0.24 * quality, quality)     if quality >= 2 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_FOOD_PROCESSING_MUL, 0.17 * (quality - 1), quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Ignition Compound",     Suffix  = "ignite_compound",     Category  = ITEMSUBCAT_TRINKETS_SPECIAL,     WorldElements  = oweles,     ScrapScaling    = {10, 14, 18, 22},     AddToArsenal    = true })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_FIRE_DAMAGE_MUL, 0.08 * quality, quality)      if quality >= 2 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_FIRE_SPREAD_RADIUS, 48 + (quality - 1) * 16, quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Vials",     Suffix  = "vials",     Category  = ITEMSUBCAT_TRINKETS_SPECIAL,     WorldElements  = oweles,     ScrapScaling    = {10, 14, 18, 22},     AddToArsenal    = true,     CustomPrefixes  = {"Acid", "Acrid", "Corrosive", "Caustic"} })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_ACID_DAMAGE_MUL, 0.1 * quality, quality)      if quality >= 2 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_ACID_SPREAD_RADIUS, 32 + (quality - 1) * 8, quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Inductor",     Suffix  = "cryo_indu",     Category  = ITEMSUBCAT_TRINKETS_SPECIAL,     WorldElements  = oweles,     ScrapScaling    = {6, 11, 19, 22},     AddToArsenal    = true,     CustomPrefixes  = {"Cold", "Freeze", "Glacial", "Cryogenic"} })) do     if quality <= 3 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_COLD_WEAPON_SLOW_MUL, 0.1 * quality, quality)     end      if quality >= 2 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_ICE_SHATTER_CHANCE, quality == 2 and 0.2 or                                                                           quality == 3 and 0.5 or                                                                           1, quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Medical Tools",     Suffix  = "med_tools",     Category  = ITEMSUBCAT_TRINKETS_SUPPORT,     WorldElements  = supweles,     ScrapScaling    = {5, 10, 15, 20},     AddToArsenal    = true,     AddToWorth      = true, })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_MEDKIT_COOLDOWN_MUL, -0.05 * quality - 0.04, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_MEDGUN_FIRE_DELAY_MUL, -0.06 * quality - 0.05, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_MEDKIT_EFFECTIVENESS_MUL, 0.04 * quality, quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Guard Spikes",     Suffix  = "shield_spikes",     Category  = ITEMSUBCAT_TRINKETS_DEFENSIVE,     WorldElements  = deweles,     ScrapScaling    = {7, 12, 15, 18},     AddToArsenal    = true, })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_BLOCKBASH_DAMAGE, 17 + 9 * quality, quality)      if quality >= 2 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_STATUS_BOOST_ON_BLOCK_DURATION, 0.5 * (quality - 2) + 0.75, quality)         GM:AddTrinketModifier(trinket_skill, SKILLMOD_SOFTEN_ON_BLOCK_DURATION, 0.5 * (quality - 2) + 1.5, quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Protection Guard",     Suffix  = "fort_guard",     Category  = ITEMSUBCAT_TRINKETS_MELEE,     WorldElements  = mweles,     ScrapScaling    = {7, 12, 15, 18},     AddToArsenal    = true, })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_BLOCK_STAMINA_USAGE, -0.04 * quality, quality)      if quality >= 3 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_STAMINA_REGEN, 0.02 * (quality - 2), quality)     end      if quality >= 2 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_SELF_DAMAGE_TAKEN_WITH_MELEE, -0.15 * quality, quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Long Grip",     Suffix  = "long_grip",     Category  = ITEMSUBCAT_TRINKETS_MELEE,     WorldElements  = mweles,     ScrapScaling    = {5, 9, 14, 18},     AddToArsenal    = true, })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_MELEE_RANGE_FLAT, 3 + 1 * quality, quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Agility Aid",     Suffix  = "agile_aid",     Category  = ITEMSUBCAT_TRINKETS_PERFORMANCE,     WorldElements  = pweles,     ScrapScaling    = {5, 10, 15, 20},     AddToArsenal    = true,     AddToWorth      = true, })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_BARRICADE_PHASE_SPEED_MUL, 0.1 * quality, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_SIGIL_TELEPORT_MUL, -0.12 * quality, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_JUMPPOWER_MUL, 0.04 * quality, quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Auto Reloader",     Suffix  = "auto_reloader",     Category  = ITEMSUBCAT_TRINKETS_PERFORMANCE,     WorldElements  = oweles,     ScrapScaling    = {5, 7, 11, 15},     AddToArsenal    = true,     AddToWorth      = true })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_AUTO_RELOAD_MUL, 7 - quality, quality)      if quality == 4 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_AUTO_RELOAD_ALL_MUL, 6, quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Lift Frame",     Suffix  = "lift_frame",     Category  = ITEMSUBCAT_TRINKETS_PERFORMANCE,     WorldElements  = oweles,     ScrapScaling    = {4, 8, 15, 20},     AddToArsenal    = true,     AddToWorth      = true,     CustomPrefixes  = {"Basic", "Heavy", "Power", "Bulker"} })) do     if quality >= 3 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_UNARMED_SWING_DELAY_MUL, -0.05 * (quality - 2), quality)         GM:AddTrinketModifier(trinket_skill, SKILLMOD_UNARMED_DAMAGE_MUL, 0.4 * (quality - 2), quality)         GM:AddTrinketModifier(trinket_skill, SKILLMOD_MELEE_DAMAGE_MUL, -0.2 * (quality - 2), quality)     end      GM:AddTrinketModifier(trinket_skill, SKILLMOD_PROP_CARRY_SLOW_MUL, -0.2 * quality, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_DEPLOYABLE_PACKTIME_MUL, -0.15 * quality, quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Mag",     Suffix  = "ext_mag",     Category  = ITEMSUBCAT_TRINKETS_OFFENSIVE,     WorldElements  = oweles,     ScrapScaling    = {9, 14, 18, 22},     AddToArsenal    = true,     CustomPrefixes  = {"High Capacity", "Extended", "Super Extended", "Bullet-Rain"} })) do     if quality >= 3 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_MAG_SIZE_FOUR_EIGHT_MUL, 0.2 + 0.06 * (quality - 2), quality)         GM:AddTrinketModifier(trinket_skill, SKILLMOD_RELOADSPEED_MUL, -0.08 * (quality - 2), quality)     end      if quality >= 4 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_AIMSPREAD_MUL, -0.1, quality)         GM:AddTrinketModifier(trinket_skill, SKILLMOD_SPEED, -15, quality)     end      GM:AddTrinketModifier(trinket_skill, SKILLMOD_MAG_SIZE_EIGHT_MUL, 0.1 + 0.05 * (quality - 1), quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Supply Boost",     Suffix  = "resupplier",     Category  = ITEMSUBCAT_TRINKETS_SUPPORT,     WorldElements  = supweles,     ScrapScaling    = {3, 9, 15, 22},     AddToArsenal    = true,     AddToWorth      = true,     CustomPrefixes  = {"Simple", "Ample", "Heavy", "Motherloded"} })) do     if quality >= 4 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_RESUPPLY_CHANCE_TRINKET, 0.05, quality)     end      GM:AddTrinketModifier(trinket_skill, SKILLMOD_RESUPPLY_DELAY_MUL, -0.02 - 0.045 * quality, quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Alchemy Fluids",     Suffix  = "alch_chemicals",     Category  = ITEMSUBCAT_TRINKETS_SUPPORT,     WorldElements  = supweles,     ScrapScaling    = {8, 11, 13, 16},     AddToArsenal    = true,     AddToWorth      = true })) do     if quality >= 2 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_RESUPPLY_AMOUNT_MUL, -0.25 * (quality - 1), quality)     end      GM:AddTrinketModifier(trinket_skill, SKILLMOD_ALCHEMY_RESUPPLIES, 4 - (quality - 1), quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Necro Weakener",     Suffix  = "necro_weak",     Category  = ITEMSUBCAT_TRINKETS_SUPPORT,     WorldElements  = supweles,     ScrapScaling    = {5, 11, 15, 20},     AddToArsenal    = true })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_DEBUFF_DURATION_MUL, 0.15 * quality, quality)      if quality >= 3 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_DEBUFF_SPREAD_RADIUS, 60 + (quality - 2) * 15, quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Stim Injector",     Suffix  = "stim_injector",     Category  = ITEMSUBCAT_TRINKETS_SUPPORT,     WorldElements  = supweles,     ScrapScaling    = {6, 11, 16, 21},     AddToArsenal    = true })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_MED_BUFF_EFFECTIVENESS, 0.05 * quality, quality)      if quality >= 2 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_MED_BUFF_DURATION, 0.05 * (quality - 1), quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Field Charger",     Suffix  = "field_charge",     Category  = ITEMSUBCAT_TRINKETS_SUPPORT,     WorldElements  = supweles,     ScrapScaling    = {6, 10, 14, 18},     AddToArsenal    = true })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_FIELD_DELAY_MUL, -0.08 * quality, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_FIELD_RANGE_MUL, 0.08 * quality, quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Explosives",     Suffix  = "explosives",     Category  = ITEMSUBCAT_TRINKETS_OFFENSIVE,     WorldElements  = supweles,     ScrapScaling    = {7, 11, 16, 20},     AddToArsenal    = true,     CustomPrefixes  = {"Basic", "Reactive", "Slow-Reaction", "Deep Infused"} })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_EXP_DAMAGE_RADIUS, 0.03 * quality, quality)      if quality >= 2 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_EXP_DAMAGE_TAKEN_MUL, 0.2 * quality, quality)     end      if quality >= 3 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_EXP_DAMAGE_MUL, 0.05 * (quality - 2), quality)         GM:AddTrinketModifier(trinket_skill, SKILLMOD_RELOADSPEED_MUL, -0.1 * (quality - 2), quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Antibleeder",     Suffix  = "antibleeder",     Category  = ITEMSUBCAT_TRINKETS_DEFENSIVE,     WorldElements  = deweles,     ScrapScaling    = {5, 10, 15, 20},     AddToArsenal    = true })) do     if quality <= 3 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_BLEED_SPEED_MUL, -0.45 - (0.05 * quality), quality)     end      if quality >= 2 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_BLEED_DAMAGE_TAKEN_MUL, -0.17 * (quality - 1), quality)     end      if quality >= 3 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_MELEE_DAMAGE_TAKEN_MUL, 0.07  * (quality - 2), quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Explosion Vest",     Suffix  = "explosion",     Category  = ITEMSUBCAT_TRINKETS_DEFENSIVE,     WorldElements  = deweles,     ScrapScaling    = {5, 10, 15, 20},     AddToArsenal    = true })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_EXP_DAMAGE_TAKEN_MUL, -0.09 * quality, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_FIRE_DAMAGE_TAKEN_MUL, -0.14 * quality, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_SELF_DAMAGE_MUL, -0.02 * quality, quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Graviton Wall",     Suffix  = "graviton",     Category  = ITEMSUBCAT_TRINKETS_DEFENSIVE,     WorldElements  = deweles,     ScrapScaling    = {4, 8, 13, 18},     AddToArsenal    = true })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_PHYSICS_DAMAGE_TAKEN_MUL, -0.1 * quality, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_FALLDAMAGE_THRESHOLD_MUL, 0.1 * quality, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_FALLDAMAGE_DAMAGE_MUL, -0.1 * quality, quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Projectile Weight",     Suffix  = "proj_weight",     Category  = ITEMSUBCAT_TRINKETS_OFFENSIVE,     WorldElements  = oweles,     ScrapScaling    = {4, 8, 12, 16},     AddToArsenal    = true })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_PROJ_SPEED, -0.14 * quality, quality)      if quality >= 2 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_PROJECTILE_DAMAGE_MUL, 0.032 * (quality - 1), quality)         GM:AddTrinketModifier(trinket_skill, SKILLMOD_RELOADSPEED_MUL, -0.03 * (quality - 1), quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Projectile Rocket",     Suffix  = "proj_rocket",     Category  = ITEMSUBCAT_TRINKETS_OFFENSIVE,     WorldElements  = oweles,     ScrapScaling    = {4, 8, 12, 16}, })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_PROJ_SPEED, 0.25 * quality, quality)      if quality >= 2 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_PROJECTILE_DAMAGE_MUL, -0.02 * (quality - 1), quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Running Gear",     Suffix  = "run_gear",     Category  = ITEMSUBCAT_TRINKETS_PERFORMANCE,     WorldElements  = pweles,     ScrapScaling    = {4, 8, 13, 19},     AddToArsenal    = true,     AddToWorth      = true })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_SLOW_EFF_TAKEN_MUL, -0.12 * quality, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_LOW_HEALTH_SLOW_MUL, -0.12 * quality, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_KNOCKDOWN_RECOVERY_MUL, -0.12 * quality, quality) end  local use_adapter = "\nCan only use one round trinket" local use_attach = "\nCan only use one attachment trinket" local use_charger = "\nCan only use one charger trinket"  local round_quality_scaling = {     0.125, 0.25, 0.425, 0.625 }  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Ice Rounds",     Suffix  = "ice_rounds",     Category  = ITEMSUBCAT_TRINKETS_OFFENSIVE,     WorldElements  = oweles,     ScrapScaling    = {11, 13, 17, 21},     AddToArsenal    = true,     BaseDescription = "Tier 5 or lower guns cause ice slow based on the tier and damage" .. use_adapter })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_ROUNDS_MOD_ICE, -0.125 + round_quality_scaling[quality], quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Pulse Rounds",     Suffix  = "pulse_rounds",     Category  = ITEMSUBCAT_TRINKETS_OFFENSIVE,     WorldElements  = oweles,     ScrapScaling    = {11, 13, 17, 21},     AddToArsenal    = true,     BaseDescription = "Tier 5 or lower guns cause pulse slow based on the tier and damage" .. use_adapter })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_ROUNDS_MOD_PULSE, -0.125 + round_quality_scaling[quality], quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Flame Rounds",     Suffix  = "flame_rounds",     Category  = ITEMSUBCAT_TRINKETS_OFFENSIVE,     WorldElements  = oweles,     ScrapScaling    = {11, 13, 17, 21},     AddToArsenal    = true,     BaseDescription = "Tier 5 or lower guns can ignite based on tier and damage\n0.85x gun damage" .. use_adapter })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_ROUNDS_MOD_FLAME, -0.125 + round_quality_scaling[quality], quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Softening Rounds",     Suffix  = "softening_rounds",     Category  = ITEMSUBCAT_TRINKETS_OFFENSIVE,     WorldElements  = oweles,     ScrapScaling    = {11, 13, 17, 21},     AddToArsenal    = true,     BaseDescription = "Tier 5 or lower guns can inflict soften based on tier and damage\n0.93x gun damage" .. use_adapter })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_ROUNDS_MOD_SOFT, -0.125 + round_quality_scaling[quality], quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Acid Rounds",     Suffix  = "acid_rounds",     Category  = ITEMSUBCAT_TRINKETS_OFFENSIVE,     WorldElements  = oweles,     ScrapScaling    = {11, 13, 17, 21},     AddToArsenal    = true,     BaseDescription = "Tier 5 or lower guns can make zombies lose damage reduction based on tier and damage" .. use_adapter })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_ROUNDS_MOD_ACID, -0.125 + round_quality_scaling[quality], quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Borer Bullets",     Suffix  = "bore_bullets",     Category  = ITEMSUBCAT_TRINKETS_OFFENSIVE,     WorldElements  = oweles,     ScrapScaling    = {13, 14, 17, 21},     AddToArsenal    = true,     BaseDescription = "Tier 3 or lower bullet weapons can pierce an additional zombie\nAmmo type affects pierce damage\n0.8x base gun damage" })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_BULLET_MOD_BORE, 0.875 + 0.125 * quality, quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Bounty Attachment",     Suffix  = "bounty_attach",     Category  = ITEMSUBCAT_TRINKETS_MELEE,     WorldElements  = mweles,     ScrapScaling    = {12, 14, 17, 21},     AddToArsenal    = true,     BaseDescription = "Dealing enough damage with tier 5 or lower melee grants special trinkets" .. use_attach })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_ATTACH_BOUNTY, -0.125 + 0.125 * quality, quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Burning Attachment",     Suffix  = "burn_attach",     Category  = ITEMSUBCAT_TRINKETS_MELEE,     WorldElements  = mweles,     ScrapScaling    = {12, 14, 17, 21},     AddToArsenal    = true,     BaseDescription = "Tier 5 or lower melee can ignite based on tier and damage" .. use_attach })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_ATTACH_BURN, -0.125 + 0.125 * quality, quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Acid Attachment",     Suffix  = "acid_attach",     Category  = ITEMSUBCAT_TRINKETS_MELEE,     WorldElements  = mweles,     ScrapScaling    = {12, 14, 17, 21},     AddToArsenal    = true,     BaseDescription = "Tier 5 or lower melee can make zombies lose damage reduction based on tier and damage" .. use_attach })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_ATTACH_ACID, -0.125 + 0.125 * quality, quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Frost Attachment",     Suffix  = "ice_attach",     Category  = ITEMSUBCAT_TRINKETS_MELEE,     WorldElements  = mweles,     ScrapScaling    = {12, 14, 17, 21},     AddToArsenal    = true,     BaseDescription = "Tier 5 or lower melee cause ice slow based on the tier and damage" .. use_attach })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_ATTACH_ICE, -0.125 + 0.125 * quality, quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Electro Attachment",     Suffix  = "elec_attach",     Category  = ITEMSUBCAT_TRINKETS_MELEE,     WorldElements  = mweles,     ScrapScaling    = {12, 14, 17, 21},     AddToArsenal    = true,     BaseDescription = "Tier 5 or lower melee cause pulse slow based on the tier and damage" .. use_attach })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_ATTACH_PULSE, -0.125 + 0.125 * quality, quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Sapping Attachment",     Suffix  = "sap_attach",     Category  = ITEMSUBCAT_TRINKETS_MELEE,     WorldElements  = mweles,     ScrapScaling    = {12, 14, 17, 21},     AddToArsenal    = true,     BaseDescription = "Tier 5 or lower melee can reduce zombie damage based on tier and damage" .. use_attach })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_ATTACH_SAP, -0.125 + 0.125 * quality, quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Blade Charger",     Suffix  = "blade_charge",     Category  = ITEMSUBCAT_TRINKETS_MELEE,     WorldElements  = mweles,     ScrapScaling    = {18, 14, 17, 21},     AddToArsenal    = true,     BaseDescription = "Tier 5 or lower charged melee attacks can shoot a fan of blades every 5 seconds" .. use_charger })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_BLADE_CHARGE_EFF, 0.875 + 0.125 * quality, quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Elemental Locus",     Suffix  = "elemental_locus",     Category  = ITEMSUBCAT_TRINKETS_SPECIAL,     WorldElements  = oweles,     ScrapScaling    = {5, 9, 17, 22},     BaseDescription = "Reduced weapon base damage depending on tier",     AddToArsenal    = true,     CustomPrefixes  = {"Basic", "Eta", "Rho", "Omega"} })) do     local coeff =   quality == 1 and 0.3 or                     quality == 2 and 0.5 or                     quality == 3 and 0.75 or                     quality == 4 and 1      GM:AddTrinketModifier(trinket_skill, SKILLMOD_LOCUS_COEFFICIENT, coeff, quality)      if quality >= 2 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_SECONDARY_CHANCE, 0.1 * (quality - 1), quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Spectrum",     Suffix  = "spectrum",     Category  = ITEMSUBCAT_TRINKETS_SPECIAL,     WorldElements  = oweles,     ScrapScaling    = {10, 13, 18, 23},     AddToArsenal    = true,     CustomPrefixes  = {"Mundane", "Lensing", "Prism", "Multi"} })) do     local max_rounds_t1 =  quality <= 3 and 1 or                            2     local max_rounds_t2 =  quality <= 2 and 0 or                            1     local coeff =          quality == 1 and -0.3 or                            quality == 2 and -0.15 or                            -0.45      GM:AddTrinketModifier(trinket_skill, SKILLMOD_MAX_ROUNDS_T1, max_rounds_t1, quality)     if max_rounds_t2 > 0 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_MAX_ROUNDS_T2, max_rounds_t2, quality)     end     GM:AddTrinketModifier(trinket_skill, SKILLMOD_ROUND_EFF_MUL_SPECTRUM, coeff, quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Flight Booster",     Suffix  = "flight_booster",     Category  = ITEMSUBCAT_TRINKETS_PERFORMANCE,     WorldElements  = oweles,     ScrapScaling    = {6, 10, 13, 16},     AddToArsenal    = true, })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_CONTROLLABLE_HEALTH_MUL, 0.12 * quality, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_CONTROLLABLE_SPEED_MUL, 0.12 * quality, quality)     GM:AddTrinketModifier(trinket_skill, SKILLMOD_MANHACK_DAMAGE_MUL, 0.12 * quality, quality) end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Energy Bracelet",     Suffix  = "energy_bracelet",     Category  = ITEMSUBCAT_TRINKETS_PERFORMANCE,     WorldElements  = pweles,     ScrapScaling    = {5, 11, 17, 23},     AddToArsenal    = true,     AddToWorth      = true })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_STAMINA_REGEN, 0.015 + 0.03 * quality, quality)      if quality >= 2 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_MELEE_STAMINA_MUL, -0.015 * (quality - 1), quality)     end      if quality >= 3 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_DODGE_STAMINA_MUL, -0.03 * (quality - 2), quality)     end end  for quality, trinket_skill in pairs(GM:AddQualityTrinket({     Name  = "Evasion Cloak",     Suffix  = "evasion_cloak",     Category  = ITEMSUBCAT_TRINKETS_PERFORMANCE,     WorldElements  = pweles,     ScrapScaling    = {7, 11, 15, 19},     AddToArsenal    = true })) do     GM:AddTrinketModifier(trinket_skill, SKILLMOD_DODGE_DURATION_MUL, 0.11 * quality, quality)      if quality >= 3 then         GM:AddTrinketModifier(trinket_skill, SKILLMOD_MELEE_DAMAGE_TAKEN_MUL, 0.05 * (quality - 1), quality)     end end