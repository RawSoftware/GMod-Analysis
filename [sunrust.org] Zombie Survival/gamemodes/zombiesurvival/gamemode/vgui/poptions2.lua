 GM.CheckboxOptions = {} GM.ColorPickerOptions = {} GM.SliderOptions = {} GM.DropDownOptions = {}  function GM:AddNewCheckBoxOption(name, convar, cat)  self.CheckboxOptions[#self.CheckboxOptions + 1] = {Name = name, Convar = convar, Cat = cat} end  function GM:AddNewColorPickerOption(name, convars, cat)  self.ColorPickerOptions[#self.ColorPickerOptions + 1] = {Name = name, Convars = convars, Cat = cat} end  function GM:AddNewSliderOption(name, convar, decimals, min, max, cat)  self.SliderOptions[#self.SliderOptions + 1] = {Name = name, Convar = convar, Decimals = decimals, Min = min, Max = max, Cat = cat} end  function GM:AddNewDropDownOption(name, convar, option_mapping, binding, cat)  self.DropDownOptions[#self.DropDownOptions + 1] = {Name = name, Convar = convar, OptionMapping = option_mapping, Binding = binding, Cat = cat} end  function GM:BuildOptions()  self.CheckboxOptions = {}  self.ColorPickerOptions = {}  self.SliderOptions = {}  self.DropDownOptions = {}   self:AddNewCheckBoxOption("Always show stamina",              "zs_staminaalways",       OPTIONS_CATEGORY_INTERFACE)  self:AddNewCheckBoxOption("Always show demiboss bar",                   "zs_demialways",       OPTIONS_CATEGORY_INTERFACE)  self:AddNewCheckBoxOption("Display experience",  "zs_drawxp",   OPTIONS_CATEGORY_INTERFACE)  self:AddNewCheckBoxOption("Cooldown rings on melee",  "zs_cooldownringdisplay", OPTIONS_CATEGORY_INTERFACE)  self:AddNewCheckBoxOption("Cooldown rings on food",  "zs_cooldownringdisplayfood", OPTIONS_CATEGORY_INTERFACE)  self:AddNewCheckBoxOption("Cooldown rings on reloading",  "zs_cooldownringdisplayreload", OPTIONS_CATEGORY_INTERFACE)  self:AddNewCheckBoxOption("Cooldown ring values",  "zs_cooldownringvaluedisplay", OPTIONS_CATEGORY_INTERFACE)  self:AddNewCheckBoxOption("Enable damage indicators",  "zs_damagefloaters",   OPTIONS_CATEGORY_INTERFACE)  self:AddNewCheckBoxOption("Enable damage indicators through walls",  "zs_damagefloaterswalls",OPTIONS_CATEGORY_INTERFACE)  self:AddNewCheckBoxOption("Enable font effects",  "zs_fonteffects", OPTIONS_CATEGORY_INTERFACE)  self:AddNewCheckBoxOption("Enable current points on scoreboard",  "zs_scoreboardpoints", OPTIONS_CATEGORY_INTERFACE)  self:AddNewCheckBoxOption("Enable classic fear-o-meter messages",  "zs_beattext", OPTIONS_CATEGORY_INTERFACE)  self:AddNewCheckBoxOption("Enable message beacon visibility",  "zs_messagebeaconshow",   OPTIONS_CATEGORY_INTERFACE)  self:AddNewCheckBoxOption("Show short status names",          "zs_statusshort",       OPTIONS_CATEGORY_INTERFACE)  self:AddNewCheckBoxOption("No point floaters",  "zs_nofloatingscore",   OPTIONS_CATEGORY_INTERFACE)  self:AddNewCheckBoxOption("No status floaters",  "zs_nofloatingstatus",   OPTIONS_CATEGORY_INTERFACE)  self:AddNewSliderOption("Cooldown ring size",  "zs_cooldownringsize",  1, 0, 1,  OPTIONS_CATEGORY_INTERFACE)  self:AddNewSliderOption("Cooldown ring spacing",  "zs_cooldownringspacing",  1, 0, 1,  OPTIONS_CATEGORY_INTERFACE)  self:AddNewSliderOption("Damage number size",  "zs_dmgnumberscale",  1, 0.5, 2,  OPTIONS_CATEGORY_INTERFACE)  self:AddNewSliderOption("Damage number speed", "zs_dmgnumberspeed",  1, 0, 1,  OPTIONS_CATEGORY_INTERFACE)  self:AddNewSliderOption("Damage number lifetime",  "zs_dmgnumberlife",  1, 0.2, 1.5,OPTIONS_CATEGORY_INTERFACE)  self:AddNewSliderOption("Kill feed lifetime",  "zs_killfeedtime",  1, 0.3, 1.5,OPTIONS_CATEGORY_INTERFACE)  self:AddNewSliderOption("Interface size",  "zs_interfacesize",  1, 0.7, 1.6,OPTIONS_CATEGORY_INTERFACE)  self:AddNewSliderOption("Icon visibility",  "zs_iconvisibility",  2, 0, 1,    OPTIONS_CATEGORY_INTERFACE)  self:AddNewSliderOption("HUD - Fear Meter X",  "zs_fearmeterx",  0, -3000, 3000,OPTIONS_CATEGORY_INTERFACE)  self:AddNewSliderOption("HUD - Fear Meter Y",  "zs_fearmetery",  0, 0, 2000,OPTIONS_CATEGORY_INTERFACE)  self:AddNewSliderOption("HUD - Status Bar X",          "zs_statusbarx",  3, 0, 1,    OPTIONS_CATEGORY_INTERFACE)  self:AddNewSliderOption("HUD - Status Bar Y",          "zs_statusbary",  3, 0, 1,    OPTIONS_CATEGORY_INTERFACE)  self:AddNewSliderOption("HUD - Stamina Bar Y",          "zs_staminay",      3, 0, 1,    OPTIONS_CATEGORY_INTERFACE)  self:AddNewSliderOption("HUD - Stamina Bar Width",      "zs_staminawid",  0, 0, 800,  OPTIONS_CATEGORY_INTERFACE)  self:AddNewDropDownOption("Weapon HUD display style",  "zs_weaponhudmode",  {  [0] = "Display in 3D",  [1] = "Display in 2D",  [2] = "Display both"  }, "WeaponHUDMode", OPTIONS_CATEGORY_INTERFACE)  self:AddNewDropDownOption("Interface font",  "zs_font",  {  [0] = "Typewriter",  [1] = "Ghoulish",  [2] = "Classic"  }, "ZSFont", OPTIONS_CATEGORY_INTERFACE)  self:AddNewDropDownOption("Target health display",  "zs_healthtargetdisplay",  {  [0] = "% of health",  [1] = "Health amount",  }, "HealthTargetDisplay", OPTIONS_CATEGORY_INTERFACE)  self:AddNewColorPickerOption("Cooldown ring - Primary color",  {  SetConVarR = "zs_cooldownringprimary_colr",  SetConVarG = "zs_cooldownringprimary_colg",  SetConVarB = "zs_cooldownringprimary_colb",  SetConVarA = "zs_cooldownringprimary_cola"  }, OPTIONS_CATEGORY_INTERFACE)  self:AddNewColorPickerOption("Cooldown ring - Secondary color",  {  SetConVarR = "zs_cooldownringsecondary_colr",  SetConVarG = "zs_cooldownringsecondary_colg",  SetConVarB = "zs_cooldownringsecondary_colb",  SetConVarA = "zs_cooldownringsecondary_cola"  }, OPTIONS_CATEGORY_INTERFACE)  self:AddNewColorPickerOption("Damage indicator color",  {  SetConVarR = "zs_damagenumber_colr",  SetConVarG = "zs_damagenumber_colg",  SetConVarB = "zs_damagenumber_colb"  }, OPTIONS_CATEGORY_INTERFACE)  self:AddNewColorPickerOption("Headshot indicator color",  {  SetConVarR = "zs_damagenumber_h_colr",  SetConVarG = "zs_damagenumber_h_colg",  SetConVarB = "zs_damagenumber_h_colb"  }, OPTIONS_CATEGORY_INTERFACE)   self:AddNewCheckBoxOption("Disable iron sights view model translation",  "zs_noironsights",   OPTIONS_CATEGORY_OTHER)  self:AddNewCheckBoxOption("Disable special centred view models",  "zs_disablecentredmodels", OPTIONS_CATEGORY_OTHER)  self:AddNewCheckBoxOption("Disable ironsight scopes",  "zs_disablescopes", OPTIONS_CATEGORY_OTHER)  self:AddNewCheckBoxOption("Don't hide arsenal/resupply packs",  "zs_hidepacks", OPTIONS_CATEGORY_OTHER)  self:AddNewCheckBoxOption("Don't hide friends via transparency",  "zs_showfriends", OPTIONS_CATEGORY_OTHER)  self:AddNewCheckBoxOption("Hide view models",  "zs_hideviewmodels", OPTIONS_CATEGORY_OTHER)  self:AddNewSliderOption("Ironsight zoom scale",  "zs_ironsightzoom",  2, 0, 1, OPTIONS_CATEGORY_OTHER)   self:AddNewCheckBoxOption("Draw crosshair in ironsights",  "zs_ironsightscrosshair", OPTIONS_CATEGORY_CROSSHAIR)  self:AddNewCheckBoxOption("Fixed crosshair size",  "zs_fixedcrosshair", OPTIONS_CATEGORY_CROSSHAIR)  self:AddNewColorPickerOption("Crosshair primary color",  {  SetConVarR = "zs_crosshair_colr",  SetConVarG = "zs_crosshair_colg",  SetConVarB = "zs_crosshair_colb",  SetConVarA = "zs_crosshair_cola"  }, OPTIONS_CATEGORY_CROSSHAIR)  self:AddNewColorPickerOption("Crosshair secondary color",  {  SetConVarR = "zs_crosshair_colr2",  SetConVarG = "zs_crosshair_colg2",  SetConVarB = "zs_crosshair_colb2",  SetConVarA = "zs_crosshair_cola2"  }, OPTIONS_CATEGORY_CROSSHAIR)  self:AddNewSliderOption("Crosshair lines",  "zs_crosshairlines",  0, 2, 8,  OPTIONS_CATEGORY_CROSSHAIR)  self:AddNewSliderOption("Crosshair offset",  "zs_crosshairoffset",  0, 0, 90,  OPTIONS_CATEGORY_CROSSHAIR)  self:AddNewSliderOption("Crosshair thickness",  "zs_crosshairthickness",  1, 0.5, 2,  OPTIONS_CATEGORY_CROSSHAIR)  self:AddNewSliderOption("Crosshair spoke length",  "zs_crosshairlength",  1, 0, 2,  OPTIONS_CATEGORY_CROSSHAIR)  self:AddNewSliderOption("Crosshair extra spacing",  "zs_crosshairspacing",  1, 0, 20,  OPTIONS_CATEGORY_CROSSHAIR)   self:AddNewCheckBoxOption("Always third person knockdown camera",  "zs_thirdpersonknockdown",  OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Disable world weapon lights (more fps)",  "zs_disableworldweaponlights",  OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Disable human weapon models as zombie",  "zs_nowepsaszombie",   OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Disable bullet blood impact effects",  "zs_disablebloodimpacts",   OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Enable sigil corner health (less fps)",  "zs_drawdetailsigilhealth",  OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Enable post processing",  "zs_postprocessing",   OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Enable color modification",  "zs_colormod",   OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Enable dropped item beams",  "zs_droppeditembeams",   OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Enable pain flashes",  "zs_drawpainflash",   OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Enable human health auras",  "zs_auras",   OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Enable multicore rendering (more fps)",  "gmod_mcore_test",   OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Enable threaded bones (more fps)",  "cl_threaded_bone_setup",   OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Enable detailed props (less fps)",  "r_drawdetailprops",   OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Enable water splashes (less fps)",  "cl_show_splashes",   OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Enable water reflections (less fps)",  "r_waterdrawreflection",   OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Enable flashlight models",  "r_flashlightdepthtexture", OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Enable bullet flecks (less fps)",  "r_drawflecks",  OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Enable ragdoll fading",  "zs_ragdollfade",   OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Allow boss ragdoll fading",  "zs_ragdollfadebosses", OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Always fade headcrab ragdolls",  "zs_ragdollfadeheadcrabs",  OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Immersive hand models (needs map change)",   "zs_customviewmodelhands",  OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Film mode (disable HUD)",  "zs_filmmode",   OPTIONS_CATEGORY_EFFECTS)  self:AddNewCheckBoxOption("Simple force field effects",  "zs_simplefields",   OPTIONS_CATEGORY_EFFECTS)     self:AddNewSliderOption("Particle amount",  "zs_particleamount",  1, 0, 100, OPTIONS_CATEGORY_EFFECTS)     self:AddNewSliderOption("Particle draw distance",  "zs_particledistance",  0, 0, 2048, OPTIONS_CATEGORY_EFFECTS)     self:AddNewSliderOption("Ragdoll fade time",  "zs_ragdollfadetime",  1, 0, 5, OPTIONS_CATEGORY_EFFECTS)     self:AddNewSliderOption("Fade minimum nearby needed", "zs_ragdollfademin", 0, 0, 75, OPTIONS_CATEGORY_EFFECTS)     self:AddNewSliderOption("Fade minimum nearby radius", "zs_ragdollfadedist", 0, 0, 300, OPTIONS_CATEGORY_EFFECTS)  self:AddNewDropDownOption("Dropped item render type",  "zs_droppeditemrendertype",  {  [0] = "Default rendering",  [1] = "Simple default rendering",  [2] = "Wireframe",  [3] = "Painted",  [4] = "Blob",  [5] = "None",  }, "DroppedItemRendering", OPTIONS_CATEGORY_EFFECTS)  self:AddNewColorPickerOption("Health aura color - Full health",  {  SetConVarR = "zs_auracolor_full_r",  SetConVarG = "zs_auracolor_full_g",  SetConVarB = "zs_auracolor_full_b",  }, OPTIONS_CATEGORY_EFFECTS)  self:AddNewColorPickerOption("Health aura color - No health",  {  SetConVarR = "zs_auracolor_empty_r",  SetConVarG = "zs_auracolor_empty_g",  SetConVarB = "zs_auracolor_empty_b",  }, OPTIONS_CATEGORY_EFFECTS)   self:AddNewCheckBoxOption("Enable dynamic ambient music",  "zs_beats",   OPTIONS_CATEGORY_SOUND)  self:AddNewCheckBoxOption("Enable last human music",  "zs_playmusic",   OPTIONS_CATEGORY_SOUND)  self:AddNewCheckBoxOption("Enable escape music",  "zs_playescapedmusic",   OPTIONS_CATEGORY_SOUND)  self:AddNewSliderOption("Music volume",  "zs_beatsvolume",  0, 0, 100, OPTIONS_CATEGORY_SOUND)  self:AddNewDropDownOption("Human ambient beat set",  "zs_beatset_human",  self.GetHumanBeats,  "BeatSetHuman",  OPTIONS_CATEGORY_SOUND)  self:AddNewDropDownOption("Zombie ambient beat set",  "zs_beatset_zombie",   self.GetZombieBeats,  "BeatSetZombie",  OPTIONS_CATEGORY_SOUND)   self:AddNewCheckBoxOption("Always volunteer to start as a zombie",  "zs_alwaysvolunteer",   OPTIONS_CATEGORY_GAMEPLAY)  self:AddNewCheckBoxOption("Always quick buy from arsenals/remantlers",  "zs_alwaysquickbuy",   OPTIONS_CATEGORY_GAMEPLAY)  self:AddNewCheckBoxOption("Automatic suicide when changing classes",  "zs_suicideonchange",   OPTIONS_CATEGORY_GAMEPLAY)  self:AddNewCheckBoxOption("Disable automatic redeeming",  "zs_noredeem",   OPTIONS_CATEGORY_GAMEPLAY)  self:AddNewCheckBoxOption("Disable demiboss redeems",      "zs_nodemiredeem",   OPTIONS_CATEGORY_GAMEPLAY)  self:AddNewCheckBoxOption("Disable medical auras",  "zs_disablemedicalaura", OPTIONS_CATEGORY_GAMEPLAY)  self:AddNewCheckBoxOption("Disable giving items to non zs-friends",  "zs_friendonlygive", OPTIONS_CATEGORY_GAMEPLAY)  self:AddNewCheckBoxOption("Disable using medical tools on non zs-friends",  "zs_friendonlyheal", OPTIONS_CATEGORY_GAMEPLAY)  self:AddNewCheckBoxOption("Disable use key to deposit ammo in deployables", "zs_nousetodeposit",  OPTIONS_CATEGORY_GAMEPLAY)  self:AddNewCheckBoxOption("Disable use to pickup props",  "zs_nopickupprops",  OPTIONS_CATEGORY_GAMEPLAY)  self:AddNewCheckBoxOption("Disable charge attack view punch",  "zs_noheavyviewpunch",  OPTIONS_CATEGORY_GAMEPLAY)  self:AddNewCheckBoxOption("Disable auto switching weapons",  "zs_disableautoswitch",  OPTIONS_CATEGORY_GAMEPLAY)  self:AddNewCheckBoxOption("Disable packing others deployables",  "zs_nopackothers",          OPTIONS_CATEGORY_GAMEPLAY)  self:AddNewCheckBoxOption("Disable melee charge attacks",          "zs_nochargeattack",      OPTIONS_CATEGORY_GAMEPLAY)  self:AddNewCheckBoxOption("Enable hit sounds",  "zs_hitsounds",  OPTIONS_CATEGORY_GAMEPLAY)  self:AddNewCheckBoxOption("Prevent being picked as boss zombie",  "zs_nobosspick",  OPTIONS_CATEGORY_GAMEPLAY)  self:AddNewSliderOption("Prop rotation sensitivity",  "zs_proprotationsens",  1, 0.1, 4,  OPTIONS_CATEGORY_GAMEPLAY)  self:AddNewSliderOption("Transparency radius",  "zs_transparencyradius",  0, 0, self.TransparencyRadiusMax,  OPTIONS_CATEGORY_GAMEPLAY)  self:AddNewSliderOption("Transparency radius (3p)", "zs_transparencyradius3p",  0, 0, self.TransparencyRadiusMax,  OPTIONS_CATEGORY_GAMEPLAY)  self:AddNewSliderOption("Low prop health %", "zs_showlowprophealth",  2, 0, 1,  OPTIONS_CATEGORY_GAMEPLAY)  self:AddNewDropDownOption("Prop rotation snap angle",  "zs_proprotationsnap",  {  [15] = "15 degrees",  [30] = "30 degrees",  [45] = "45 degrees",  [0] = "No snap",  }, "PropRotationSnap", OPTIONS_CATEGORY_GAMEPLAY) end  function GM:GetHumanBeats()  local tbl = {  ["none"] = "none",  ["default"] = "default"  }   for setname in pairs(GAMEMODE.Beats) do  if setname ~= GAMEMODE.BeatSetHumanDefualt then  tbl[setname] = setname  end  end   return tbl end function GM:GetZombieBeats()  local tbl = {  ["none"] = "none",  ["default"] = "default"  }   for setname in pairs(GAMEMODE.Beats) do  if setname ~= GAMEMODE.BeatSetZombieDefault then  tbl[setname] = setname  end  end   return tbl end  OPTIONS_CATEGORY_GAMEPLAY = 1 OPTIONS_CATEGORY_EFFECTS = 2 OPTIONS_CATEGORY_INTERFACE = 3 OPTIONS_CATEGORY_CROSSHAIR = 4 OPTIONS_CATEGORY_SOUND = 5 OPTIONS_CATEGORY_OTHER = 6  GM.OptionsMenuCategories = {  [OPTIONS_CATEGORY_GAMEPLAY]  = "Gameplay",  [OPTIONS_CATEGORY_EFFECTS]  = "Performance",  [OPTIONS_CATEGORY_INTERFACE]  = "Interface",  [OPTIONS_CATEGORY_CROSSHAIR]  = "Crosshair",  [OPTIONS_CATEGORY_SOUND]  = "Sound",  [OPTIONS_CATEGORY_OTHER]  = "Other", }  function GM:MakeOptionsMenu()  if self.OptionsMenu then  local menu = self.OptionsMenu   menu:SetVisible(true)  menu:MakePopup()  return  else  self:BuildOptions()  end   local screenscale = BetterScreenScale()  local wid, hei = math.min(ScrW(), 650) * screenscale, math.min(ScrH(), 650) * screenscale   local y = 8   local frame = vgui.Create("DFrame")  frame:SetDeleteOnClose(false)  frame:SetSize(wid, hei)  frame:SetTitle(" ")  frame:Center()   local label = EasyLabel(frame, "Options", "ZSScoreBoardTitle", color_white)  label:SetPos(wid * 0.5 - label:GetWide() * 0.5, y)  y = y + label:GetTall() + 64   self.OptionsMenu = frame  self.OptionsMenu.Lists = {}  self.OptionsMenu.Buttons = {}   for i = 1, #self.OptionsMenuCategories do  local list = vgui.Create("DPanelList", frame)  list:EnableVerticalScrollbar()  list:EnableHorizontal(false)  list:SetSize(wid - 24, hei - y - 12)  list:SetPos(12, y)  list:SetPadding(8)  list:SetSpacing(8)   local tbn = EasyButton(frame, self.OptionsMenuCategories[i], 2, 8)  tbn:SetFont("ZSHUDFontTiny")  tbn:SetAlpha(i == 1 and 255 or 70)  tbn:MoveBelow(label, 16)  tbn:SetContentAlignment(5)  tbn:SetSize(100 * screenscale, 32 * screenscale)  tbn:AlignLeft(8 + (i - 1) * 108 * screenscale)   tbn.DoClick = function(me)  for k, v in pairs(self.OptionsMenu.Lists) do  v:SetVisible(k == i)  self.OptionsMenu.Buttons[k]:SetAlpha(k == i and 255 or 70)  end  end   for _, v in ipairs(self.CheckboxOptions) do  if v.Cat == i then  local check = vgui.Create("DEXCheckBoxLabel", frame)  check:SetText(v.Name)  check:SetConVar(v.Convar)  check:SetFont("ZSHUDFontSmallest")  check:SizeToContents()  list:AddItem(check)  end  end  for _, v in ipairs(self.ColorPickerOptions) do  if v.Cat == i then  list:AddItem(EasyLabel(frame, v.Name, "ZSHUDFontSmallest", color_white))  local colpicker = vgui.Create("DColorMixer", frame)  colpicker:SetAlphaBar(v.Convars.SetConVarA)  colpicker:SetPalette(false)  colpicker:SetConVarR(v.Convars.SetConVarR)  colpicker:SetConVarG(v.Convars.SetConVarG)  colpicker:SetConVarB(v.Convars.SetConVarB)  colpicker:SetConVarA(v.Convars.SetConVarA)  colpicker:SetTall(90 * screenscale)  list:AddItem(colpicker)  end  end  for _, v in ipairs(self.SliderOptions) do  if v.Cat == i then  local slider = vgui.Create("DNumSlider", frame)  slider:SetDecimals(v.Decimals)  slider:SetMinMax(v.Min, v.Max)  slider:SetConVar(v.Convar)  slider:SetText(v.Name)  slider.Label:SetFont("ZSHUDFontSmallest")  slider:SizeToContents()  list:AddItem(slider)  end  end  for _, v in ipairs(self.DropDownOptions) do  if v.Cat == i then  list:AddItem(EasyLabel(frame, v.Name, "ZSHUDFontSmallest", color_white))  local dropdown = vgui.Create("DComboBox", frame)  dropdown:SetMouseInputEnabled(true)   local option_mapping = isfunction(v.OptionMapping) and v.OptionMapping() or v.OptionMapping   for key, val in pairs(option_mapping) do  dropdown:AddChoice(val)  end  dropdown.OnSelect = function(me, index, value, data)  RunConsoleCommand(v.Convar, table.KeysFromValue(option_mapping, value)[1])  end   dropdown:SetText(option_mapping[GAMEMODE[v.Binding]] or "default")  dropdown:SetTextColor(color_black)  dropdown:SetTall(30 * screenscale)  list:AddItem(dropdown)  end  end   list:SetVisible(i == 1)  self.OptionsMenu.Lists[i] = list  self.OptionsMenu.Buttons[i] = tbn  end   frame:MakePopup() end  function GM:ClearOptionsMenu()  if self.OptionsMenu then  self.OptionsMenu:SetVisible(false)  self.OptionsMenu = nil  end end 